file_name,functions,num_func,only_functions,unique_functions,unique_functions_num,libraries,num_lib,library_binary,num_lines,score,medal,upvotes,notes
alim-copy-eda-basic-fe-and-lgb.py,"LabelEncoder,get_ipython,None.run_line_magic,pd.set_option,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,application_train.head,application_train.TARGET.value_counts,pd.crosstab,pd.crosstab,application_train.groupby,None.mean,None.head,application_train.OWN_CAR_AGE.mean,print,print,print,pd.crosstab,pd.crosstab,application_train.value_counts,pd.crosstab,application_train.groupby,None.agg,None.reset_index,None.sort_index,application_trainapplication_train.value_counts,pd.crosstab,None.style.background_gradient,None.highlight_null,print,application_train.isnull,plt.boxplot,plt.title,sns.countplot,plt.xticks,plt.title,sns.countplot,plt.title,plt.subplots,plt.subplot,sns.countplot,plt.subplot,sns.countplot,plt.subplot,sns.countplot,plt.subplot,sns.countplot,sns.boxplot,plt.title,sns.boxplot,plt.title,application_train.groupby,None.agg,None.reset_index,plt.hist,plt.title,plt.hist,plt.title,plt.hist,plt.title,sns.boxplot,plt.title,sns.boxplot,plt.title,application_train.groupby,None.agg,plt.hist,plt.title,plt.hist,plt.title,plt.hist,plt.title,plt.hist,plt.title,plt.hist,plt.title,application_train.groupby,None.agg,application_train.groupby,None.agg,np.log1p,np.log1p,application_train.fillna,application_train.mean,np.log1p,np.log1p,np.log1p,np.log1p,application_test.fillna,application_test.mean,list,le.fit,le.transform,le.transform,train.head,train.fillna,test.fillna,train.head,train.drop,test.drop,train_test_split,lgb.train,lgb.plot_importance,np.zeros,StratifiedKFold,np.zeros,enumerate,lgb.LGBMClassifier,clf.fit,clf.predict,test.copy,sub.to_csv",119,"['LabelEncoder', 'get_ipython', 'run_line_magic', 'set_option', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'head', 'TARGET', 'crosstab', 'crosstab', 'groupby', 'mean', 'head', 'OWN_CAR_AGE', 'print', 'print', 'print', 'crosstab', 'crosstab', 'value_counts', 'crosstab', 'groupby', 'agg', 'reset_index', 'sort_index', 'value_counts', 'crosstab', 'style', 'highlight_null', 'print', 'isnull', 'boxplot', 'title', 'countplot', 'xticks', 'title', 'countplot', 'title', 'subplots', 'subplot', 'countplot', 'subplot', 'countplot', 'subplot', 'countplot', 'subplot', 'countplot', 'boxplot', 'title', 'boxplot', 'title', 'groupby', 'agg', 'reset_index', 'hist', 'title', 'hist', 'title', 'hist', 'title', 'boxplot', 'title', 'boxplot', 'title', 'groupby', 'agg', 'hist', 'title', 'hist', 'title', 'hist', 'title', 'hist', 'title', 'hist', 'title', 'groupby', 'agg', 'groupby', 'agg', 'log1p', 'log1p', 'fillna', 'mean', 'log1p', 'log1p', 'log1p', 'log1p', 'fillna', 'mean', 'list', 'fit', 'transform', 'transform', 'head', 'fillna', 'fillna', 'head', 'drop', 'drop', 'train_test_split', 'train', 'plot_importance', 'zeros', 'StratifiedKFold', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict', 'copy', 'to_csv']","['LabelEncoder', 'get_ipython', 'run_line_magic', 'set_option', 'read_csv', 'head', 'TARGET', 'crosstab', 'groupby', 'mean', 'OWN_CAR_AGE', 'print', 'value_counts', 'agg', 'reset_index', 'sort_index', 'style', 'highlight_null', 'isnull', 'boxplot', 'title', 'countplot', 'xticks', 'subplots', 'subplot', 'hist', 'log1p', 'fillna', 'list', 'fit', 'transform', 'drop', 'train_test_split', 'train', 'plot_importance', 'zeros', 'StratifiedKFold', 'enumerate', 'LGBMClassifier', 'predict', 'copy', 'to_csv']",42,"['numpy', 'pandas', 'seaborn', 'datetime\n', 'lightgbm', 'scipy', 'sklearn', 'wordcloud', 'collections', 'nltk', 'os\n', 'xgboost', 'matplotlib']",13,"[1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",564,0.5,None,0,
home-credit-difficult.py,"os.walk,print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,application_train.replace,application_test.replace,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,application_train.drop,application_train.corr,None.sort_values,print,print,pd.concat,data.head,globals,globals,LabelEncoder,len,le.fit,le.transform,print,pd.get_dummies,print,data.fillna,data.fillna,data.fillna,len,len,X_train.head,X_test.head,np.zeros,KFold,enumerate,lgb.Dataset,lgb.Dataset,lgb.train,model.predict,model.predict,y_preds.append,models.append,oof_train.astype,roc_auc_score,y_pred.astype,sub.to_csv,sub.head",63,"['walk', 'print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'replace', 'replace', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'drop', 'corr', 'sort_values', 'print', 'print', 'concat', 'head', 'globals', 'globals', 'LabelEncoder', 'len', 'fit', 'transform', 'print', 'get_dummies', 'print', 'fillna', 'fillna', 'fillna', 'len', 'len', 'head', 'head', 'zeros', 'KFold', 'enumerate', 'Dataset', 'Dataset', 'train', 'predict', 'predict', 'append', 'append', 'astype', 'roc_auc_score', 'astype', 'to_csv', 'head']","['walk', 'print', 'read_csv', 'replace', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'head', 'drop', 'corr', 'sort_values', 'globals', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'fillna', 'zeros', 'KFold', 'enumerate', 'Dataset', 'train', 'predict', 'append', 'astype', 'roc_auc_score', 'to_csv']",32,"['numpy', 'pandas', 'os\n', 'sklearn', 'lightgbm']",5,"[1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",338,0.50061,None,1,
machinelearningflow.py,"os.walk,print,pd.read_csv,df.select_dtypes,df.fillna,cleaned_df.isnull,None.all,cleaned_df.drop,X.to_numpy,KFold,kf.split,print,StandardScaler,scaler.fit,scaler.transform,scaler.transform,RandomForestClassifier,LogisticRegression,model_params.items,GridSearchCV,clf.fit,scores.append,pd.DataFrame,lgb.LGBMClassifier,model.get_params,lgb.Dataset,lgb.cv,print,print,pd.read_csv,test_df.fillna,test_cleaned_df.select_dtypes,StandardScaler,scaler.fit_transform,clf.predict,pd.concat,kgl_submission.to_csv,kgl_submission.to_csv,kgl_submission.to_csv",39,"['walk', 'print', 'read_csv', 'select_dtypes', 'fillna', 'isnull', 'all', 'drop', 'to_numpy', 'KFold', 'split', 'print', 'StandardScaler', 'fit', 'transform', 'transform', 'RandomForestClassifier', 'LogisticRegression', 'items', 'GridSearchCV', 'fit', 'append', 'DataFrame', 'LGBMClassifier', 'get_params', 'Dataset', 'cv', 'print', 'print', 'read_csv', 'fillna', 'select_dtypes', 'StandardScaler', 'fit_transform', 'predict', 'concat', 'to_csv', 'to_csv', 'to_csv']","['walk', 'print', 'read_csv', 'select_dtypes', 'fillna', 'isnull', 'all', 'drop', 'to_numpy', 'KFold', 'split', 'StandardScaler', 'fit', 'transform', 'RandomForestClassifier', 'LogisticRegression', 'items', 'GridSearchCV', 'append', 'DataFrame', 'LGBMClassifier', 'get_params', 'Dataset', 'cv', 'fit_transform', 'predict', 'concat', 'to_csv']",28,"['numpy', 'pandas', 'os\n', 'sklearn', 'lightgbm']",5,"[1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",203,0.50066,None,0,
my-try.py,"os.walk,print,print,get_ipython,None.run_line_magic,sns.set_style,pd.read_csv,print,application_train_data.head,application_train_data.describe,application_train_data.value_counts,pd.read_csv,print,application_test_data.head,data.isnull,None.sum,None.sort_values,data.isnull,None.sum,data.isnull,None.count,None.sort_values,pd.concat,application_train_data.info,application_train_data.isna,None.sum,None.value_counts,missing_data,None.head,application_test_data.isna,None.sum,None.value_counts,missing_data,missing_data,missing_data,list,list1.remove,list,app_train.dropna,app_train.info,app_test.select_dtypes,app_test.isna,None.sum,None.head,app_train.info,app_train.select_dtypes,None.head,app_train.value_counts,list,pd.get_dummies,sns.countplot,plt.figure,app_trainapp_train.hist,app_trainapp_train.hist,plt.legend,plt.xlabel,app_train_final.drop,app_train_final.corr,None.sort_values,app_train_corr.head,app_train_corr.tail,sns.pairplot,train_feats.drop,list,SimpleImputer,imputer.fit,imputer.fit,imputer.transform,imputer.transform,MinMaxScaler,scaler.fit,scaler.transform,scaler.transform,print,print,pd.DataFrame,pd.DataFrame,train_test_split,KNeighborsClassifier,knn.fit,knn.predict,print,print,range,KNeighborsClassifier,knn.fit,knn.predict,error_rate.append,plt.figure,plt.plot,plt.title,plt.xlabel,plt.ylabel,KNeighborsClassifier,knn.fit,knn.predict,print,print,print,print,print,knn.predict,results.value_counts,results.to_csv",104,"['walk', 'print', 'print', 'get_ipython', 'run_line_magic', 'set_style', 'read_csv', 'print', 'head', 'describe', 'value_counts', 'read_csv', 'print', 'head', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'isnull', 'count', 'sort_values', 'concat', 'info', 'isna', 'sum', 'value_counts', 'missing_data', 'head', 'isna', 'sum', 'value_counts', 'missing_data', 'missing_data', 'missing_data', 'list', 'remove', 'list', 'dropna', 'info', 'select_dtypes', 'isna', 'sum', 'head', 'info', 'select_dtypes', 'head', 'value_counts', 'list', 'get_dummies', 'countplot', 'figure', 'hist', 'hist', 'legend', 'xlabel', 'drop', 'corr', 'sort_values', 'head', 'tail', 'pairplot', 'drop', 'list', 'SimpleImputer', 'fit', 'fit', 'transform', 'transform', 'MinMaxScaler', 'fit', 'transform', 'transform', 'print', 'print', 'DataFrame', 'DataFrame', 'train_test_split', 'KNeighborsClassifier', 'fit', 'predict', 'print', 'print', 'range', 'KNeighborsClassifier', 'fit', 'predict', 'append', 'figure', 'plot', 'title', 'xlabel', 'ylabel', 'KNeighborsClassifier', 'fit', 'predict', 'print', 'print', 'print', 'print', 'print', 'predict', 'value_counts', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'set_style', 'read_csv', 'head', 'describe', 'value_counts', 'isnull', 'sum', 'sort_values', 'count', 'concat', 'info', 'isna', 'missing_data', 'list', 'remove', 'dropna', 'select_dtypes', 'get_dummies', 'countplot', 'figure', 'hist', 'legend', 'xlabel', 'drop', 'corr', 'tail', 'pairplot', 'SimpleImputer', 'fit', 'transform', 'MinMaxScaler', 'DataFrame', 'train_test_split', 'KNeighborsClassifier', 'predict', 'range', 'append', 'plot', 'title', 'ylabel', 'to_csv']",45,"['numpy', 'pandas', 'os\n', 'matplotlib', 'seaborn', 'sklearn']",6,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",480,0.50671,None,0,
ml-dive-week4.py,"get_ipython,None.run_line_magic,os.walk,print,pd.read_csv,data.drop,df.head,data.drop,train_test_split,print,pd.set_option,pd.set_option,df.isna,None.sum,None.shape.sort_values,missing_ratio.to_frame,print,df.select_dtypes,None.columns.tolist,df.select_dtypes,None.columns.tolist,dfcol.nunique,dfcol.nunique,df.select_dtypes,None.columns.tolist,dfcols.select_dtypes,None.columns.tolist,dfcols.select_dtypes,None.columns.tolist,dfcol.nunique,dfcol.nunique,dfcols.select_dtypes,None.columns.tolist,len,col_groups.append,abs,col_groups.append,col_groups.append,len,split_cols,Pipeline,Pipeline,Pipeline,make_column_transformer,Pipeline,model.fit,model.predict_proba,roc_auc_score,print,plot_roc_curve,plt.plot,plt.show,pd.read_csv,model.predict,pd.DataFrame,output_df.to_csv",56,"['get_ipython', 'run_line_magic', 'walk', 'print', 'read_csv', 'drop', 'head', 'drop', 'train_test_split', 'print', 'set_option', 'set_option', 'isna', 'sum', 'shape', 'to_frame', 'print', 'select_dtypes', 'columns', 'select_dtypes', 'columns', 'nunique', 'nunique', 'select_dtypes', 'columns', 'select_dtypes', 'columns', 'select_dtypes', 'columns', 'nunique', 'nunique', 'select_dtypes', 'columns', 'len', 'append', 'abs', 'append', 'append', 'len', 'split_cols', 'Pipeline', 'Pipeline', 'Pipeline', 'make_column_transformer', 'Pipeline', 'fit', 'predict_proba', 'roc_auc_score', 'print', 'plot_roc_curve', 'plot', 'show', 'read_csv', 'predict', 'DataFrame', 'to_csv']","['get_ipython', 'run_line_magic', 'walk', 'print', 'read_csv', 'drop', 'head', 'train_test_split', 'set_option', 'isna', 'sum', 'shape', 'to_frame', 'select_dtypes', 'columns', 'nunique', 'len', 'append', 'abs', 'split_cols', 'Pipeline', 'make_column_transformer', 'fit', 'predict_proba', 'roc_auc_score', 'plot_roc_curve', 'plot', 'show', 'predict', 'DataFrame', 'to_csv']",31,"['numpy', 'pandas', 'matplotlib', 'seaborn', 'os\n', 'sklearn']",6,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",159,0.51019,None,1,
simple-eda-and-lgb-model.py,"get_ipython,None.run_line_magic,warnings.filterwarnings,print,pd.read_csv,app_df.head,pd.read_csv,trainset.isnull,None.sum,len,nulldata.drop,None.sort_values,pd.DataFrame,ratio_missing_data.head,pd.DataFrame,len,pd.DataFrame,len,list,list,list,print,train.drop,test.drop,missing_values_calculate,app_df.info,df.memory_usage,None.sum,print,dfcol.min,dfcol.max,str,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,dfcol.astype,df.memory_usage,None.sum,print,print,app_df.head,app_df.describe,app_df.describe,app_dfapp_df.describe,app_df.replace,app_test_df.replace,app_df.corr,None.sort_values,corr.head,corr.tail,None.sort_values,plt.style.use,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,Pipeline,KFold,time.perf_counter,train_test_split,pipeline.fit_transform,pipeline.fit_transform,np.zeros,pipeline.fit_transform,np.zeros,GridSearchCV,grid_model.fit,grid_model.predict,accuracy_score,precision_score,f1_score,roc_auc_score,print,print,print,print,print,print,print,print,grid_model.predict,lgb.LGBMClassifier,enumerate,print,pipeline.fit_transform,pipeline.fit_transform,model.fit,model.predict,model.predict,accuracy_score,precision_score,f1_score,roc_auc_score,accuracy_score,precision_score,f1_score,roc_auc_score,print,print,print,print,print,print,pd.DataFrame,pd.DataFrame,feature_importances.sort_values,None.reset_index,feature_importances.sum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.subplots,confusion_matrix,sns.heatmap,plt.ylabel,plt.xlabel,time.perf_counter,print,gc.enable,gc.collect,pd.read_csv,bureau_df.head,bureau_df.groupby,None.count,None.rename,num_of_previous_credits.head,app_df.merge,app_df.fillna,relevant_columns.corr,sns.heatmap,plt.title,df.corr,df.ixdfvar_name.median,df.ixdfvar_name.median,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,plt.legend,print,print,print,plt.figure,enumerate,plt.subplot,kde_target,plt.tight_layout,df.drop,df.select_dtypes,numeric_df.groupby,None.agg,None.reset_index,columns.append,agg_numeric,bureau_grouped.head,app_df.merge,app_df.head,pd.get_dummies,categorical.groupby,None.agg,column_names.append,count_categorical,bureau_grouped_categories.head,app_df.merge,app_df.head,pd.read_csv,bureau_df_balance.head,pd.read_csv,previous_ap_df.head,reduce_mem_usage,agg_numeric,print,count_categorical,print,count_categorical,bureau_balance_counts.head,agg_numeric,bureau_balance_agg.head,bureau_balance_agg.merge,bureau_df.merge,agg_numeric,bureau_balance_by_client.head,app_df.merge,app_df.merge,app_test_df.merge,app_test_df.merge,app_df.merge,app_test_df.merge,app_test_df.merge,app_test_df.merge,app_test_df.merge,print,pd.get_dummies,pd.get_dummies,print,gc.enable,gc.collect,reduce_mem_usage,reduce_mem_usage,app_df.head,missing_values_calculate,remove_missing_columns,app_df.corr,corr.sort_values,None.head,corr.sort_values,None.tail,app_df.copy,app_df.drop,app_df_no_ids.align,LogisticRegression,classification_model,RandomForestClassifier,classification_model,classification_model,pd.read_csv,submission_prediction_LGB.astype,sub.to_csv,sub.head,sub.value_counts",260,"['get_ipython', 'run_line_magic', 'filterwarnings', 'print', 'read_csv', 'head', 'read_csv', 'isnull', 'sum', 'len', 'drop', 'sort_values', 'DataFrame', 'head', 'DataFrame', 'len', 'DataFrame', 'len', 'list', 'list', 'list', 'print', 'drop', 'drop', 'missing_values_calculate', 'info', 'memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'astype', 'memory_usage', 'sum', 'print', 'print', 'head', 'describe', 'describe', 'describe', 'replace', 'replace', 'corr', 'sort_values', 'head', 'tail', 'sort_values', 'style', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'corr', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'Pipeline', 'KFold', 'perf_counter', 'train_test_split', 'fit_transform', 'fit_transform', 'zeros', 'fit_transform', 'zeros', 'GridSearchCV', 'fit', 'predict', 'accuracy_score', 'precision_score', 'f1_score', 'roc_auc_score', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'predict', 'LGBMClassifier', 'enumerate', 'print', 'fit_transform', 'fit_transform', 'fit', 'predict', 'predict', 'accuracy_score', 'precision_score', 'f1_score', 'roc_auc_score', 'accuracy_score', 'precision_score', 'f1_score', 'roc_auc_score', 'print', 'print', 'print', 'print', 'print', 'print', 'DataFrame', 'DataFrame', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'subplots', 'confusion_matrix', 'heatmap', 'ylabel', 'xlabel', 'perf_counter', 'print', 'enable', 'collect', 'read_csv', 'head', 'groupby', 'count', 'rename', 'head', 'merge', 'fillna', 'corr', 'heatmap', 'title', 'corr', 'ixdfvar_name', 'ixdfvar_name', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'legend', 'print', 'print', 'print', 'figure', 'enumerate', 'subplot', 'kde_target', 'tight_layout', 'drop', 'select_dtypes', 'groupby', 'agg', 'reset_index', 'append', 'agg_numeric', 'head', 'merge', 'head', 'get_dummies', 'groupby', 'agg', 'append', 'count_categorical', 'head', 'merge', 'head', 'read_csv', 'head', 'read_csv', 'head', 'reduce_mem_usage', 'agg_numeric', 'print', 'count_categorical', 'print', 'count_categorical', 'head', 'agg_numeric', 'head', 'merge', 'merge', 'agg_numeric', 'head', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'print', 'get_dummies', 'get_dummies', 'print', 'enable', 'collect', 'reduce_mem_usage', 'reduce_mem_usage', 'head', 'missing_values_calculate', 'remove_missing_columns', 'corr', 'sort_values', 'head', 'sort_values', 'tail', 'copy', 'drop', 'align', 'LogisticRegression', 'classification_model', 'RandomForestClassifier', 'classification_model', 'classification_model', 'read_csv', 'astype', 'to_csv', 'head', 'value_counts']","['get_ipython', 'run_line_magic', 'filterwarnings', 'print', 'read_csv', 'head', 'isnull', 'sum', 'len', 'drop', 'sort_values', 'DataFrame', 'list', 'missing_values_calculate', 'info', 'memory_usage', 'min', 'max', 'str', 'iinfo', 'astype', 'finfo', 'describe', 'replace', 'corr', 'tail', 'style', 'figure', 'kdeplot', 'xlabel', 'ylabel', 'title', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'Pipeline', 'KFold', 'perf_counter', 'train_test_split', 'fit_transform', 'zeros', 'GridSearchCV', 'fit', 'predict', 'accuracy_score', 'precision_score', 'f1_score', 'roc_auc_score', 'LGBMClassifier', 'reset_index', 'barh', 'set_yticks', 'set_yticklabels', 'subplots', 'confusion_matrix', 'enable', 'collect', 'groupby', 'count', 'rename', 'merge', 'fillna', 'ixdfvar_name', 'legend', 'kde_target', 'select_dtypes', 'agg', 'append', 'agg_numeric', 'get_dummies', 'count_categorical', 'reduce_mem_usage', 'remove_missing_columns', 'copy', 'align', 'LogisticRegression', 'classification_model', 'RandomForestClassifier', 'to_csv', 'value_counts']",81,"['sys\n', 'sklearn\n', 'numpy', 'os\n', 'matplotlib', 'pandas', 'seaborn', 'warnings\n', 'sklearn', 'time', 'gc\n', 'lightgbm']",12,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",996,0.5123,None,1,
1-nearest-nbor-naive-classifier-for-home-credit.py,"pd.read_csv,pd.read_csv,dftest.fillna,dftrain.fillna,dftest.select_dtypes,dftest.select_dtypes,dftestcat_columns.apply,dftestcat_columns.apply,dftrain.select_dtypes,dftrain.select_dtypes,dftraincat_columns.apply,dftraincat_columns.apply,col.drop,KNeighborsClassifier,clf.fit,clf.predict,print,print,clf.predict,print,pd.DataFrame,dfpred.head,dfpred.to_csv",23,"['read_csv', 'read_csv', 'fillna', 'fillna', 'select_dtypes', 'select_dtypes', 'apply', 'apply', 'select_dtypes', 'select_dtypes', 'apply', 'apply', 'drop', 'KNeighborsClassifier', 'fit', 'predict', 'print', 'print', 'predict', 'print', 'DataFrame', 'head', 'to_csv']","['read_csv', 'fillna', 'select_dtypes', 'apply', 'drop', 'KNeighborsClassifier', 'fit', 'predict', 'print', 'DataFrame', 'head', 'to_csv']",12,"['numpy', 'pandas', 'RandomForestClassifier', 'sklearn']",4,"[1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]",142,0.51898,None,0,
dic-as-13.py,"os.walk,print,get_ipython,None.run_line_magic,pd.read_csv,df.head,df.drop,list,dfcolumn_save.drop,df.value_counts,plt.subplots,tg.plot.pie,pie_target.legend,plt.show,np.dtype,dfcolumn_name.value_counts,None.sort_values,dfcolumn_name.value_counts,None.sort_values,dfcolumn_name.value_counts,None.sort_index,enumerate,print,print,dfcolumn_name.map,dummy_variable_all,df2.fillna,pd.set_option,df2.dtypes.value_counts,df2.corr,plt.subplots,sns.heatmap,plt.show,abs,None.sort_values,df2.columns.copy,None.drop,df2.columns.copy,None.drop,print,SelectKBest,None.fit_transform,print,all,all,selected_features.append,print,train_test_split,print,StandardScaler,scaler.fit,scaler.transform,scaler.transform,print,print,print,print,accuracy_score,precision_score,recall_score,f1_score,confusion_matrix,print,print,print,print,print,KNeighborsClassifier,neigh5.fit,neigh5.predict,evaluation,DecisionTreeClassifier,dt.fit,dt.predict,evaluation,RandomForestClassifier,rf.fit,rf.predict,evaluation,neigh5.predict_proba,dt.predict_proba,rf.predict_proba,pd.read_csv,scaler.transform,neigh5.predict_proba,dt.predict_proba,rf.predict_proba,pd.Series,pd.concat,final.to_csv",90,"['walk', 'print', 'get_ipython', 'run_line_magic', 'read_csv', 'head', 'drop', 'list', 'drop', 'value_counts', 'subplots', 'plot', 'legend', 'show', 'dtype', 'value_counts', 'sort_values', 'value_counts', 'sort_values', 'value_counts', 'sort_index', 'enumerate', 'print', 'print', 'map', 'dummy_variable_all', 'fillna', 'set_option', 'dtypes', 'corr', 'subplots', 'heatmap', 'show', 'abs', 'sort_values', 'columns', 'drop', 'columns', 'drop', 'print', 'SelectKBest', 'fit_transform', 'print', 'all', 'all', 'append', 'print', 'train_test_split', 'print', 'StandardScaler', 'fit', 'transform', 'transform', 'print', 'print', 'print', 'print', 'accuracy_score', 'precision_score', 'recall_score', 'f1_score', 'confusion_matrix', 'print', 'print', 'print', 'print', 'print', 'KNeighborsClassifier', 'fit', 'predict', 'evaluation', 'DecisionTreeClassifier', 'fit', 'predict', 'evaluation', 'RandomForestClassifier', 'fit', 'predict', 'evaluation', 'predict_proba', 'predict_proba', 'predict_proba', 'read_csv', 'transform', 'predict_proba', 'predict_proba', 'predict_proba', 'Series', 'concat', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'read_csv', 'head', 'drop', 'list', 'value_counts', 'subplots', 'plot', 'legend', 'show', 'dtype', 'sort_values', 'sort_index', 'enumerate', 'map', 'dummy_variable_all', 'fillna', 'set_option', 'dtypes', 'corr', 'heatmap', 'abs', 'columns', 'SelectKBest', 'fit_transform', 'all', 'append', 'train_test_split', 'StandardScaler', 'fit', 'transform', 'accuracy_score', 'precision_score', 'recall_score', 'f1_score', 'confusion_matrix', 'KNeighborsClassifier', 'predict', 'evaluation', 'DecisionTreeClassifier', 'RandomForestClassifier', 'predict_proba', 'Series', 'concat', 'to_csv']",48,"['numpy', 'pandas', 'os\n', 'seaborn', 'sklearn', 'matplotlib']",6,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",299,0.54379,None,2,
first_model_simple_logistic_regression.R,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",70,0.56543,None,9,
dic-as-14.py,"os.walk,print,get_ipython,None.run_line_magic,pd.read_csv,df.head,train_test_split,print,StandardScaler,scaler.fit,scaler.transform,scaler.transform,LogisticRegression,lg.fit,lg.predict_proba,pd.read_csv,scaler.transform,lg.predict_proba,pd.Series,pd.concat,final.to_csv",21,"['walk', 'print', 'get_ipython', 'run_line_magic', 'read_csv', 'head', 'train_test_split', 'print', 'StandardScaler', 'fit', 'transform', 'transform', 'LogisticRegression', 'fit', 'predict_proba', 'read_csv', 'transform', 'predict_proba', 'Series', 'concat', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'read_csv', 'head', 'train_test_split', 'StandardScaler', 'fit', 'transform', 'LogisticRegression', 'predict_proba', 'Series', 'concat', 'to_csv']",15,"['numpy', 'pandas', 'os\n', 'seaborn', 'sklearn', 'matplotlib']",6,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",130,0.61461,None,0,
simple-exploration-pipeline-imputer-0-7.py,"print,sns.color_palette,py.init_notebook_mode,init_notebook_mode,offline.init_notebook_mode,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,sample.head,print,print,print,print,print,print,print,application_train.head,application_train.columnscategorical_mask.tolist,application_traincategorical_column.head,print,application_train.select_dtypes,None.columns.tolist,application_trainnumerical_column.head,print,print,print,app_train.head,print,print,app_train.copy,print,app_test.copy,print,train_test_split,print,print,print,X.columnscategorical_feature_mask.tolist,X.columnscategorical_feature_mask.tolist,print,print,DataFrameMapper,DataFrameMapper,FeatureUnion,Pipeline,Pipeline,Pipeline,print,LabelEncoder,df.copy,df.select_dtypes,None.columns.tolist,lb.fit_transform,LabelEncoding_Cat,LabelEncoding_Cat,LabelEncoding_Cat,LabelEncoding_Cat,print,print,print,print,RandomForestClassifier,rf.fit,rf.predict_proba,pd.DataFrame,submission.to_csv,xgb.DMatrix,xgb.DMatrix,dtrain.get_label,float,np.sum,xgb.train,bst.predict,pd.DataFrame,submission1.to_csv,np.arange,np.arange,np.arange,RandomizedSearchCV,randomized_roc_auc.fit,randomized_roc_auc.predict_proba,pd.DataFrame,submission.to_csv",89,"['print', 'color_palette', 'init_notebook_mode', 'init_notebook_mode', 'init_notebook_mode', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'head', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'head', 'columnscategorical_mask', 'head', 'print', 'select_dtypes', 'columns', 'head', 'print', 'print', 'print', 'head', 'print', 'print', 'copy', 'print', 'copy', 'print', 'train_test_split', 'print', 'print', 'print', 'columnscategorical_feature_mask', 'columnscategorical_feature_mask', 'print', 'print', 'DataFrameMapper', 'DataFrameMapper', 'FeatureUnion', 'Pipeline', 'Pipeline', 'Pipeline', 'print', 'LabelEncoder', 'copy', 'select_dtypes', 'columns', 'fit_transform', 'LabelEncoding_Cat', 'LabelEncoding_Cat', 'LabelEncoding_Cat', 'LabelEncoding_Cat', 'print', 'print', 'print', 'print', 'RandomForestClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'DMatrix', 'DMatrix', 'get_label', 'float', 'sum', 'train', 'predict', 'DataFrame', 'to_csv', 'arange', 'arange', 'arange', 'RandomizedSearchCV', 'fit', 'predict_proba', 'DataFrame', 'to_csv']","['print', 'color_palette', 'init_notebook_mode', 'read_csv', 'head', 'columnscategorical_mask', 'select_dtypes', 'columns', 'copy', 'train_test_split', 'columnscategorical_feature_mask', 'DataFrameMapper', 'FeatureUnion', 'Pipeline', 'LabelEncoder', 'fit_transform', 'LabelEncoding_Cat', 'RandomForestClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'DMatrix', 'get_label', 'float', 'sum', 'train', 'predict', 'arange', 'RandomizedSearchCV']",30,"['numpy', 'pandas', 'os\n', 'matplotlib\n', 'matplotlib', 'seaborn', 'plotly', 'sklearn', 'sklearn_pandas', 'xgboost', 'gc\n', 'lightgbm']",12,"[1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",704,0.66065,None,0,
2019-06-05.py,"warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,pd.get_dummies,pd.get_dummies,app_train.align,print,print,app_train.describe,app_train.describe,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,Imputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.copy,app_test.copy,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.head,submit.to_csv",91,"['filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'get_dummies', 'get_dummies', 'align', 'print', 'print', 'describe', 'describe', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'Imputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'head', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'head', 'value_counts', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'replace', 'plot', 'xlabel', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'cut', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'Imputer', 'drop', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'merge', 'copy', 'list', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv']",44,"['numpy', 'pandas', 'sklearn', 'os\n', 'warnings\n', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",415,0.67041,None,0,
kernal-for-credit.py,"warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.describe,app_train.describe,app_train.describe,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_train.value_counts,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,print,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,print,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,ext_data.drop,None.copy,plot_data.dropna,plot_data.dropna,np.corrcoef,plt.gca,ax.annotate,sns.PairGrid,grid.map_upper,grid.map_diag,grid.map_lower,plt.suptitle,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.head,submit.to_csv",124,"['filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'describe', 'describe', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'value_counts', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'print', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'print', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'dropna', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'head', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'replace', 'xlabel', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'drop', 'copy', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'list', 'Imputer', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv']",61,"['numpy', 'pandas', 'sklearn', 'os\n', 'warnings\n', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",538,0.67041,None,1,
kernel7c8856c435.py,"print,warnings.filterwarnings,print,pd.read_csv,print,pd.read_csv,print,app_train.value_counts,app_train.astype,None.plot.hist,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,ext_data.drop,None.copy,plot_data.dropna,plot_data.dropna,np.corrcoef,plt.gca,ax.annotate,sns.PairGrid,grid.map_upper,grid.map_diag,grid.map_lower,plt.suptitle,Imputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.copy,app_test.copy,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.head,submit.to_csv",152,"['print', 'filterwarnings', 'print', 'read_csv', 'print', 'read_csv', 'print', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'dropna', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'Imputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'head', 'to_csv']","['print', 'filterwarnings', 'read_csv', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'cut', 'head', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'drop', 'copy', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'Imputer', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'merge', 'list', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv']",66,"['numpy', 'pandas', 'os\n', 'sklearn', 'warnings\n', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",599,0.67041,None,0,
home_credit_default_risk_python.py,"print,warnings.filterwarnings,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,ext_data.drop,None.copy,plot_data.dropna,plot_data.dropna,np.corrcoef,plt.gca,ax.annotate,sns.PairGrid,grid.map_upper,grid.map_diag,grid.map_lower,plt.suptitle,Imputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.head,submit.to_csv",129,"['print', 'filterwarnings', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'dropna', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'Imputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'head', 'to_csv']","['print', 'filterwarnings', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'drop', 'copy', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'Imputer', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'merge', 'list', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv']",64,"['numpy', 'pandas', 'os\n', 'sklearn', 'warnings\n', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",370,0.67135,None,1,
homecredit-morefiles.py,NA,0,['NA'],['NA'],1,"['numpy', 'pandas', 'os\n', 'matplotlib', 'sklearn']",5,"[1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",241,0.67761,None,0,
a2-home-credit-default-risk.py,"warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,RandomForestClassifier,random_forest.fit,pd.DataFrame,random_forest.predict_proba,df.sort_values,None.reset_index,df.sum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plot_feature_importances,pd.read_csv,bureau.head,bureau.groupby,None.count,None.rename,previous_loan_counts.head,pd.read_csv,train.merge,train.fillna,train.head,pd.get_dummies,categorical.head,train.corr,None.sort_values,print,print,submit.head,submit.to_csv",125,"['filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'read_csv', 'head', 'groupby', 'count', 'rename', 'head', 'read_csv', 'merge', 'fillna', 'head', 'get_dummies', 'head', 'corr', 'sort_values', 'print', 'print', 'head', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'drop', 'copy', 'list', 'Imputer', 'MinMaxScaler', 'RandomForestClassifier', 'DataFrame', 'predict_proba', 'reset_index', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'show', 'plot_feature_importances', 'count', 'merge', 'fillna', 'to_csv']",59,"['numpy', 'pandas', 'sklearn', 'matplotlib', 'seaborn', 'os\n', 'warnings\n']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",274,0.678,None,0,
level-3-home-credit-a-gentle-introduction.py,"warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,ext_data.drop,None.copy,plot_data.dropna,plot_data.dropna,np.corrcoef,plt.gca,ax.annotate,sns.PairGrid,grid.map_upper,grid.map_diag,grid.map_lower,plt.suptitle,Imputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.copy,app_test.copy,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,RandomForestClassifier,random_forest.fit,pd.DataFrame,random_forest.predict_proba,random_forest.score,submit.to_csv,feature_importances.sort_values,None.reset_index,None.head,plt.figure,sns.barplot,sns.despine",161,"['filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'dropna', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'Imputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'score', 'to_csv', 'sort_values', 'reset_index', 'head', 'figure', 'barplot', 'despine']","['filterwarnings', 'print', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'drop', 'copy', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'Imputer', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'merge', 'list', 'MinMaxScaler', 'RandomForestClassifier', 'predict_proba', 'score', 'to_csv', 'reset_index', 'barplot', 'despine']",70,"['os\n', 'numpy', 'pandas', 'sklearn', 'warnings\n', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",879,0.67877,None,0,
eda-and-feature-engineering-for-beginner.py,"os.walk,print,warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.nunique,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,pd.DataFrame,pd.DataFrame,df1.align,print,print,app_train.align,print,print,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,np.linspace,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,plt.subplot,sns.kdeplot,sns.kdeplot,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,ext_data.drop,None.copy,plot_data.dropna,plot_data.dropna,np.corrcoef,plt.gca,ax.annotate,sns.PairGrid,grid.map_upper,grid.map_diag,grid.map_lower,plt.suptitle,SimpleImputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.copy,app_test.copy,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.drop,app_train.copy,list,app_test.copy,SimpleImputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,log_reg.predict_proba,submit.head,submit.to_csv,RandomForestClassifier,random_forest.fit,pd.DataFrame,random_forest.predict_proba,submit.to_csv,list,SimpleImputer,imputer.fit_transform,imputer.transform,MinMaxScaler,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_poly.fit,random_forest_poly.predict_proba,submit.to_csv,app_train_domain.head,app_train_domain.drop,list,SimpleImputer,imputer.fit_transform,imputer.transform,RandomForestClassifier,random_forest_domain.fit,pd.DataFrame,random_forest_domain.predict_proba,submit.to_csv,df.sort_values,None.reset_index,df.sum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plot_feature_importances,plot_feature_importances",207,"['walk', 'print', 'filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'nunique', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'DataFrame', 'DataFrame', 'align', 'print', 'print', 'align', 'print', 'print', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'linspace', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'figure', 'subplot', 'kdeplot', 'kdeplot', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'dropna', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'SimpleImputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'list', 'copy', 'SimpleImputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'predict_proba', 'head', 'to_csv', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'to_csv', 'list', 'SimpleImputer', 'fit_transform', 'transform', 'MinMaxScaler', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'predict_proba', 'to_csv', 'head', 'drop', 'list', 'SimpleImputer', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'to_csv', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'plot_feature_importances']","['walk', 'print', 'filterwarnings', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'nunique', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'DataFrame', 'align', 'describe', 'xlabel', 'replace', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'linspace', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'subplot', 'enumerate', 'tight_layout', 'drop', 'copy', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'SimpleImputer', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'merge', 'list', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'reset_index', 'barh', 'set_yticks', 'set_yticklabels', 'show', 'plot_feature_importances']",75,"['numpy', 'pandas', 'os\n', 'sklearn', 'warnings\n', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1108,0.68354,,,couldnt find
preprocessing-feature-engineering-models.py,"print,warnings.filterwarnings,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,abs,app_test.replace,df.corr,df.ixdfvar_name.median,df.ixdfvar_name.median,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,plt.legend,print,print,print,df.drop,df.select_dtypes,numeric_df.groupby,None.agg,None.reset_index,columns.append,print,df.corr,corrs.append,sorted,pd.get_dummies,categorical.groupby,None.agg,column_names.append,agg_numeric,any,count_categorical,df_counts.merge,df_by_loan.merge,df_by_loan.drop,agg_numeric,df_agg.merge,df_by_loan.drop,agg_numeric,abs,app_test.replace,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_train.head,list,len,missing_values_table,missing_test.head,list,len,list,print,app_train.drop,app_test.drop,app_train.corr,corrs.sort_values,pd.DataFrame,pd.DataFrame,list,above_threshold_vars.items,cols_seen.append,cols_to_remove.append,cols_to_remove_pair.append,list,print,app_train.drop,app_test.drop,print,print",99,"['print', 'filterwarnings', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'dtypes', 'select_dtypes', 'apply', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'abs', 'replace', 'corr', 'ixdfvar_name', 'ixdfvar_name', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'legend', 'print', 'print', 'print', 'drop', 'select_dtypes', 'groupby', 'agg', 'reset_index', 'append', 'print', 'corr', 'append', 'sorted', 'get_dummies', 'groupby', 'agg', 'append', 'agg_numeric', 'any', 'count_categorical', 'merge', 'merge', 'drop', 'agg_numeric', 'merge', 'drop', 'agg_numeric', 'abs', 'replace', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'list', 'len', 'missing_values_table', 'head', 'list', 'len', 'list', 'print', 'drop', 'drop', 'corr', 'sort_values', 'DataFrame', 'DataFrame', 'list', 'items', 'append', 'append', 'append', 'list', 'print', 'drop', 'drop', 'print', 'print']","['print', 'filterwarnings', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'dtypes', 'select_dtypes', 'apply', 'get_dummies', 'align', 'abs', 'replace', 'corr', 'ixdfvar_name', 'figure', 'kdeplot', 'xlabel', 'ylabel', 'title', 'legend', 'drop', 'groupby', 'agg', 'reset_index', 'append', 'sorted', 'agg_numeric', 'any', 'count_categorical', 'merge', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'list', 'sort_values', 'DataFrame', 'items']",44,"['numpy', 'pandas', 'os\n', 'warnings\n', 'matplotlib', 'seaborn']",6,"[1 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",512,0.68682,None,6,
the-first-baseline.py,NA,0,['NA'],['NA'],1,"['numpy', 'pandas', 'matplotlib', 'seaborn', 'sklearn', 're\n', 'os\n', 'enable_iterative_imputer\n', 'IterativeImputer\n', 'lightgbm']",10,"[1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",713,0.68876,None,0,
notebook721481d097.py,"os.walk,print,pd.read_csv,pd.read_csv,pd.read_csv,print,train.head,train.dtypes.value_counts,print,test.head,test.dtypes.value_counts,train.value_counts,train.value_counts,print,print,train.plot.hist,df.isnull,None.sum,len,pd.DataFrame,None.sort_values,None.round,count_missing,len,print,print,mis_val_table_train.hist,count_missing,len,print,print,mis_val_table_test.hist,train.select_dtypes,None.apply,zip,print,test.select_dtypes,None.apply,zip,print,pd.get_dummies,pd.get_dummies,print,print,train.align,print,print,print,print,print,plt.boxplot,plt.show,print,plt.boxplot,plt.show,print,sum,sum,sum,sum,len,len,print,print,print,print,print,print,train.replace,test.replace,print,plt.boxplot,plt.show,print,print,print,plt.boxplot,plt.show,print,plt.boxplot,plt.show,abs,abs,abs,abs,train.corr,None.sort_values,correlations.tail,None.head,print,print,correlations.head,sum,sum,sum,sum,len,len,print,print,print,print,print,print,plt.boxplot,plt.show,print,plt.boxplot,plt.show,print,plt.boxplot,plt.show,print,plt.boxplot,plt.show,print,plt.boxplot,plt.show,print,plt.boxplot,plt.show,print,ext_data.corr,train.drop,train.drop,list,test.drop,SimpleImputer,imputer.fit,imputer.transform,imputer.transform,train_test_split,RandomForestClassifier,clf.fit,clf.predict_proba,clf.predict_proba,print,print,pd.DataFrame,feature_importance.sort_values,None.head,print,print,clf.predict_proba,pd.DataFrame,sub.to_csv",146,"['walk', 'print', 'read_csv', 'read_csv', 'read_csv', 'print', 'head', 'dtypes', 'print', 'head', 'dtypes', 'value_counts', 'value_counts', 'print', 'print', 'plot', 'isnull', 'sum', 'len', 'DataFrame', 'sort_values', 'round', 'count_missing', 'len', 'print', 'print', 'hist', 'count_missing', 'len', 'print', 'print', 'hist', 'select_dtypes', 'apply', 'zip', 'print', 'select_dtypes', 'apply', 'zip', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'print', 'print', 'print', 'boxplot', 'show', 'print', 'boxplot', 'show', 'print', 'sum', 'sum', 'sum', 'sum', 'len', 'len', 'print', 'print', 'print', 'print', 'print', 'print', 'replace', 'replace', 'print', 'boxplot', 'show', 'print', 'print', 'print', 'boxplot', 'show', 'print', 'boxplot', 'show', 'abs', 'abs', 'abs', 'abs', 'corr', 'sort_values', 'tail', 'head', 'print', 'print', 'head', 'sum', 'sum', 'sum', 'sum', 'len', 'len', 'print', 'print', 'print', 'print', 'print', 'print', 'boxplot', 'show', 'print', 'boxplot', 'show', 'print', 'boxplot', 'show', 'print', 'boxplot', 'show', 'print', 'boxplot', 'show', 'print', 'boxplot', 'show', 'print', 'corr', 'drop', 'drop', 'list', 'drop', 'SimpleImputer', 'fit', 'transform', 'transform', 'train_test_split', 'RandomForestClassifier', 'fit', 'predict_proba', 'predict_proba', 'print', 'print', 'DataFrame', 'sort_values', 'head', 'print', 'print', 'predict_proba', 'DataFrame', 'to_csv']","['walk', 'print', 'read_csv', 'head', 'dtypes', 'value_counts', 'plot', 'isnull', 'sum', 'len', 'DataFrame', 'sort_values', 'round', 'count_missing', 'hist', 'select_dtypes', 'apply', 'zip', 'get_dummies', 'align', 'boxplot', 'show', 'replace', 'abs', 'corr', 'tail', 'drop', 'list', 'SimpleImputer', 'fit', 'transform', 'train_test_split', 'RandomForestClassifier', 'predict_proba', 'to_csv']",35,"['numpy', 'pandas', 'matplotlib', 'sklearn\n', 'os\n', 'sklearn', 'GridSearchCV\n']",7,"[1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]",564,0.69307,None,0,
fork-of-kernel-20200311.py,NA,0,['NA'],['NA'],1,"['pandas', 'numpy', 'matplotlib', 'seaborn', 'sklearn', 'scipy']",6,"[1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",158,0.69982,None,0,
hc-default-risk-application-data-0-70.r,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1307,0.70334,None,0,
getting_rid_of_ext_source_variables.R,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",181,0.71,Bronze,9,
15-lines-plb-0-712-ext-source-x-lgbm.py,"pd.read_csv,pd.read_csv,sp_randint,sp_randint,sp_uniform,sp_uniform,lgb.LGBMClassifier,RandomizedSearchCV,gs.fit,print,print,np.argsort,print,gs.best_estimator_.predict_proba,pd.DataFrame,submission.to_csv",16,"['read_csv', 'read_csv', 'sp_randint', 'sp_randint', 'sp_uniform', 'sp_uniform', 'LGBMClassifier', 'RandomizedSearchCV', 'fit', 'print', 'print', 'argsort', 'print', 'best_estimator_', 'DataFrame', 'to_csv']","['read_csv', 'sp_randint', 'sp_uniform', 'LGBMClassifier', 'RandomizedSearchCV', 'fit', 'print', 'argsort', 'best_estimator_', 'DataFrame', 'to_csv']",11,"['pandas', 'numpy', 'lightgbm', 'scipy', 'sklearn']",5,"[1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",90,0.712,Bronze,24,
simple-lightgbm.py,"print,pd.read_csv,pd.read_csv,train.head,train.value_counts,display,display,train_test_split,lgb.LGBMClassifier,gbm.fit,gbm.predict_proba,gbm.predict_proba,pd.read_csv,sample_submit.head,sample_submit.to_csv",15,"['print', 'read_csv', 'read_csv', 'head', 'value_counts', 'display', 'display', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'read_csv', 'head', 'to_csv']","['print', 'read_csv', 'head', 'value_counts', 'display', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",10,"['numpy', 'pandas', 'os\n', 'sklearn', 'lightgbm']",5,"[1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",164,0.71309,None,7,
bnu-dataming.py,"warnings.filterwarnings,pd.read_csv,pd.read_csv,LabelEncoder,len,le.fit,le.transform,le.transform,pd.get_dummies,pd.get_dummies,app_train.align,app_train.copy,app_test.copy,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.to_csv,RandomForestClassifier,random_forest.fit,random_forest.predict_proba,submit.to_csv,features.drop,test_features.drop,pd.get_dummies,pd.get_dummies,features.align,LabelEncoder,enumerate,label_encoder.fit_transform,label_encoder.transform,cat_indices.append,ValueError,print,print,list,np.array,np.array,KFold,np.zeros,np.zeros,np.zeros,k_fold.split,lgb.LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,valid_scores.append,train_scores.append,gc.enable,gc.collect,pd.DataFrame,pd.DataFrame,roc_auc_score,valid_scores.append,train_scores.append,list,fold_names.append,pd.DataFrame,model,print,print,df.sort_values,None.reset_index,df.sum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plot_feature_importances,submission.to_csv,app_train.align,train_test_split,xgb.DMatrix,xgb.DMatrix,xgb.train,booster.predict,data_test.get_label,sum,float,len,print,print,print,xgb.DMatrix,booster.predict,submit.to_csv",104,"['filterwarnings', 'read_csv', 'read_csv', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'get_dummies', 'get_dummies', 'align', 'copy', 'copy', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'fit', 'predict_proba', 'to_csv', 'drop', 'drop', 'get_dummies', 'get_dummies', 'align', 'LabelEncoder', 'enumerate', 'fit_transform', 'transform', 'append', 'ValueError', 'print', 'print', 'list', 'array', 'array', 'KFold', 'zeros', 'zeros', 'zeros', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'append', 'append', 'enable', 'collect', 'DataFrame', 'DataFrame', 'roc_auc_score', 'append', 'append', 'list', 'append', 'DataFrame', 'model', 'print', 'print', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'to_csv', 'align', 'train_test_split', 'DMatrix', 'DMatrix', 'train', 'predict', 'get_label', 'sum', 'float', 'len', 'print', 'print', 'print', 'DMatrix', 'predict', 'to_csv']","['filterwarnings', 'read_csv', 'LabelEncoder', 'len', 'fit', 'transform', 'get_dummies', 'align', 'copy', 'drop', 'list', 'Imputer', 'MinMaxScaler', 'print', 'LogisticRegression', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'enumerate', 'fit_transform', 'append', 'ValueError', 'array', 'KFold', 'zeros', 'split', 'LGBMClassifier', 'enable', 'collect', 'DataFrame', 'roc_auc_score', 'model', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'train_test_split', 'DMatrix', 'train', 'predict', 'get_label', 'float']",50,"['numpy', 'pandas', 'sklearn', 'os\n', 'warnings\n', 'matplotlib', 'seaborn', 'lightgbm', 'gc\n', 'xgboost']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",495,0.72444,None,0,
ultimate-guide.py,"get_ipython,None.run_line_magic,plt.style.use,set_matplotlib_formats,pd.read_csv,print,print,print,pd.read_csv,pd.read_csv,application_train.corr,None.abs,application_train.value_counts,pd.DataFrame,plt.figure,plt.title,sns.barplot,plt.figure,sns.distplot,sns.distplot,plt.figure,sns.distplot,sns.distplot,application_train.describe,application_train.describe,application_train.isnull,None.sum,None.sort_values,application_train.isnull,None.sum,application_train.isnull,None.count,None.sort_values,pd.concat,missing_application_train_data.head,pd.get_dummies,pd.get_dummies,np.log,pd.get_dummies,pd.get_dummies,np.log,np.log,np.log,application_train.head,application_train.head,application_test.head,df_train_1.drop,Imputer,imp.fit,imp.transform,imp.transform,MinMaxScaler,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,model.fit,model.predict_proba,model.predict_proba,Logit,model_sts.fit,submit.head,submit.to_csv",65,"['get_ipython', 'run_line_magic', 'style', 'set_matplotlib_formats', 'read_csv', 'print', 'print', 'print', 'read_csv', 'read_csv', 'corr', 'abs', 'value_counts', 'DataFrame', 'figure', 'title', 'barplot', 'figure', 'distplot', 'distplot', 'figure', 'distplot', 'distplot', 'describe', 'describe', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'isnull', 'count', 'sort_values', 'concat', 'head', 'get_dummies', 'get_dummies', 'log', 'get_dummies', 'get_dummies', 'log', 'log', 'log', 'head', 'head', 'head', 'drop', 'Imputer', 'fit', 'transform', 'transform', 'MinMaxScaler', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'predict_proba', 'Logit', 'fit', 'head', 'to_csv']","['get_ipython', 'run_line_magic', 'style', 'set_matplotlib_formats', 'read_csv', 'print', 'corr', 'abs', 'value_counts', 'DataFrame', 'figure', 'title', 'barplot', 'distplot', 'describe', 'isnull', 'sum', 'sort_values', 'count', 'concat', 'head', 'get_dummies', 'log', 'drop', 'Imputer', 'fit', 'transform', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'Logit', 'to_csv']",32,"['pandas', 'numpy', 'matplotlib', 'seaborn', 'statsmodels', 'scipy', 'IPython', 'sklearn']",8,"[1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",445,0.73704,None,9,
v0-only-main-dataset.py,"get_ipython,None.run_line_magic,get_ipython,None.run_line_magic,pd.set_option,get_ipython,None.run_line_magic,pd.read_csv,train_df.head,train_df.mean,pd.read_csv,test_df.head,np.unique,train_dfcol.astype,test_dfcol.astype,pd.concat,None.drop,train_df.drop,train_df.drop,train_test_split,XGBClassifier,clf.fit,clf.predict_proba,metrics.roc_curve,metrics.auc,plt.title,plt.plot,plt.plot,plt.xlim,plt.ylim,plt.ylabel,plt.xlabel,plt.legend,plt.show,XGBClassifier,clf.fit,pd.concat,None.drop,test_df.drop,test_df.drop,clf.predict_proba,out_df.to_csv",42,"['get_ipython', 'run_line_magic', 'get_ipython', 'run_line_magic', 'set_option', 'get_ipython', 'run_line_magic', 'read_csv', 'head', 'mean', 'read_csv', 'head', 'unique', 'astype', 'astype', 'concat', 'drop', 'drop', 'drop', 'train_test_split', 'XGBClassifier', 'fit', 'predict_proba', 'roc_curve', 'auc', 'title', 'plot', 'plot', 'xlim', 'ylim', 'ylabel', 'xlabel', 'legend', 'show', 'XGBClassifier', 'fit', 'concat', 'drop', 'drop', 'drop', 'predict_proba', 'to_csv']","['get_ipython', 'run_line_magic', 'set_option', 'read_csv', 'head', 'mean', 'unique', 'astype', 'concat', 'drop', 'train_test_split', 'XGBClassifier', 'fit', 'predict_proba', 'roc_curve', 'auc', 'title', 'plot', 'xlim', 'ylim', 'ylabel', 'xlabel', 'legend', 'show', 'to_csv']",25,"['numpy', 'pandas', 'os\n', 'xgboost', 'sklearn', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",188,0.73729,None,0,
target-variables.py,"pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,application_trainapplication_train.sum,np.array,np.array,plt.bar,plt.show,print,print,application_train.NAME_EDUCATION_TYPE.unique,np.array,np.array,plt.bar,plt.show,print,print,print,print,print,application_train.NAME_INCOME_TYPE.unique,np.array,np.array,plt.bar,plt.show,print,print,print,print,print,print,print,print,np.array,np.array,plt.bar,plt.show,print,print,print,application_trainapplication_train.hist,application_train.hist,np.log,None.hist,plt.show,np.log,None.hist,plt.show,application_train.hist,application_train.drop,pd.get_dummies,X.fillna,re.sub,print,X.rename,print,train_test_split,lgb.LGBMClassifier,gbm.fit,gbm.predict,gbm.predict_proba,accuracy_score,print,print,enumerate,print,zip,columns_fti_list.append,columns_fti_list.sort,height.append,tick_label.append,range,plt.figure,fig.add_axes,plt.bar,plt.xticks,plt.show,application_train.drop,pd.get_dummies,re.sub,X.rename,train_test_split,lgb.LGBMClassifier,gbm.fit,gbm.predict,gbm.predict_proba,accuracy_score,print,zip,columns_fti_list.append,columns_fti_list.sort,height.append,tick_label.append,range,plt.figure,fig.add_axes,plt.bar,plt.xticks,plt.show,application_train.drop,pd.get_dummies,re.sub,X.rename,train_test_split,lgb.LGBMClassifier,gbm.fit,gbm.predict,gbm.predict_proba,accuracy_score,print,zip,columns_fti_list.append,columns_fti_list.sort,height.append,tick_label.append,range,plt.figure,fig.add_axes,plt.bar,plt.xticks,plt.show,print,roc_curve,plt.plot,plt.xlabel,plt.ylabel,plt.grid,plt.show,application_train.drop,application_test.drop,len,pd.concat,pd.get_dummies,re.sub,X.rename,X_submit.rename,train_test_split,lgb.LGBMClassifier,gbm.fit,gbm.predict,gbm.predict_proba,accuracy_score,print,zip,columns_fti_list.append,columns_fti_list.sort,height.append,tick_label.append,range,plt.figure,fig.add_axes,plt.bar,plt.xticks,plt.show,len,gbm.predict_proba,gbm.predict_proba,pd.concat,baseline_submit.to_csv",165,"['read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'sum', 'array', 'array', 'bar', 'show', 'print', 'print', 'NAME_EDUCATION_TYPE', 'array', 'array', 'bar', 'show', 'print', 'print', 'print', 'print', 'print', 'NAME_INCOME_TYPE', 'array', 'array', 'bar', 'show', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'print', 'array', 'array', 'bar', 'show', 'print', 'print', 'print', 'hist', 'hist', 'log', 'hist', 'show', 'log', 'hist', 'show', 'hist', 'drop', 'get_dummies', 'fillna', 'sub', 'print', 'rename', 'print', 'train_test_split', 'LGBMClassifier', 'fit', 'predict', 'predict_proba', 'accuracy_score', 'print', 'print', 'enumerate', 'print', 'zip', 'append', 'sort', 'append', 'append', 'range', 'figure', 'add_axes', 'bar', 'xticks', 'show', 'drop', 'get_dummies', 'sub', 'rename', 'train_test_split', 'LGBMClassifier', 'fit', 'predict', 'predict_proba', 'accuracy_score', 'print', 'zip', 'append', 'sort', 'append', 'append', 'range', 'figure', 'add_axes', 'bar', 'xticks', 'show', 'drop', 'get_dummies', 'sub', 'rename', 'train_test_split', 'LGBMClassifier', 'fit', 'predict', 'predict_proba', 'accuracy_score', 'print', 'zip', 'append', 'sort', 'append', 'append', 'range', 'figure', 'add_axes', 'bar', 'xticks', 'show', 'print', 'roc_curve', 'plot', 'xlabel', 'ylabel', 'grid', 'show', 'drop', 'drop', 'len', 'concat', 'get_dummies', 'sub', 'rename', 'rename', 'train_test_split', 'LGBMClassifier', 'fit', 'predict', 'predict_proba', 'accuracy_score', 'print', 'zip', 'append', 'sort', 'append', 'append', 'range', 'figure', 'add_axes', 'bar', 'xticks', 'show', 'len', 'predict_proba', 'predict_proba', 'concat', 'to_csv']","['read_csv', 'sum', 'array', 'bar', 'show', 'print', 'NAME_EDUCATION_TYPE', 'NAME_INCOME_TYPE', 'hist', 'log', 'drop', 'get_dummies', 'fillna', 'sub', 'rename', 'train_test_split', 'LGBMClassifier', 'fit', 'predict', 'predict_proba', 'accuracy_score', 'enumerate', 'zip', 'append', 'sort', 'range', 'figure', 'add_axes', 'xticks', 'roc_curve', 'plot', 'xlabel', 'ylabel', 'grid', 'len', 'concat', 'to_csv']",37,"['numpy', 'matplotlib', 'pandas', 'sklearn', 're\n', 'lightgbm']",6,"[1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",524,0.73806,None,1,
lightgbm-automated-feature-engineering-easy.py,"warnings.filterwarnings,os.path.join,print,print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,print,print,print,pd.concat,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,ft.EntitySet,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,ft.Relationship,es.add_relationship,ft.Relationship,es.add_relationship,ft.Relationship,es.add_relationship,ft.Relationship,es.add_relationship,ft.Relationship,es.add_relationship,ft.Relationship,es.add_relationship,print,ft.dfs,feature_matrix.head,print,LabelEncoder,encoder.fit_transform,print,categorical_feats.tolist,process_dataframe,feature_matrix_enc.isnull,None.sum,len,all_data_na.drop,None.sort_values,pd.DataFrame,missing_data.head,feature_matrix_enc.notnull,None.copy,feature_matrix_enc.isnull,None.copy,test_df.drop,gc.collect,train_df.pop,lgbm.Dataset,lgbm.cv,np.argmax,print,print,lgbm.train,clf.predict,pd.DataFrame,out_df.to_csv",73,"['filterwarnings', 'path', 'print', 'print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'print', 'print', 'print', 'concat', 'replace', 'replace', 'replace', 'replace', 'replace', 'EntitySet', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'Relationship', 'add_relationship', 'Relationship', 'add_relationship', 'Relationship', 'add_relationship', 'Relationship', 'add_relationship', 'Relationship', 'add_relationship', 'Relationship', 'add_relationship', 'print', 'dfs', 'head', 'print', 'LabelEncoder', 'fit_transform', 'print', 'tolist', 'process_dataframe', 'isnull', 'sum', 'len', 'drop', 'sort_values', 'DataFrame', 'head', 'notnull', 'copy', 'isnull', 'copy', 'drop', 'collect', 'pop', 'Dataset', 'cv', 'argmax', 'print', 'print', 'train', 'predict', 'DataFrame', 'to_csv']","['filterwarnings', 'path', 'print', 'read_csv', 'concat', 'replace', 'EntitySet', 'entity_from_dataframe', 'Relationship', 'add_relationship', 'dfs', 'head', 'LabelEncoder', 'fit_transform', 'tolist', 'process_dataframe', 'isnull', 'sum', 'len', 'drop', 'sort_values', 'DataFrame', 'notnull', 'copy', 'collect', 'pop', 'Dataset', 'cv', 'argmax', 'train', 'predict', 'to_csv']",32,"['os\n', 'gc\n', 'pandas', 'numpy', 'lightgbm', 'featuretools', 'sklearn', 'warnings\n']",8,"[1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",315,0.73998,Bronze,41,
kernelfadb0573fe.py,"get_ipython,None.run_line_magic,print,pd.read_csv,pd.read_csv,print,print,app_train.select_dtypes,None.apply,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,SimpleImputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.drop,app_train.copy,list,app_test.copy,SimpleImputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,train_test_split,np.logspace,get_ipython,None.run_cell_magic,datetime.now,get_ipython,None.run_cell_magic,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.to_csv,RandomForestClassifier,random_forest.fit,random_forest.predict_proba,submit.to_csv,list,SimpleImputer,imputer.fit_transform,imputer.transform,MinMaxScaler,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_poly.fit,random_forest_poly.predict_proba,submit.to_csv,LGBMClassifier,clf.fit,clf.predict_proba,submit.to_csv,submit.head,submit.head,submit.to_csv",84,"['get_ipython', 'run_line_magic', 'print', 'read_csv', 'read_csv', 'print', 'print', 'select_dtypes', 'apply', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'SimpleImputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'drop', 'copy', 'list', 'copy', 'SimpleImputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'train_test_split', 'logspace', 'get_ipython', 'run_cell_magic', 'now', 'get_ipython', 'run_cell_magic', 'LogisticRegression', 'fit', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'fit', 'predict_proba', 'to_csv', 'list', 'SimpleImputer', 'fit_transform', 'transform', 'MinMaxScaler', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'predict_proba', 'to_csv', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv', 'head', 'head', 'to_csv']","['get_ipython', 'run_line_magic', 'print', 'read_csv', 'select_dtypes', 'apply', 'get_dummies', 'align', 'SimpleImputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'merge', 'copy', 'list', 'MinMaxScaler', 'train_test_split', 'logspace', 'run_cell_magic', 'now', 'LogisticRegression', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'LGBMClassifier', 'head']",32,"['pandas', 'matplotlib', 'numpy', 'seaborn', 'os\n', 'sklearn', 'datetime', 'lightgbm']",8,"[1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",372,0.74248,None,1,
minimal-pipeline-lightgbm-lb-744-auc.py,"pd.read_csv,pd.read_csv,df_kaggle_train.drop,train_test_split,pd.DataFrame,None.fillna,pp.Imputer,X_train.select_dtypes,DataFrameImputer,pp.LabelEncoder,X_train.select_dtypes,DataFrameMapper,Pipeline,warnings.catch_warnings,warnings.simplefilter,pipeline.fit,pipeline.predict_proba,pipeline.predict_proba,print,print,sklearn.clone,warnings.catch_warnings,warnings.simplefilter,full_pipeline.fit,full_pipeline.predict_proba,pd.DataFrame,df_submission.head,df_submissiontarget.hist,print,print,df_submission.to_csv,print",32,"['read_csv', 'read_csv', 'drop', 'train_test_split', 'DataFrame', 'fillna', 'Imputer', 'select_dtypes', 'DataFrameImputer', 'LabelEncoder', 'select_dtypes', 'DataFrameMapper', 'Pipeline', 'catch_warnings', 'simplefilter', 'fit', 'predict_proba', 'predict_proba', 'print', 'print', 'clone', 'catch_warnings', 'simplefilter', 'fit', 'predict_proba', 'DataFrame', 'head', 'hist', 'print', 'print', 'to_csv', 'print']","['read_csv', 'drop', 'train_test_split', 'DataFrame', 'fillna', 'Imputer', 'select_dtypes', 'DataFrameImputer', 'LabelEncoder', 'DataFrameMapper', 'Pipeline', 'catch_warnings', 'simplefilter', 'fit', 'predict_proba', 'print', 'clone', 'head', 'hist', 'to_csv']",20,"['numpy', 'pandas', 'warnings\n', 'sklearn\n', 'sklearn', 'sklearn_pandas', 'lightgbm']",7,"[1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",141,0.74465,None,5,
bigdata-project-eda-fe-choi-yunna.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,pd.read_csv,pd.read_csv,print,app_train.head,print,app_test.head,app_train.hist,sns.boxplot,app_trainapp_train.hist,sns.distplot,sns.distplot,sns.distplot,pd.concat,apps.value_counts,apps.isnull,None.sum,None.head,apps.fillna,apps.isnull,None.sum,None.head,app_train.value_counts,app_train.astype,None.plot.hist,app_train.info,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,show_hist_by_target,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,app_train.isnull,None.sum,app_train.value_counts,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,plt.subplot,sns.kdeplot,sns.kdeplot,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.dtypesapp_train.dtypes.index.tolist,sns.catplot,sns.catplot,chart.set_xticklabels,show_category_by_target,print,print,print,pd.concat,print,apps.head,apps.mean,apps.mean,apps.std,apps.head,apps.fillna,apps.head,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.isnull,apps.isnull,apps_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,app_test.to_csv",98,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'read_csv', 'read_csv', 'print', 'head', 'print', 'head', 'hist', 'boxplot', 'hist', 'distplot', 'distplot', 'distplot', 'concat', 'value_counts', 'isnull', 'sum', 'head', 'fillna', 'isnull', 'sum', 'head', 'value_counts', 'astype', 'plot', 'info', 'subplots', 'violinplot', 'distplot', 'distplot', 'show_hist_by_target', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'isnull', 'sum', 'value_counts', 'corr', 'figure', 'heatmap', 'title', 'figure', 'subplot', 'kdeplot', 'kdeplot', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'dtypesapp_train', 'catplot', 'catplot', 'set_xticklabels', 'show_category_by_target', 'print', 'print', 'print', 'concat', 'print', 'head', 'mean', 'mean', 'std', 'head', 'fillna', 'head', 'dtypesapps', 'factorize', 'isnull', 'isnull', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'head', 'hist', 'boxplot', 'distplot', 'concat', 'value_counts', 'isnull', 'sum', 'fillna', 'astype', 'plot', 'info', 'subplots', 'violinplot', 'show_hist_by_target', 'abs', 'corr', 'style', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'heatmap', 'subplot', 'enumerate', 'tight_layout', 'dtypesapp_train', 'catplot', 'set_xticklabels', 'show_category_by_target', 'mean', 'std', 'dtypesapps', 'factorize', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']",49,"['numpy', 'pandas', 'os\n', 'gc\n', 'time\n', 'warnings\n', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",506,0.74552,None,0,
lanasore-ver2.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,pd.read_csv,pd.read_csv,app_train.isnull,None.sum,app_train.value_counts,app_train.astype,None.plot.hist,app_train.info,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,show_hist_by_target,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,app_train.isnull,None.sum,app_train.value_counts,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,plt.subplot,sns.kdeplot,sns.kdeplot,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.dtypesapp_train.dtypes.index.tolist,sns.catplot,sns.catplot,chart.set_xticklabels,show_category_by_target,print,print,print,pd.concat,print,apps.head,apps.mean,apps.mean,apps.std,apps.head,apps.fillna,apps.head,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.isnull,apps.isnull,apps_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,app_test.to_csv",81,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'read_csv', 'read_csv', 'isnull', 'sum', 'value_counts', 'astype', 'plot', 'info', 'subplots', 'violinplot', 'distplot', 'distplot', 'show_hist_by_target', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'isnull', 'sum', 'value_counts', 'corr', 'figure', 'heatmap', 'title', 'figure', 'subplot', 'kdeplot', 'kdeplot', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'dtypesapp_train', 'catplot', 'catplot', 'set_xticklabels', 'show_category_by_target', 'print', 'print', 'print', 'concat', 'print', 'head', 'mean', 'mean', 'std', 'head', 'fillna', 'head', 'dtypesapps', 'factorize', 'isnull', 'isnull', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'isnull', 'sum', 'value_counts', 'astype', 'plot', 'info', 'subplots', 'violinplot', 'distplot', 'show_hist_by_target', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'heatmap', 'subplot', 'enumerate', 'tight_layout', 'dtypesapp_train', 'catplot', 'set_xticklabels', 'show_category_by_target', 'concat', 'head', 'mean', 'std', 'fillna', 'dtypesapps', 'factorize', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']",48,"['numpy', 'pandas', 'os\n', 'gc\n', 'time\n', 'warnings\n', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",429,0.74552,None,1,
bigdata-project-eda-fe-seoyeong.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,pd.read_csv,pd.read_csv,app_train.head,app_test.head,data.isnull,None.sum,None.sort_values,data.isnull,None.sum,data.isnull,None.count,None.sort_values,pd.concat,missing_data,None.head,missing_data,None.head,pd.concat,print,apps.head,apps.head,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.isnull,apps.isnull,apps_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,app_test.to_csv,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,show_hist_by_target,app_trainfeature.value_counts,pd.DataFrame,app_trainfeature.groupby,None.mean,cat_perc.sort_values,plt.subplots,plt.subplots,sns.set_color_codes,sns.barplot,s.set_xticklabels,sns.barplot,s.set_xticklabels,plt.ylabel,plt.tick_params,plt.show,plot_stats,plot_stats,plot_stats,pd.read_csv,print,prev_app.merge,missing_data,None.head,missing_data,None.head,prev_app.head,prev_app.groupby,None.count,sns.boxplot,sns.boxplot,apps.mean,apps.std,apps.fillna,prev_app.merge,get_apps_processed,apps_all.dtypesapps_all.dtypes.index.tolist,pd.factorize,apps_all.isnull,apps_all.isnull,apps_all_test.drop,apps_all_train.columns.tolist,apps_all_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,apps_all_test.to_csv",92,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'read_csv', 'read_csv', 'head', 'head', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'isnull', 'count', 'sort_values', 'concat', 'missing_data', 'head', 'missing_data', 'head', 'concat', 'print', 'head', 'head', 'dtypesapps', 'factorize', 'isnull', 'isnull', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv', 'subplots', 'violinplot', 'distplot', 'distplot', 'show_hist_by_target', 'value_counts', 'DataFrame', 'groupby', 'mean', 'sort_values', 'subplots', 'subplots', 'set_color_codes', 'barplot', 'set_xticklabels', 'barplot', 'set_xticklabels', 'ylabel', 'tick_params', 'show', 'plot_stats', 'plot_stats', 'plot_stats', 'read_csv', 'print', 'merge', 'missing_data', 'head', 'missing_data', 'head', 'head', 'groupby', 'count', 'boxplot', 'boxplot', 'mean', 'std', 'fillna', 'merge', 'get_apps_processed', 'dtypesapps_all', 'factorize', 'isnull', 'isnull', 'drop', 'columns', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'head', 'isnull', 'sum', 'sort_values', 'count', 'concat', 'missing_data', 'dtypesapps', 'factorize', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv', 'subplots', 'violinplot', 'distplot', 'show_hist_by_target', 'value_counts', 'DataFrame', 'groupby', 'mean', 'set_color_codes', 'barplot', 'set_xticklabels', 'ylabel', 'tick_params', 'show', 'plot_stats', 'merge', 'boxplot', 'std', 'fillna', 'get_apps_processed', 'dtypesapps_all', 'columns']",45,"['numpy', 'pandas', 'os\n', 'gc\n', 'time\n', 'warnings\n', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",450,0.74635,None,0,
bigdata-project-eda-fe-shyeon43.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values,mis_values.head,app_train.isnull,None.sum,missing_values,mis_values.head,app_test.isnull,None.sum,app_train.value_counts,app_train.astype,None.plot.hist,app_train.info,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,show_hist_by_target,app_train.dtypesapp_train.dtypes.index.tolist,sns.catplot,chart.set_xticklabels,show_category_by_target,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,app_trainT_columns.corr,plt.figure,sns.heatmap,app_train.align,print,print,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,ext_d.corr,plt.figure,sns.heatmap,plt.title,plt.figure,plt.subplot,sns.kdeplot,sns.kdeplot,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.isnull,None.sum,app_train.value_counts,app_train.value_counts,app_train.value_counts,pd.concat,print,print,print,print,print,apps.head,apps.mean,apps.std,apps.head,apps.fillna,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.isnull,apps.isnull,apps_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,app_test.to_csv,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,SimpleImputer,poly_ft_train.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_ft_train.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.copy,app_test.copy,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout",169,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values', 'head', 'isnull', 'sum', 'missing_values', 'head', 'isnull', 'sum', 'value_counts', 'astype', 'plot', 'info', 'dtypes', 'select_dtypes', 'apply', 'subplots', 'violinplot', 'distplot', 'distplot', 'show_hist_by_target', 'dtypesapp_train', 'catplot', 'set_xticklabels', 'show_category_by_target', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'align', 'print', 'print', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'corr', 'figure', 'heatmap', 'title', 'figure', 'subplot', 'kdeplot', 'kdeplot', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'isnull', 'sum', 'value_counts', 'value_counts', 'value_counts', 'concat', 'print', 'print', 'print', 'print', 'print', 'head', 'mean', 'std', 'head', 'fillna', 'dtypesapps', 'factorize', 'isnull', 'isnull', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'SimpleImputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'head', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values', 'value_counts', 'astype', 'plot', 'info', 'dtypes', 'select_dtypes', 'apply', 'subplots', 'violinplot', 'distplot', 'show_hist_by_target', 'dtypesapp_train', 'catplot', 'set_xticklabels', 'show_category_by_target', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'heatmap', 'align', 'describe', 'replace', 'subplot', 'enumerate', 'tight_layout', 'mean', 'std', 'fillna', 'dtypesapps', 'factorize', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv', 'LabelEncoder', 'transform', 'get_dummies', 'SimpleImputer', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'sort_values', 'merge', 'copy']",70,"['numpy', 'pandas', 'os\n', 'gc\n', 'time\n', 'warnings\n', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",834,0.7485,None,0,
home-value-prediction-light.py,"get_ipython,None.run_line_magic,print,print,pd.read_csv,pd.read_csv,print,print,print,pd.concat,print,print,dtrain.head,dtest.head,dtrain.astype,plt.figure,sns.distplot,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,dtrain.align,print,print,dtrain.drop,dtrain.copy,list,dtest.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,np.array,np.array,np.array,None.reshape,KFold,np.zeros,np.zeros,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,print,gc.collect,submission.head,submission.to_csv",60,"['get_ipython', 'run_line_magic', 'print', 'print', 'read_csv', 'read_csv', 'print', 'print', 'print', 'concat', 'print', 'print', 'head', 'head', 'astype', 'figure', 'distplot', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'array', 'array', 'array', 'reshape', 'KFold', 'zeros', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'print', 'collect', 'head', 'to_csv']","['get_ipython', 'run_line_magic', 'print', 'read_csv', 'concat', 'head', 'astype', 'figure', 'distplot', 'LabelEncoder', 'len', 'fit', 'transform', 'get_dummies', 'align', 'drop', 'copy', 'list', 'Imputer', 'MinMaxScaler', 'array', 'reshape', 'KFold', 'zeros', 'enumerate', 'LGBMClassifier', 'predict_proba', 'collect', 'to_csv']",29,"['numpy', 'pandas', 'sklearn', 'seaborn', 'matplotlib', 'os\n', 'lightgbm', 'gc\n']",8,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",221,0.74944,None,0,
inefficient-feature-engineering.py,"pd.read_csv,pd.read_csv,cat_cols.append,pd.get_dummies,balance.columns.tolist,balance.groupby,None.agg,balance.columns.tolist,balance.reset_index,cat_cols.append,pd.get_dummies,bureau.merge,df.drop,df.columns.tolist,df.groupby,None.agg,df.columns.tolist,df.reset_index,pd.read_csv,df.replace,df.replace,df.replace,df.replace,df.replace,df.isnull,None.sum,df.isnull,None.sum,df.astype,df.rename,cat_cols.append,pd.get_dummies,df.columns.tolist,df.drop,df.groupby,None.agg,df.columns.tolist,df.reset_index,pd.read_csv,df.drop,dfdf.astype,cat_cols.append,df.columns.tolist,pd.get_dummies,df.columns.tolist,df.groupby,None.agg,df.columns.tolist,df.reset_index,pd.read_csv,df.isnull,None.sum,df.rename,cat_cols.append,pd.get_dummies,df.columns.tolist,df.drop,df.groupby,None.agg,df.columns.tolist,df.reset_index,pd.read_csv,df.astype,dfdf.astype,df.drop,df.rename,cat_cols.append,pd.get_dummies,df.columns.tolist,df.drop,df.groupby,None.agg,df.columns.tolist,df.reset_index,print,pd.read_csv,print,pd.read_csv,train.pop,test.pop,cat_cols.append,print,pd.concat,gc.collect,print,print,bureau_balance_preprocess,print,df.merge,gc.collect,print,print,prev_application,print,df.merge,gc.collect,print,print,posh_cash_balance,print,df.merge,gc.collect,print,print,cc_balance,print,df.merge,gc.collect,print,print,installments,print,df.merge,gc.collect,print,print,df.replace,dfdocs.kurtosis,dflive.sum,df.mean,df.std,df.fillna,print,pd.get_dummies,y.value_counts,y.value_counts,X.align,get_beautiful_data,X.corr,None.abs,corr_matrix.head,corr_matrix.where,upper.head,any,print,X.drop,X_test.drop,print,print,X.isnull,None.sum,len,None.sort_values,train_missing.head,X_test.isnull,None.sum,len,None.sort_values,test_missing.head,list,print,X.drop,X_test.drop,print,print,xgb.XGBClassifier,train_test_split,clf.fit,clf.predict_proba,pd.DataFrame,submit.to_csv,plt.subplots,xgb.plot_importance,ax.grid,plt.title,plt.show,plt.savefig",167,"['read_csv', 'read_csv', 'append', 'get_dummies', 'columns', 'groupby', 'agg', 'columns', 'reset_index', 'append', 'get_dummies', 'merge', 'drop', 'columns', 'groupby', 'agg', 'columns', 'reset_index', 'read_csv', 'replace', 'replace', 'replace', 'replace', 'replace', 'isnull', 'sum', 'isnull', 'sum', 'astype', 'rename', 'append', 'get_dummies', 'columns', 'drop', 'groupby', 'agg', 'columns', 'reset_index', 'read_csv', 'drop', 'astype', 'append', 'columns', 'get_dummies', 'columns', 'groupby', 'agg', 'columns', 'reset_index', 'read_csv', 'isnull', 'sum', 'rename', 'append', 'get_dummies', 'columns', 'drop', 'groupby', 'agg', 'columns', 'reset_index', 'read_csv', 'astype', 'astype', 'drop', 'rename', 'append', 'get_dummies', 'columns', 'drop', 'groupby', 'agg', 'columns', 'reset_index', 'print', 'read_csv', 'print', 'read_csv', 'pop', 'pop', 'append', 'print', 'concat', 'collect', 'print', 'print', 'bureau_balance_preprocess', 'print', 'merge', 'collect', 'print', 'print', 'prev_application', 'print', 'merge', 'collect', 'print', 'print', 'posh_cash_balance', 'print', 'merge', 'collect', 'print', 'print', 'cc_balance', 'print', 'merge', 'collect', 'print', 'print', 'installments', 'print', 'merge', 'collect', 'print', 'print', 'replace', 'kurtosis', 'sum', 'mean', 'std', 'fillna', 'print', 'get_dummies', 'value_counts', 'value_counts', 'align', 'get_beautiful_data', 'corr', 'abs', 'head', 'where', 'head', 'any', 'print', 'drop', 'drop', 'print', 'print', 'isnull', 'sum', 'len', 'sort_values', 'head', 'isnull', 'sum', 'len', 'sort_values', 'head', 'list', 'print', 'drop', 'drop', 'print', 'print', 'XGBClassifier', 'train_test_split', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'subplots', 'plot_importance', 'grid', 'title', 'show', 'savefig']","['read_csv', 'append', 'get_dummies', 'columns', 'groupby', 'agg', 'reset_index', 'merge', 'drop', 'replace', 'isnull', 'sum', 'astype', 'rename', 'print', 'pop', 'concat', 'collect', 'bureau_balance_preprocess', 'prev_application', 'posh_cash_balance', 'cc_balance', 'installments', 'kurtosis', 'mean', 'std', 'fillna', 'value_counts', 'align', 'get_beautiful_data', 'corr', 'abs', 'head', 'where', 'any', 'len', 'sort_values', 'list', 'XGBClassifier', 'train_test_split', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'subplots', 'plot_importance', 'grid', 'title', 'show', 'savefig']",50,"['numpy', 'pandas', 'matplotlib', 'gc\n', 'xgboost', 'sklearn']",6,"[1 1 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",473,0.75372,None,0,
bigdata-project-eda-jisun.py,"os.walk,print,warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.value_counts,None.plot,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_re_columnsmis_val_table_re_columns.iloc.sort_values,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.head,app_test.head,app_train.align,print,print,app_train.describe,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,app_train.value_counts,None.head,print,print,print,len,len,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,app_train.head,plt.style.use,plt.hist,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,pd.read_csv,bureau.head,bureau.info,bureau.groupby,None.count,None.head,bureau.groupby,None.count,None.rename,previous_loan_counts.head,pd.read_csv,train.merge,train.fillna,print,train.head,df.corr,df.locdfvar_name.median,df.locdfvar_name.median,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,plt.legend,print,print,print,kde_target,kde_target,bureau.drop,None.groupby,None.agg,None.reset_index,bureau_agg.head,print,columns.append,bureau_agg.head,train.merge,train.head,train.corr,new_corrs.append,sorted,kde_target,df.drop,df.select_dtypes,numeric_df.groupby,None.agg,None.reset_index,columns.append,agg_numeric,bureau_agg_new.head,bureau_agg.head,print,df.corr,corr.append,sorted,pd.get_dummies,categorical.head,categorical.groupby,None.agg,categorical_grouped.head,columns.append,categorical_grouped.head,train.merge,train.head,pd.get_dummies,categorical.groupby,None.agg,column_names.append,count_categorical,bureau_counts.head,pd.read_csv,bureau_balance.head,count_categorical,bureau_balance_counts.head,agg_numeric,bureau_balance_agg.head,bureau_balance_agg.merge,bureau_by_loan.head,bureau_by_loan.merge,bureau_by_loan.head,agg_numeric,bureau_balance_client.head,pd.read_csv,pd.read_csv,pd.read_csv,count_categorical,bureau_counts.head,agg_numeric,bureau_agg.head,list,print,train.merge,train.head,train.merge,train.head,train.merge,train.head,list,print,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_train.head,list,len,pd.read_csv,test.merge,test.merge,print,train.align,print,print,missing_values_table,missing_test.head,list,len,list,train.drop,test.drop,print,pd.concat,print,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.isnull,apps.isnull,apps_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,app_test.to_csv",239,"['walk', 'print', 'filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'value_counts', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'head', 'head', 'align', 'print', 'print', 'describe', 'describe', 'describe', 'plot', 'xlabel', 'value_counts', 'head', 'print', 'print', 'print', 'len', 'len', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'head', 'style', 'hist', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'read_csv', 'head', 'info', 'groupby', 'count', 'head', 'groupby', 'count', 'rename', 'head', 'read_csv', 'merge', 'fillna', 'print', 'head', 'corr', 'locdfvar_name', 'locdfvar_name', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'legend', 'print', 'print', 'print', 'kde_target', 'kde_target', 'drop', 'groupby', 'agg', 'reset_index', 'head', 'print', 'append', 'head', 'merge', 'head', 'corr', 'append', 'sorted', 'kde_target', 'drop', 'select_dtypes', 'groupby', 'agg', 'reset_index', 'append', 'agg_numeric', 'head', 'head', 'print', 'corr', 'append', 'sorted', 'get_dummies', 'head', 'groupby', 'agg', 'head', 'append', 'head', 'merge', 'head', 'get_dummies', 'groupby', 'agg', 'append', 'count_categorical', 'head', 'read_csv', 'head', 'count_categorical', 'head', 'agg_numeric', 'head', 'merge', 'head', 'merge', 'head', 'agg_numeric', 'head', 'read_csv', 'read_csv', 'read_csv', 'count_categorical', 'head', 'agg_numeric', 'head', 'list', 'print', 'merge', 'head', 'merge', 'head', 'merge', 'head', 'list', 'print', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'list', 'len', 'read_csv', 'merge', 'merge', 'print', 'align', 'print', 'print', 'missing_values_table', 'head', 'list', 'len', 'list', 'drop', 'drop', 'print', 'concat', 'print', 'dtypesapps', 'factorize', 'isnull', 'isnull', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']","['walk', 'print', 'filterwarnings', 'read_csv', 'head', 'value_counts', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'sort_values', 'abs', 'style', 'hist', 'figure', 'kdeplot', 'ylabel', 'title', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'info', 'count', 'merge', 'fillna', 'locdfvar_name', 'legend', 'kde_target', 'drop', 'agg', 'reset_index', 'append', 'sorted', 'agg_numeric', 'count_categorical', 'list', 'round', 'dtypesapps', 'factorize', 'train_test_split', 'LGBMClassifier', 'plot_importance', 'predict_proba', 'to_csv']",66,"['numpy', 'pandas', 'os\n', 'matplotlib', 'seaborn', 'sklearn', 'warnings\n', 'lightgbm']",8,"[1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1080,0.75412,None,0,
home-credit-kor-ver.py,"warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,app_train.isnull,None.sum,len,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,app_train.select_dtypes,LabelEncoder,len,le.fit,le.transform,le.transform,print,print,app_train.head,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.head,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_train.describe,app_test.describe,app_test.replace,print,app_train.corr,plt.subplots,sns.heatmap,corrmat.sort_values,print,print,print,abs,app_train.corr,app_train.describe,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,age_data.head,np.linspace,age_data.groupby,None.mean,age_groups.index.astype,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,ext_data.head,ext_data.drop,None.copy,plot_data.head,plot_data.dropna,plot_data.dropna,np.corrcoef,plt.gca,ax.annotate,sns.PairGrid,grid.map_upper,grid.map_diag,grid.map_lower,plt.suptitle,Imputer,poly_features.drop,poly_features.head,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.head,poly_features.corr,None.sort_values,print,print,print,pd.DataFrame,poly_features_test.head,app_train.merge,app_test.merge,app_train_poly.align,print,print,print,app_train.copy,app_test.copy,app_train_domain.head,app_test_domain.head,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.head,submit.to_csv,RandomForestClassifier,random_forest.fit,pd.DataFrame,random_forest.predict_proba,submit.head,submit.to_csv,list,Imputer,imputer.fit_transform,imputer.transform,MinMaxScaler,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_poly.fit,random_forest_poly.predict_proba,submit.to_csv,app_train_domain.head,app_train_domain.drop,list,Imputer,imputer.fit_transform,imputer.transform,MinMaxScaler,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_domain.fit,pd.DataFrame,random_forest_domain.predict_proba,submit.to_csv,df.sort_values,None.reset_index,df.sum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plot_feature_importances,plot_feature_importances,features.drop,test_features.drop,pd.get_dummies,pd.get_dummies,features.align,LabelEncoder,enumerate,label_encoder.fit_transform,label_encoder.transform,cat_indices.append,ValueError,print,print,list,np.array,np.array,KFold,np.zeros,np.zeros,np.zeros,k_fold.split,lgb.LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,valid_scores.append,train_scores.append,gc.enable,gc.collect,pd.DataFrame,pd.DataFrame,roc_auc_score,valid_scores.append,train_scores.append,list,fold_names.append,pd.DataFrame,model,print,print,plot_feature_importances,submission.to_csv,model,print,print,plot_feature_importances,sumission_domain.to_csv",273,"['filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'apply', 'select_dtypes', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'print', 'head', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'head', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'describe', 'describe', 'replace', 'print', 'corr', 'subplots', 'heatmap', 'sort_values', 'print', 'print', 'print', 'abs', 'corr', 'describe', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'head', 'linspace', 'groupby', 'mean', 'index', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'head', 'drop', 'copy', 'head', 'dropna', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'Imputer', 'drop', 'head', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'head', 'corr', 'sort_values', 'print', 'print', 'print', 'DataFrame', 'head', 'merge', 'merge', 'align', 'print', 'print', 'print', 'copy', 'copy', 'head', 'head', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'head', 'to_csv', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'head', 'to_csv', 'list', 'Imputer', 'fit_transform', 'transform', 'MinMaxScaler', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'predict_proba', 'to_csv', 'head', 'drop', 'list', 'Imputer', 'fit_transform', 'transform', 'MinMaxScaler', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'to_csv', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'plot_feature_importances', 'drop', 'drop', 'get_dummies', 'get_dummies', 'align', 'LabelEncoder', 'enumerate', 'fit_transform', 'transform', 'append', 'ValueError', 'print', 'print', 'list', 'array', 'array', 'KFold', 'zeros', 'zeros', 'zeros', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'append', 'append', 'enable', 'collect', 'DataFrame', 'DataFrame', 'roc_auc_score', 'append', 'append', 'list', 'append', 'DataFrame', 'model', 'print', 'print', 'plot_feature_importances', 'to_csv', 'model', 'print', 'print', 'plot_feature_importances', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'subplots', 'heatmap', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'cut', 'linspace', 'groupby', 'mean', 'index', 'bar', 'xticks', 'enumerate', 'subplot', 'tight_layout', 'drop', 'copy', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'Imputer', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'merge', 'list', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'reset_index', 'barh', 'set_yticks', 'set_yticklabels', 'show', 'plot_feature_importances', 'append', 'ValueError', 'array', 'KFold', 'zeros', 'split', 'LGBMClassifier', 'enable', 'collect', 'roc_auc_score', 'model']",87,"['pandas', 'numpy', 'sklearn', 'os\n', 'warnings\n', 'matplotlib', 'seaborn', 'lightgbm', 'gc\n']",9,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1906,0.75459,None,2,
v1-main-dataset-and-bureau-only.py,"get_ipython,None.run_line_magic,get_ipython,None.run_line_magic,pd.set_option,get_ipython,None.run_line_magic,in_df.copy,out_dfcol_name.astype,pd.concat,None.drop,pd.read_csv,None.sample,pd.read_csv,print,application_train_df.head,pd.read_csv,print,application_test_df.head,np.unique,application_train_dfcol.astype,application_test_dfcol.astype,pd.read_csv,print,print,print,encode_categorical_columns,col.startswith,in_df.groupby,None.agg,None.reset_index,.join,None.strip,sorted,encode_categorical_columns,encode_categorical_columns,train_df.head,process_bureau,pd.merge,pd.merge,train_df.head,XGBClassifier,None.get_params,train_df.drop,train_df.drop,train_test_split,len,XGBClassifier,clf.set_params,clf.fit,test_df.drop,test_df.drop,clf.predict_proba,out_df.to_csv",54,"['get_ipython', 'run_line_magic', 'get_ipython', 'run_line_magic', 'set_option', 'get_ipython', 'run_line_magic', 'copy', 'astype', 'concat', 'drop', 'read_csv', 'sample', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'unique', 'astype', 'astype', 'read_csv', 'print', 'print', 'print', 'encode_categorical_columns', 'startswith', 'groupby', 'agg', 'reset_index', 'join', 'strip', 'sorted', 'encode_categorical_columns', 'encode_categorical_columns', 'head', 'process_bureau', 'merge', 'merge', 'head', 'XGBClassifier', 'get_params', 'drop', 'drop', 'train_test_split', 'len', 'XGBClassifier', 'set_params', 'fit', 'drop', 'drop', 'predict_proba', 'to_csv']","['get_ipython', 'run_line_magic', 'set_option', 'copy', 'astype', 'concat', 'drop', 'read_csv', 'sample', 'print', 'head', 'unique', 'encode_categorical_columns', 'startswith', 'groupby', 'agg', 'reset_index', 'join', 'strip', 'sorted', 'process_bureau', 'merge', 'XGBClassifier', 'get_params', 'train_test_split', 'len', 'set_params', 'fit', 'predict_proba', 'to_csv']",30,"['numpy', 'pandas', 'os\n', 'tqdm', 'xgboost', 'sklearn', 'math\n', 'matplotlib', 'seaborn']",9,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]",360,0.7551,None,0,
stacking_test_sklearn_xgboost_catboost_lightgbm.py,"pd.read_csv,pd.read_csv,pd.read_csv,pd.factorize,indexer.get_indexer,gc.enable,pd.factorize,prev.groupby,None.mean,prev.groupby,None.count,data.merge,test.merge,x_train.fillna,x_test.fillna,KFold,clf,self.clf.fit,self.clf.predict_proba,clf,self.clf.fit,self.clf.predict_proba,clf,self.clf.fit,self.clf.predict_proba,params.pop,xgb.DMatrix,xgb.train,self.gbdt.predict,np.zeros,np.zeros,np.empty,enumerate,clf.train,clf.predict,clf.predict,oof_test_skf.mean,oof_train.reshape,oof_test.reshape,XgbWrapper,SklearnWrapper,SklearnWrapper,CatboostWrapper,LightGBMWrapper,get_oof,get_oof,get_oof,get_oof,print,print,print,print,np.concatenate,np.concatenate,print,LogisticRegression,logistic_regression.fit,logistic_regression.predict_proba,test.to_csv",59,"['read_csv', 'read_csv', 'read_csv', 'factorize', 'get_indexer', 'enable', 'factorize', 'groupby', 'mean', 'groupby', 'count', 'merge', 'merge', 'fillna', 'fillna', 'KFold', 'clf', 'clf', 'clf', 'clf', 'clf', 'clf', 'clf', 'clf', 'clf', 'pop', 'DMatrix', 'train', 'gbdt', 'zeros', 'zeros', 'empty', 'enumerate', 'train', 'predict', 'predict', 'mean', 'reshape', 'reshape', 'XgbWrapper', 'SklearnWrapper', 'SklearnWrapper', 'CatboostWrapper', 'LightGBMWrapper', 'get_oof', 'get_oof', 'get_oof', 'get_oof', 'print', 'print', 'print', 'print', 'concatenate', 'concatenate', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'to_csv']","['read_csv', 'factorize', 'get_indexer', 'enable', 'groupby', 'mean', 'count', 'merge', 'fillna', 'KFold', 'clf', 'pop', 'DMatrix', 'train', 'gbdt', 'zeros', 'empty', 'enumerate', 'predict', 'reshape', 'XgbWrapper', 'SklearnWrapper', 'CatboostWrapper', 'LightGBMWrapper', 'get_oof', 'print', 'concatenate', 'LogisticRegression', 'fit', 'predict_proba', 'to_csv']",31,"['pandas', 'numpy', 'scipy', 'xgboost', 'sklearn', 'math', 'catboost', 'lightgbm', 'gc\n']",9,"[1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",235,0.75787,Gold,173,
creditriskpipeline.py,"get_ipython,None.system,pd.read_csv,pd.read_csv,app_train.head,abs,abs,pd.read_csv,pd.read_csv,bureau_balance.groupby,None.agg,None.reset_index,bureau_balance_agg.head,bureau.merge,bureau.groupby,None.count,None.rename,previous_loan_counts.head,app_train.merge,app_test.merge,app_train.head,app_train.select_dtypes,app_train.select_dtypes,len,app_train.select_dtypes,app_train.select_dtypes,len,app_train.select_dtypes,app_train.select_dtypes,app_train.drop,Pipeline,Pipeline,Pipeline,Pipeline,ColumnTransformer,lgb.LGBMClassifier,info.get,args_treino.get,args_treino.get,self.preprocessamento.fit_transform,args_treino.get,range,self.preprocessamento.transform,self.modelo.fit,self.preprocessamento.transform,self.modelo.predict_proba,self.modelo.predict,train_test_split,CreditRiskPipeline,classe_pipeline.fit,classe_pipeline.predict,classe_pipeline.predict,submission.head,submission.to_csv",54,"['get_ipython', 'system', 'read_csv', 'read_csv', 'head', 'abs', 'abs', 'read_csv', 'read_csv', 'groupby', 'agg', 'reset_index', 'head', 'merge', 'groupby', 'count', 'rename', 'head', 'merge', 'merge', 'head', 'select_dtypes', 'select_dtypes', 'len', 'select_dtypes', 'select_dtypes', 'len', 'select_dtypes', 'select_dtypes', 'drop', 'Pipeline', 'Pipeline', 'Pipeline', 'Pipeline', 'ColumnTransformer', 'LGBMClassifier', 'get', 'get', 'get', 'preprocessamento', 'get', 'range', 'preprocessamento', 'modelo', 'preprocessamento', 'modelo', 'modelo', 'train_test_split', 'CreditRiskPipeline', 'fit', 'predict', 'predict', 'head', 'to_csv']","['get_ipython', 'system', 'read_csv', 'head', 'abs', 'groupby', 'agg', 'reset_index', 'merge', 'count', 'rename', 'select_dtypes', 'len', 'drop', 'Pipeline', 'ColumnTransformer', 'LGBMClassifier', 'get', 'preprocessamento', 'range', 'modelo', 'train_test_split', 'CreditRiskPipeline', 'fit', 'predict', 'to_csv']",26,"['pandas', 'sklearn', 'category_encoders', 'lightgbm']",4,"[0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",307,0.75906,None,0,
fan-hcd-submission.py,"warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,app_train.isnull,None.sum,None.sort_values,app_train.isnull,None.sum,app_train.isnull,None.count,None.sort_values,pd.concat,miss_train.head,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,app_train.copy,app_test.copy,print,print,pd.read_csv,bureau.head,pd.read_csv,bureau_balance.head,df.drop,df.select_dtypes,numeric_df.groupby,None.agg,None.reset_index,columns.append,pd.get_dummies,categorical.groupby,None.agg,column_names.append,agg_numeric,bureau_agg.head,count_categorical,bureau_counts.head,agg_numeric,bureau_balance_agg.head,count_categorical,bureau_balance_counts.head,bureau_balance_agg.merge,bureau_by_loan.merge,bureau_by_loan.head,bureau_balance_agg.merge,bureau.merge,agg_numeric,app_train_domain.merge,train_domain.merge,train_domain.merge,list,print,app_test_domain.merge,test_domain.merge,test_domain.merge,print,train_domain.align,gc.enable,gc.collect,app_train.drop,app_train.copy,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.head,submit.to_csv,app_train_domain.drop,list,Imputer,imputer.fit_transform,imputer.transform,MinMaxScaler,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_domain.fit,pd.DataFrame,random_forest_domain.predict_proba,submit.to_csv,features.drop,test_features.drop,pd.get_dummies,pd.get_dummies,features.align,LabelEncoder,enumerate,label_encoder.fit_transform,label_encoder.transform,cat_indices.append,ValueError,print,print,list,np.array,np.array,KFold,np.zeros,np.zeros,np.zeros,k_fold.split,lgb.LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,valid_scores.append,train_scores.append,gc.enable,gc.collect,pd.DataFrame,pd.DataFrame,roc_auc_score,valid_scores.append,train_scores.append,list,fold_names.append,pd.DataFrame,model,print,print,submission.to_csv",181,"['filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'isnull', 'count', 'sort_values', 'concat', 'head', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'copy', 'copy', 'print', 'print', 'read_csv', 'head', 'read_csv', 'head', 'drop', 'select_dtypes', 'groupby', 'agg', 'reset_index', 'append', 'get_dummies', 'groupby', 'agg', 'append', 'agg_numeric', 'head', 'count_categorical', 'head', 'agg_numeric', 'head', 'count_categorical', 'head', 'merge', 'merge', 'head', 'merge', 'merge', 'agg_numeric', 'merge', 'merge', 'merge', 'list', 'print', 'merge', 'merge', 'merge', 'print', 'align', 'enable', 'collect', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'head', 'to_csv', 'drop', 'list', 'Imputer', 'fit_transform', 'transform', 'MinMaxScaler', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'to_csv', 'drop', 'drop', 'get_dummies', 'get_dummies', 'align', 'LabelEncoder', 'enumerate', 'fit_transform', 'transform', 'append', 'ValueError', 'print', 'print', 'list', 'array', 'array', 'KFold', 'zeros', 'zeros', 'zeros', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'append', 'append', 'enable', 'collect', 'DataFrame', 'DataFrame', 'roc_auc_score', 'append', 'append', 'list', 'append', 'DataFrame', 'model', 'print', 'print', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'sort_values', 'count', 'concat', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'abs', 'cut', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'ylabel', 'title', 'copy', 'drop', 'agg', 'reset_index', 'append', 'agg_numeric', 'count_categorical', 'merge', 'list', 'enable', 'collect', 'Imputer', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv', 'fit_transform', 'RandomForestClassifier', 'DataFrame', 'enumerate', 'ValueError', 'array', 'KFold', 'zeros', 'split', 'LGBMClassifier', 'roc_auc_score', 'model']",61,"['numpy', 'pandas', 'sklearn', 'os\n', 'warnings\n', 'matplotlib', 'seaborn', 'gc\n', 'lightgbm']",9,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",832,0.76288,None,0,
bigdata-project-eda-fe-my.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,pd.concat,apps.value_counts,apps.info,apps.dtypesapps.dtypes.index.tolist,sns.catplot,chart.set_xticklabels,show_category_by_target,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.info,apps.isnull,None.sum,apps.fillna,apps_test.drop,apps_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,show_hist_by_target,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,apps.info,apps.mean,apps.std,apps.fillna,pd.read_csv,prev_app.merge,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,app_prev_target.dtypesapp_prev_target.dtypes.index.tolist,show_hist_by_target,app_prev_target.TARGET.value_counts,print,print,print,app_prev_target.dtypesapp_prev_target.dtypes.index.tolist,show_category_by_target,prev_app.groupby,prev_app.replace,prev_app.replace,prev_app.replace,prev_app.replace,prev_app.replace,prev_app.iloc.head,prev_app.groupby,prev_group.agg,prev_amt_agg.head,.join,None.upper,prev_amt_agg.columns.ravel,prev_amt_agg.head,prev_refused.groupby,None.count,prev_refused_agg.reset_index,prev_amt_agg.reset_index,prev_amt_agg.merge,prev_amt_refused_agg.value_counts,prev_amt_refused_agg.fillna,prev_app.isin,None.groupby,prev_refused_appr_group.count,None.unstack,prev_refused_appr_agg.fillna,prev_refused_appr_agg.reset_index,prev_amt_agg.head,prev_amt_agg.merge,prev_agg.drop,prev_agg.head,pd.concat,apps.info,get_apps_processed,apps_all.merge,apps_all.info,apps_all.dtypesapps_all.dtypes.index.tolist,pd.factorize,apps_all.info,apps_all.isnull,apps_all.isnull,apps_all_test.drop,apps_all_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,pd.read_csv,pd.read_csv,bureau.merge,plt.subplots,app_train.TARGET.value_counts,None.plot.pie,ax.set_title,ax.set_ylabel,sns.countplot,ax.set_title,plt.show,data.isnull,None.sum,None.sort_values,data.isnull,None.sum,data.isnull,None.count,None.sort_values,pd.concat,plt.subplots,plt.xticks,sns.barplot,plt.xlabel,plt.ylabel,plt.title,nulldata,data.select_dtypes,data.select_dtypes,data.select_dtypes,print,print,print,type_features,plt.subplots,dft1t2.groupby,None.count,None.plot.bar,ax.set_title,sns.countplot,ax.set_title,plt.xticks,plt.show,plot_re,plt.subplots,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.stripplot,plt.show,app_bureau.corr,abs,plt.figure,sns.heatmap,type_features,bureau_bal.isnull,None.sum,None.sort_values,bureau_bal.isnull,None.sum,bureau_bal.isnull,None.count,None.sort_values,pd.concat,plt.subplots,sns.countplot,None.set_title,bureau_bal.merge,bureau_fe1.groupby,None.count,None.reset_index,None.rename,bureau_fe1.merge,print,print,bureau_fe1.groupby,None.nunique,None.reset_index,None.rename,bureau_fe1.merge,print,bureau_fe1.apply,bureau_fe1.groupby,None.mean,None.reset_index,None.rename,bureau_fe1.merge,print,bureau_fe1.fillna,bureau_fe1.groupby,None.mean,None.reset_index,None.rename,bureau_fe1.merge,print,clf.predict_proba,apps_all_test.to_csv",238,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'concat', 'value_counts', 'info', 'dtypesapps', 'catplot', 'set_xticklabels', 'show_category_by_target', 'dtypesapps', 'factorize', 'info', 'isnull', 'sum', 'fillna', 'drop', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'subplots', 'violinplot', 'distplot', 'distplot', 'show_hist_by_target', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'info', 'mean', 'std', 'fillna', 'read_csv', 'merge', 'subplots', 'violinplot', 'distplot', 'distplot', 'dtypesapp_prev_target', 'show_hist_by_target', 'TARGET', 'print', 'print', 'print', 'dtypesapp_prev_target', 'show_category_by_target', 'groupby', 'replace', 'replace', 'replace', 'replace', 'replace', 'iloc', 'groupby', 'agg', 'head', 'join', 'upper', 'columns', 'head', 'groupby', 'count', 'reset_index', 'reset_index', 'merge', 'value_counts', 'fillna', 'isin', 'groupby', 'count', 'unstack', 'fillna', 'reset_index', 'head', 'merge', 'drop', 'head', 'concat', 'info', 'get_apps_processed', 'merge', 'info', 'dtypesapps_all', 'factorize', 'info', 'isnull', 'isnull', 'drop', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'read_csv', 'read_csv', 'merge', 'subplots', 'TARGET', 'plot', 'set_title', 'set_ylabel', 'countplot', 'set_title', 'show', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'isnull', 'count', 'sort_values', 'concat', 'subplots', 'xticks', 'barplot', 'xlabel', 'ylabel', 'title', 'nulldata', 'select_dtypes', 'select_dtypes', 'select_dtypes', 'print', 'print', 'print', 'type_features', 'subplots', 'groupby', 'count', 'plot', 'set_title', 'countplot', 'set_title', 'xticks', 'show', 'plot_re', 'subplots', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'stripplot', 'show', 'corr', 'abs', 'figure', 'heatmap', 'type_features', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'isnull', 'count', 'sort_values', 'concat', 'subplots', 'countplot', 'set_title', 'merge', 'groupby', 'count', 'reset_index', 'rename', 'merge', 'print', 'print', 'groupby', 'nunique', 'reset_index', 'rename', 'merge', 'print', 'apply', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'print', 'fillna', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'print', 'predict_proba', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'concat', 'info', 'dtypesapps', 'catplot', 'set_xticklabels', 'show_category_by_target', 'factorize', 'isnull', 'sum', 'fillna', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'subplots', 'violinplot', 'distplot', 'show_hist_by_target', 'corr', 'figure', 'heatmap', 'title', 'enumerate', 'subplot', 'kdeplot', 'xlabel', 'ylabel', 'tight_layout', 'abs', 'style', 'hist', 'mean', 'std', 'merge', 'dtypesapp_prev_target', 'TARGET', 'groupby', 'replace', 'iloc', 'agg', 'join', 'upper', 'columns', 'count', 'reset_index', 'isin', 'unstack', 'get_apps_processed', 'dtypesapps_all', 'set_title', 'set_ylabel', 'countplot', 'show', 'sort_values', 'xticks', 'barplot', 'nulldata', 'select_dtypes', 'type_features', 'plot_re', 'stripplot', 'rename', 'nunique', 'apply', 'predict_proba', 'to_csv']",78,"['numpy', 'pandas', 'os\n', 'time\n', 'gc\n', 'matplotlib', 'seaborn', 'warnings\n', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1006,0.76291,None,0,
bigdata-project-eda-fe-leejihyefinal.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,pd.read_csv,pd.read_csv,pd.read_csv,print,print,print,pd.concat,print,apps.merge,prev_app_outer.value_counts,prev_app_outer.head,app_train.astype,None.plot.hist,plt.subplots,app_train.TARGET.value_counts,None.plot.pie,ax.set_title,ax.set_ylabel,sns.countplot,ax.set_title,plt.show,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,show_hist_by_target,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,ext_data.corr,plt.figure,sns.heatmap,plt.title,app_train.dtypesapp_train.dtypes.index.tolist,prev_app_outer.dtypesprev_app_outer.dtypes.index.tolist,sns.catplot,chart.set_xticklabels,show_category_by_target,plt.figure,sns.barplot,plt.subplots,dft1t2.groupby,None.count,None.plot.bar,ax.set_title,sns.countplot,ax.set_title,plt.xticks,plt.show,sns.catplot,chart.set_xticklabels,show_category_by_target,prev_app_outer.head,prev.count,prev.groupby,prev_group.head,sns.boxplot,sns.jointplot,plt.show,data.isnull,None.sum,None.sort_values,data.isnull,None.sum,data.isnull,None.count,None.sort_values,pd.concat,missing_data,None.head,prev.info,apps.mean,apps.std,apps.head,apps.fillna,pd.DataFrame,prev_group.count,prev_agg.head,prev_agg.reset_index,prev1.head,apps.head,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.isnull,apps.isnull,apps_train.drop,train_test_split,apps.isnull,apps.isnull,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,app_test.to_csv",114,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'read_csv', 'read_csv', 'read_csv', 'print', 'print', 'print', 'concat', 'print', 'merge', 'value_counts', 'head', 'astype', 'plot', 'subplots', 'TARGET', 'plot', 'set_title', 'set_ylabel', 'countplot', 'set_title', 'show', 'subplots', 'violinplot', 'distplot', 'distplot', 'show_hist_by_target', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'corr', 'figure', 'heatmap', 'title', 'dtypesapp_train', 'dtypesprev_app_outer', 'catplot', 'set_xticklabels', 'show_category_by_target', 'figure', 'barplot', 'subplots', 'groupby', 'count', 'plot', 'set_title', 'countplot', 'set_title', 'xticks', 'show', 'catplot', 'set_xticklabels', 'show_category_by_target', 'head', 'count', 'groupby', 'head', 'boxplot', 'jointplot', 'show', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'isnull', 'count', 'sort_values', 'concat', 'missing_data', 'head', 'info', 'mean', 'std', 'head', 'fillna', 'DataFrame', 'count', 'head', 'reset_index', 'head', 'head', 'dtypesapps', 'factorize', 'isnull', 'isnull', 'drop', 'train_test_split', 'isnull', 'isnull', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'concat', 'merge', 'value_counts', 'head', 'astype', 'plot', 'subplots', 'TARGET', 'set_title', 'set_ylabel', 'countplot', 'show', 'violinplot', 'distplot', 'show_hist_by_target', 'figure', 'kdeplot', 'xlabel', 'ylabel', 'title', 'enumerate', 'subplot', 'tight_layout', 'corr', 'heatmap', 'dtypesapp_train', 'dtypesprev_app_outer', 'catplot', 'set_xticklabels', 'show_category_by_target', 'barplot', 'groupby', 'count', 'xticks', 'boxplot', 'jointplot', 'isnull', 'sum', 'sort_values', 'missing_data', 'info', 'mean', 'std', 'fillna', 'DataFrame', 'reset_index', 'dtypesapps', 'factorize', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']",62,"['numpy', 'pandas', 'os\n', 'gc', 'time\n', 'warnings\n', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm', 'LGBMClassfier\n']",11,"[1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]",664,0.76506,None,0,
bigdata-project-eda-fe-ella.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,pd.read_csv,pd.read_csv,print,app_train.head,print,app_test.head,app_train.value_counts,app_train.plot.hist,plt.subplots,app_train.TARGET.value_counts,None.plot.pie,ax.set_title,ax.set_ylabel,sns.countplot,ax.set_title,plt.show,app_train.dtypes.value_counts,app_train.corr,None.sort_values,print,print,app_train.head,app_train.describe,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,np.linspace,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,app_train.head,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.head,sns.catplot,range,print,ext.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.dtypes.value_counts,app_train.dtypesapp_train.dtypes.index.tolist,sns.catplot,chart.set_xticklabels,show_category_by_target,print,print,print,print,amt.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,df.isnull,None.sum,len,pd.concat,mis_table.rename,mis_val_tablemis_val_table.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,pd.concat,print,apps.value_counts,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.info,apps.head,apps.mean,apps.mean,apps.std,apps.head,apps.fillna,apps.head,apps.isnull,None.sum,None.head,pd.read_csv,ccb.head,ccb.merge,missing_values_table,missing_values.head,app_ccb.groupby,None.count,app_ccb.groupby,None.count,sns.boxplot,print,ccb.select_dtypes,ccb.select_dtypes,ccb.select_dtypes,print,print,plt.subplots,dft1t2.groupby,None.count,None.plot.bar,ax.set_title,sns.countplot,ax.set_title,plt.xticks,plt.show,plot_re,pd.crosstab,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,ccb.merge,app_ccb_target.dtypesapp_ccb_target.dtypes.index.tolist,show_hist_by_target,app_ccb_target.corr,None.sort_values,print,print,plt.subplots,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,print,print,print,print,print,print,app_ccb_target.groupby,ccb_group.head,ccb_group.agg,ccb_amt_agg.head,.join,None.upper,ccb_amt_agg.columns.ravel,ccb_amt_agg.head,ccb_amt_agg.reset_index,ccb_amt_agg.drop,apps.merge,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.isnull,apps.isnull,apps_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,apps_test.to_csv",207,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'read_csv', 'read_csv', 'print', 'head', 'print', 'head', 'value_counts', 'plot', 'subplots', 'TARGET', 'plot', 'set_title', 'set_ylabel', 'countplot', 'set_title', 'show', 'dtypes', 'corr', 'sort_values', 'print', 'print', 'head', 'describe', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'linspace', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'head', 'describe', 'plot', 'xlabel', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'print', 'head', 'catplot', 'range', 'print', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'dtypes', 'dtypesapp_train', 'catplot', 'set_xticklabels', 'show_category_by_target', 'print', 'print', 'print', 'print', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'concat', 'print', 'value_counts', 'dtypesapps', 'factorize', 'info', 'head', 'mean', 'mean', 'std', 'head', 'fillna', 'head', 'isnull', 'sum', 'head', 'read_csv', 'head', 'merge', 'missing_values_table', 'head', 'groupby', 'count', 'groupby', 'count', 'boxplot', 'print', 'select_dtypes', 'select_dtypes', 'select_dtypes', 'print', 'print', 'subplots', 'groupby', 'count', 'plot', 'set_title', 'countplot', 'set_title', 'xticks', 'show', 'plot_re', 'crosstab', 'subplots', 'violinplot', 'distplot', 'distplot', 'merge', 'dtypesapp_ccb_target', 'show_hist_by_target', 'corr', 'sort_values', 'print', 'print', 'subplots', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'print', 'print', 'print', 'print', 'print', 'print', 'groupby', 'head', 'agg', 'head', 'join', 'upper', 'columns', 'head', 'reset_index', 'drop', 'merge', 'dtypesapps', 'factorize', 'isnull', 'isnull', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'head', 'value_counts', 'plot', 'subplots', 'TARGET', 'set_title', 'set_ylabel', 'countplot', 'show', 'dtypes', 'corr', 'sort_values', 'describe', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'linspace', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'replace', 'catplot', 'range', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'dtypesapp_train', 'set_xticklabels', 'show_category_by_target', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypesapps', 'factorize', 'info', 'std', 'fillna', 'merge', 'count', 'boxplot', 'select_dtypes', 'plot_re', 'crosstab', 'violinplot', 'distplot', 'dtypesapp_ccb_target', 'show_hist_by_target', 'agg', 'join', 'upper', 'columns', 'reset_index', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']",78,"['numpy', 'pandas', 'os\n', 'gc\n', 'time\n', 'warnings\n', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1114,0.76647,None,1,
bigdata-project-eda-fe-je2760sul.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,pd.read_csv,pd.read_csv,pd.concat,print,print,print,apps.head,apps.mean,apps.std,apps.fillna,get_apps_processed,pd.read_csv,print,prev_app.head,prev_app.merge,prev_app_outer.head,prev_app_outer.value_counts,data.isnull,None.sum,None.sort_values,data.isnull,None.sum,data.isnull,None.count,None.sort_values,pd.concat,prev_app.info,missing_data,None.head,prev_app.merge,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,data.select_dtypes,data.select_dtypes,data.select_dtypes,print,print,print,type_features,plt.subplots,dft1t2.groupby,None.count,None.plot.bar,ax.set_title,sns.countplot,ax.set_title,plt.xticks,plt.show,plot_re,plot_re,plot_re,pd.crosstab,plt.subplots,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,plt.subplots,sns.distplot,None.set_title,sns.distplot,None.set_title,sns.distplot,None.set_title,app_prev_target.groupby,None.agg,app_prev_target.groupby,None.agg,prev_app.groupby,prev_app.groupby,prev_group.head,prev_group.head,pd.DataFrame,prev_group.count,prev_app.groupby,None.mean,prev_app.groupby,None.max,prev_app.groupby,None.min,prev_app.groupby,None.mean,prev_app.groupby,None.max,prev_app.groupby,None.min,prev_agg.head,prev_app.apply,prev_app.groupby,None.sum,prev_app.groupby,None.sum,sns.distplot,None.set_title,pd.DataFrame,prev_app.groupby,None.sum,prev_app.groupby,None.count,sns.stripplot,plt.show,prev_app.value_counts,pd.DataFrame,prev_refused.groupby,None.count,prev_refused.groupby,None.max,prev_refused.groupby,None.min,prev_refused_group.reset_index,prev_agg.reset_index,prev_agg.merge,prev_refused_agg.fillna,prev_refused_agg.head,prev_refused_agg.head,pd.DataFrame,prev_approved.groupby,None.max,prev_approved.groupby,None.min,prev_approved_group.reset_index,prev_refused_agg.merge,prev_refused_approved_agg.fillna,get_apps_processed,print,apps_all.merge,print,apps_all.info,apps_all.dtypesapps_all.dtypes.index.tolist,pd.factorize,apps_all.info,apps_all.isnull,apps_all.isnull,apps_all_test.drop,apps_all_train.columns.tolist,apps_all_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,apps_all_test.to_csv",153,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'read_csv', 'read_csv', 'concat', 'print', 'print', 'print', 'head', 'mean', 'std', 'fillna', 'get_apps_processed', 'read_csv', 'print', 'head', 'merge', 'head', 'value_counts', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'isnull', 'count', 'sort_values', 'concat', 'info', 'missing_data', 'head', 'merge', 'subplots', 'violinplot', 'distplot', 'distplot', 'select_dtypes', 'select_dtypes', 'select_dtypes', 'print', 'print', 'print', 'type_features', 'subplots', 'groupby', 'count', 'plot', 'set_title', 'countplot', 'set_title', 'xticks', 'show', 'plot_re', 'plot_re', 'plot_re', 'crosstab', 'subplots', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'subplots', 'distplot', 'set_title', 'distplot', 'set_title', 'distplot', 'set_title', 'groupby', 'agg', 'groupby', 'agg', 'groupby', 'groupby', 'head', 'head', 'DataFrame', 'count', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'head', 'apply', 'groupby', 'sum', 'groupby', 'sum', 'distplot', 'set_title', 'DataFrame', 'groupby', 'sum', 'groupby', 'count', 'stripplot', 'show', 'value_counts', 'DataFrame', 'groupby', 'count', 'groupby', 'max', 'groupby', 'min', 'reset_index', 'reset_index', 'merge', 'fillna', 'head', 'head', 'DataFrame', 'groupby', 'max', 'groupby', 'min', 'reset_index', 'merge', 'fillna', 'get_apps_processed', 'print', 'merge', 'print', 'info', 'dtypesapps_all', 'factorize', 'info', 'isnull', 'isnull', 'drop', 'columns', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'concat', 'head', 'mean', 'std', 'fillna', 'get_apps_processed', 'merge', 'value_counts', 'isnull', 'sum', 'sort_values', 'count', 'info', 'missing_data', 'subplots', 'violinplot', 'distplot', 'select_dtypes', 'type_features', 'groupby', 'plot', 'set_title', 'countplot', 'xticks', 'show', 'plot_re', 'crosstab', 'agg', 'DataFrame', 'max', 'min', 'apply', 'stripplot', 'reset_index', 'dtypesapps_all', 'factorize', 'drop', 'columns', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv']",51,"['numpy', 'pandas', 'os\n', 'gc\n', 'time\n', 'warnings\n', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",798,0.77106,None,0,
catboostarter.py,"pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,print,LabelEncoder,le.fit_transform,POS_CASH.groupby,None.nunique,None.rename,nunique_status.reset_index,POS_CASH.merge,POS_CASH.drop,le.fit_transform,credit_card.groupby,None.nunique,None.rename,nunique_status.reset_index,credit_card.merge,credit_card.drop,le.fit_transform,bureauf.groupby,None.nunique,None.rename,nunique.reset_index,bureau.merge,bureau.drop,bureau.drop,le.fit_transform,previous_appf.groupby,None.nunique,None.rename,nunique.reset_index,previous_app.merge,previous_app.drop,previous_app.drop,print,application_train.merge,application_test.merge,data_train.merge,data_test.merge,data_train.merge,data_test.merge,data_train.merge,data_test.merge,data_train.drop,data_test.drop,np.argsort,np.searchsorted,column_index,print,print,le.fit_transform,le.fit_transform,data_train.fillna,data_test.fillna,train_test_split,print,print,print,CatBoostClassifier,cb_model.fit,pd.DataFrame,fea_imp.sort_values,fea_imp.sort_values,fea_imp.plot,plt.savefig,print,cb_model.predict_proba,subm.to_csv",73,"['read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'print', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'rename', 'reset_index', 'merge', 'drop', 'fit_transform', 'groupby', 'nunique', 'rename', 'reset_index', 'merge', 'drop', 'fit_transform', 'groupby', 'nunique', 'rename', 'reset_index', 'merge', 'drop', 'drop', 'fit_transform', 'groupby', 'nunique', 'rename', 'reset_index', 'merge', 'drop', 'drop', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'drop', 'drop', 'argsort', 'searchsorted', 'column_index', 'print', 'print', 'fit_transform', 'fit_transform', 'fillna', 'fillna', 'train_test_split', 'print', 'print', 'print', 'CatBoostClassifier', 'fit', 'DataFrame', 'sort_values', 'sort_values', 'plot', 'savefig', 'print', 'predict_proba', 'to_csv']","['read_csv', 'print', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'rename', 'reset_index', 'merge', 'drop', 'argsort', 'searchsorted', 'column_index', 'fillna', 'train_test_split', 'CatBoostClassifier', 'fit', 'DataFrame', 'sort_values', 'plot', 'savefig', 'predict_proba', 'to_csv']",23,"['numpy', 'pandas', 'matplotlib', 'sklearn', 'catboost']",5,"[1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",137,0.77207,Silver,55,
basic-jeepy.py,"np.random.randn,len,len,pd.concat,temp.groupby,None.name.agg,np.exp,target.mean,averages.drop,pd.merge,None.rename,None.fillna,pd.merge,None.rename,None.fillna,add_noise,add_noise,gc.enable,pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,inst.groupby,None.mean,print,pd.read_csv,pd.read_csv,print,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,gc.collect,train.columns.str.replace,test.columns.str.replace,trainc.astype,stringtypes.append,trainc.astype,inttypes.append,trainc.astype,floattypes.append,KFold,testcol.isin,testcol.isin,target_encode,enumerate,target_encode,KFold,testcol.isin,testcol.isin,target_encode,enumerate,target_encode,test.insert,pd.concat,gc.collect,list,alldatafeatures.astype,alldata.isnull,None.sum,alldatacol.value_counts,None.reset_index,alldata.merge,StandardScaler,alldatac.isnull,ss.fit_transform,alldatac.fillna,np.exp,Output,Output,Output,GPI,GPII,GPIII,roc_auc_score,roc_auc_score,roc_auc_score,roc_auc_score,pd.DataFrame,Submission.to_csv",164,"['random', 'len', 'len', 'concat', 'groupby', 'name', 'exp', 'mean', 'drop', 'merge', 'rename', 'fillna', 'merge', 'rename', 'fillna', 'add_noise', 'add_noise', 'enable', 'read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'groupby', 'mean', 'print', 'read_csv', 'read_csv', 'print', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'columns', 'columns', 'astype', 'append', 'astype', 'append', 'astype', 'append', 'KFold', 'isin', 'isin', 'target_encode', 'enumerate', 'target_encode', 'KFold', 'isin', 'isin', 'target_encode', 'enumerate', 'target_encode', 'insert', 'concat', 'collect', 'list', 'astype', 'isnull', 'sum', 'value_counts', 'reset_index', 'merge', 'StandardScaler', 'isnull', 'fit_transform', 'fillna', 'exp', 'Output', 'Output', 'Output', 'GPI', 'GPII', 'GPIII', 'roc_auc_score', 'roc_auc_score', 'roc_auc_score', 'roc_auc_score', 'DataFrame', 'to_csv']","['random', 'len', 'concat', 'groupby', 'name', 'exp', 'mean', 'drop', 'merge', 'rename', 'fillna', 'add_noise', 'enable', 'read_csv', 'print', 'count', 'map', 'collect', 'get_dummies', 'DataFrame', 'factorize', 'get_indexer', 'columns', 'astype', 'append', 'KFold', 'isin', 'target_encode', 'enumerate', 'insert', 'list', 'isnull', 'sum', 'value_counts', 'reset_index', 'StandardScaler', 'fit_transform', 'Output', 'GPI', 'GPII', 'GPIII', 'roc_auc_score', 'to_csv']",43,"['gc\n', 'numpy', 'pandas', 'sklearn']",4,"[1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1951,0.77235,bronze,17,
cat_and_lgb_ensemble.py,"pd.read_csv,pd.read_csv,catboost_result.rename,lgb_result.rename,pd.merge,sub.drop,sub.to_csv",7,"['read_csv', 'read_csv', 'rename', 'rename', 'merge', 'drop', 'to_csv']","['read_csv', 'rename', 'merge', 'drop', 'to_csv']",5,"['numpy', 'pandas', 'os\n']",3,"[1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",26,0.77351,None,3,
homecredit-automated-hyperparameter-tuning.py,"get_ipython,None.run_line_magic,print,pd.read_csv,features.sample,features.select_dtypes,np.array,None.reshape,features.drop,train_test_split,print,print,train_features.head,lgb.LGBMClassifier,lgb.Dataset,lgb.Dataset,model.get_params,lgb.cv,print,print,len,model.fit,model.predict_proba,roc_auc_score,print,hyperparameters.get,int,timer,lgb.cv,timer,len,open,csv.writer,writer.writerow,of_connection.close,hp.loguniform,range,learning_rate_dist.append,plt.figure,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,hp.quniform,range,num_leaves_dist.append,plt.figure,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,hp.choice,sample,hyperparams.get,hp.choice,hp.quniform,hp.loguniform,hp.quniform,hp.quniform,hp.uniform,hp.uniform,hp.uniform,hp.choice,sample,x.get,open,csv.writer,writer.writerow,of_connection.close,objective,print,print,Trials,open,csv.writer,writer.writerow,of_connection.close,fmin,sorted,pd.read_csv,results.copy,new_results.map,new_results.sort_values,None.reset_index,print,lgb.LGBMClassifier,model.fit,model.predict_proba,print,pd.DataFrame,enumerate,hyp_df.append,evaluate,fmin,open,f.write,open,csv.writer,writer.writerow,of_connection.close,Trials,fmin,sorted,print,print,open,f.write,pd.read_csv,None.sort_values,None.reset_index,evaluate,pd.DataFrame,scores.astype,scores.astype,scores.head,bayes_params.idxmax,None.copy,sns.lmplot,plt.scatter,plt.xlabel,plt.ylabel,plt.title,plt.figure,sns.kdeplot,sns.kdeplot,plt.legend,plt.xlabel,plt.ylabel,plt.title,enumerate,plt.figure,sns.kdeplot,sns.kdeplot,plt.legend,plt.title,plt.xlabel,plt.ylabel,plt.show,plt.subplots,enumerate,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,pd.read_csv,pd.read_csv,np.array,None.reshape,train.drop,test.drop,print,print,bayes_results.map,dict,lgb.cv,print,print,lgb.LGBMClassifier,model.fit,model.predict_proba,pd.DataFrame,submission.to_csv",162,"['get_ipython', 'run_line_magic', 'print', 'read_csv', 'sample', 'select_dtypes', 'array', 'reshape', 'drop', 'train_test_split', 'print', 'print', 'head', 'LGBMClassifier', 'Dataset', 'Dataset', 'get_params', 'cv', 'print', 'print', 'len', 'fit', 'predict_proba', 'roc_auc_score', 'print', 'get', 'int', 'timer', 'cv', 'timer', 'len', 'open', 'writer', 'writerow', 'close', 'loguniform', 'range', 'append', 'figure', 'kdeplot', 'title', 'xlabel', 'ylabel', 'quniform', 'range', 'append', 'figure', 'kdeplot', 'title', 'xlabel', 'ylabel', 'choice', 'sample', 'get', 'choice', 'quniform', 'loguniform', 'quniform', 'quniform', 'uniform', 'uniform', 'uniform', 'choice', 'sample', 'get', 'open', 'writer', 'writerow', 'close', 'objective', 'print', 'print', 'Trials', 'open', 'writer', 'writerow', 'close', 'fmin', 'sorted', 'read_csv', 'copy', 'map', 'sort_values', 'reset_index', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'print', 'DataFrame', 'enumerate', 'append', 'evaluate', 'fmin', 'open', 'write', 'open', 'writer', 'writerow', 'close', 'Trials', 'fmin', 'sorted', 'print', 'print', 'open', 'write', 'read_csv', 'sort_values', 'reset_index', 'evaluate', 'DataFrame', 'astype', 'astype', 'head', 'idxmax', 'copy', 'lmplot', 'scatter', 'xlabel', 'ylabel', 'title', 'figure', 'kdeplot', 'kdeplot', 'legend', 'xlabel', 'ylabel', 'title', 'enumerate', 'figure', 'kdeplot', 'kdeplot', 'legend', 'title', 'xlabel', 'ylabel', 'show', 'subplots', 'enumerate', 'regplot', 'scatter', 'set', 'tight_layout', 'read_csv', 'read_csv', 'array', 'reshape', 'drop', 'drop', 'print', 'print', 'map', 'dict', 'cv', 'print', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv']","['get_ipython', 'run_line_magic', 'print', 'read_csv', 'sample', 'select_dtypes', 'array', 'reshape', 'drop', 'train_test_split', 'head', 'LGBMClassifier', 'Dataset', 'get_params', 'cv', 'len', 'fit', 'predict_proba', 'roc_auc_score', 'get', 'int', 'timer', 'open', 'writer', 'writerow', 'close', 'loguniform', 'range', 'append', 'figure', 'kdeplot', 'title', 'xlabel', 'ylabel', 'quniform', 'choice', 'uniform', 'objective', 'Trials', 'fmin', 'sorted', 'copy', 'map', 'sort_values', 'reset_index', 'DataFrame', 'enumerate', 'evaluate', 'write', 'astype', 'idxmax', 'lmplot', 'scatter', 'legend', 'show', 'subplots', 'regplot', 'set', 'tight_layout', 'dict', 'to_csv']",61,"['numpy', 'pandas', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'os\n', 'csv\n', 'hyperopt', 'timeit', 'ast\n', 'json\n']",12,"[1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",663,0.77528,None,0,
catboost_comparison.py,"os.path.join,print,print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,print,print,print,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,print,prev_app_df.groupby,None.agg,app_data.merge,prev_app_df.groupby,None.mean,merged_df.merge,prev_app_df.groupby,None.max,merged_df.merge,prev_app_df.groupby,None.min,merged_df.merge,print,process_dataframe,prev_app_dfcat_feats.groupby,None.agg,merged_df.merge,print,np.average,credit_card_df.groupby,None.agg,merged_df.merge,credit_card_df.groupby,None.idxmax,credit_card_df.columnscredit_card_df.dtypes.tolist,merged_df.merge,print,bureau_df.groupby,None.mean,merged_df.merge,print,bureau_balance_df.groupby,None.idxmax,merged_df.merge,print,np.average,pos_cash_df.groupby,None.agg,merged_df.merge,pos_cash_df.groupby,None.idxmax,pos_cash_df.columnspos_cash_df.dtypes.tolist,merged_df.merge,print,install_df.groupby,None.mean,merged_df.merge,print,merged_df.merge,merged_df.merge,merged_df.merge,merged_df.merge,print,print,LabelEncoder,encoder.fit_transform,print,categorical_feats.tolist,len,pd.concat,feature_engineering,merged_df.drop,process_dataframe,gc.collect,train_df.pop,test_df.drop,np.unique,CatBoostClassifier,cross_val_score,print,cb_clf.fit,cb_clf.predict_proba,pd.DataFrame,out_df.to_csv,pd.DataFrame,importances.sort_values,plt.subplots,sns.barplot,plt.tight_layout,plt.savefig",100,"['path', 'print', 'print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'print', 'print', 'print', 'replace', 'replace', 'replace', 'replace', 'replace', 'print', 'groupby', 'agg', 'merge', 'groupby', 'mean', 'merge', 'groupby', 'max', 'merge', 'groupby', 'min', 'merge', 'print', 'process_dataframe', 'groupby', 'agg', 'merge', 'print', 'average', 'groupby', 'agg', 'merge', 'groupby', 'idxmax', 'columnscredit_card_df', 'merge', 'print', 'groupby', 'mean', 'merge', 'print', 'groupby', 'idxmax', 'merge', 'print', 'average', 'groupby', 'agg', 'merge', 'groupby', 'idxmax', 'columnspos_cash_df', 'merge', 'print', 'groupby', 'mean', 'merge', 'print', 'merge', 'merge', 'merge', 'merge', 'print', 'print', 'LabelEncoder', 'fit_transform', 'print', 'tolist', 'len', 'concat', 'feature_engineering', 'drop', 'process_dataframe', 'collect', 'pop', 'drop', 'unique', 'CatBoostClassifier', 'cross_val_score', 'print', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'DataFrame', 'sort_values', 'subplots', 'barplot', 'tight_layout', 'savefig']","['path', 'print', 'read_csv', 'replace', 'groupby', 'agg', 'merge', 'mean', 'max', 'min', 'process_dataframe', 'average', 'idxmax', 'columnscredit_card_df', 'columnspos_cash_df', 'LabelEncoder', 'fit_transform', 'tolist', 'len', 'concat', 'feature_engineering', 'drop', 'collect', 'pop', 'unique', 'CatBoostClassifier', 'cross_val_score', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'sort_values', 'subplots', 'barplot', 'tight_layout', 'savefig']",36,"['os\n', 'gc\n', 'pandas', 'numpy', 'catboost', 'sklearn', 'seaborn', 'matplotlib']",8,"[1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",251,0.778,Bronze,8,
good_fun_with_ligthgbm (1).py,"print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.concat,pd.get_dummies,print,buro_balance.groupby,None.size,buro_balance.groupby,None.max,buro_balance.groupby,None.min,buro_balance.groupby,None.value_counts,buro_counts.unstack,buro.join,print,pd.get_dummies,prev.groupby,None.mean,prev.groupby,None.count,print,pd.get_dummies,buro.groupby,None.mean,buro.groupby,None.count,print,LabelEncoder,le.fit_transform,POS_CASH.groupby,None.nunique,POS_CASH.groupby,None.max,POS_CASH.drop,print,le.fit_transform,credit_card.groupby,None.nunique,credit_card.groupby,None.max,credit_card.drop,print,payments.groupby,None.mean,payments.groupby,None.max,payments.groupby,None.min,print,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,print,data.isnull,None.mean,data.isnull,None.mean,gc.enable,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test.to_csv,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.feature.isin",100,"['print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'concat', 'get_dummies', 'print', 'groupby', 'size', 'groupby', 'max', 'groupby', 'min', 'groupby', 'value_counts', 'unstack', 'join', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'print', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'print', 'isnull', 'mean', 'isnull', 'mean', 'enable', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature']","['print', 'read_csv', 'concat', 'get_dummies', 'groupby', 'size', 'max', 'min', 'value_counts', 'unstack', 'join', 'mean', 'count', 'LabelEncoder', 'fit_transform', 'nunique', 'drop', 'merge', 'isnull', 'enable', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'collect', 'to_csv', 'sort_values', 'feature']",31,"['pandas', 'numpy', 'sklearn', 'xgboost', 'gc\n', 'lightgbm']",6,"[1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",199,0.778,,,couldnt find
good_fun_with_ligthgbm.py,"print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.concat,pd.get_dummies,print,buro_balance.groupby,None.size,buro_balance.groupby,None.max,buro_balance.groupby,None.min,buro_balance.groupby,None.value_counts,buro_counts.unstack,buro.join,print,pd.get_dummies,prev.groupby,None.mean,prev.groupby,None.count,print,pd.get_dummies,buro.groupby,None.mean,buro.groupby,None.count,print,LabelEncoder,le.fit_transform,POS_CASH.groupby,None.nunique,POS_CASH.groupby,None.max,POS_CASH.drop,print,le.fit_transform,credit_card.groupby,None.nunique,credit_card.groupby,None.max,credit_card.drop,print,payments.groupby,None.mean,payments.groupby,None.max,payments.groupby,None.min,print,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,print,data.isnull,None.mean,data.isnull,None.mean,gc.enable,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test.to_csv,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.feature.isin",100,"['print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'concat', 'get_dummies', 'print', 'groupby', 'size', 'groupby', 'max', 'groupby', 'min', 'groupby', 'value_counts', 'unstack', 'join', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'print', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'print', 'isnull', 'mean', 'isnull', 'mean', 'enable', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature']","['print', 'read_csv', 'concat', 'get_dummies', 'groupby', 'size', 'max', 'min', 'value_counts', 'unstack', 'join', 'mean', 'count', 'LabelEncoder', 'fit_transform', 'nunique', 'drop', 'merge', 'isnull', 'enable', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'collect', 'to_csv', 'sort_values', 'feature']",31,"['pandas', 'numpy', 'sklearn', 'xgboost', 'gc\n', 'lightgbm']",6,"[1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",213,0.778,,,couldnt find
good_fun_with_ligthgbm (2).py,"gc.enable,pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,inst.groupby,None.mean,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,gc.collect,gc.enable,KFold,np.zeros,np.zeros,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,print,gc.collect,print,test.to_csv",109,"['enable', 'read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'groupby', 'mean', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'enable', 'KFold', 'zeros', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'print', 'collect', 'print', 'to_csv']","['enable', 'read_csv', 'print', 'concat', 'drop', 'groupby', 'count', 'map', 'mean', 'collect', 'get_dummies', 'merge', 'DataFrame', 'factorize', 'get_indexer', 'KFold', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",22,"['pandas', 'numpy', 'sklearn', 'gc\n', 'lightgbm']",5,"[1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",210,0.778,,,couldnt find
good_fun_with_ligthgbm (3).py,"pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,inst.groupby,None.mean,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,gc.collect,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,plt.figure,enumerate,roc_curve,roc_auc_score,scores.append,plt.plot,plt.plot,roc_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig,plt.figure,enumerate,roc_curve,average_precision_score,scores.append,plt.plot,precision_recall_curve,average_precision_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig,gc.enable,build_model_input,KFold,train_model,test_preds.to_csv,folds.split,display_importances,display_roc_curve,display_precision_recall",164,"['read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'groupby', 'mean', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'figure', 'enumerate', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'plot', 'roc_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig', 'figure', 'enumerate', 'roc_curve', 'average_precision_score', 'append', 'plot', 'precision_recall_curve', 'average_precision_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig', 'enable', 'build_model_input', 'KFold', 'train_model', 'to_csv', 'split', 'display_importances', 'display_roc_curve', 'display_precision_recall']","['read_csv', 'print', 'concat', 'drop', 'groupby', 'count', 'map', 'mean', 'collect', 'get_dummies', 'merge', 'DataFrame', 'factorize', 'get_indexer', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'legend', 'average_precision_score', 'precision_recall_curve', 'enable', 'build_model_input', 'KFold', 'train_model', 'to_csv', 'split', 'display_importances', 'display_roc_curve', 'display_precision_recall']",46,"['pandas', 'numpy', 'sklearn', 'lightgbm', 'matplotlib', 'seaborn', 'gc\n']",7,"[1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",304,0.778,,,couldnt find
credit-skeleton.py,"print,get_ipython,None.run_line_magic,pd.read_csv,pd.read_csv,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,df.groupby,None.agg,agg.upper,df.astype,df.groupby,None.agg,agg.upper,df.groupby,None.agg,agg.upper,df.CREDIT_ACTIVE.astype,df.groupby,None.agg,agg.upper,dfcol.factorize,dffeat_num_colsfeat_binary_cols.set_index,df.astype,df.groupby,None.agg,agg.upper,hold.append,gc.collect,pd.read_csv,hold.append,gc.collect,pd.read_csv,hold.append,gc.collect,pd.read_csv,hold.append,gc.collect,pd.read_csv,hold.append,gc.collect,pd.read_csv,hold.append,gc.collect,fit_predictor,gc.collect,df_test.reset_index,get_ipython,None.run_cell_magic",79,"['print', 'get_ipython', 'run_line_magic', 'read_csv', 'read_csv', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'groupby', 'agg', 'upper', 'astype', 'groupby', 'agg', 'upper', 'groupby', 'agg', 'upper', 'CREDIT_ACTIVE', 'groupby', 'agg', 'upper', 'factorize', 'set_index', 'astype', 'groupby', 'agg', 'upper', 'append', 'collect', 'read_csv', 'append', 'collect', 'read_csv', 'append', 'collect', 'read_csv', 'append', 'collect', 'read_csv', 'append', 'collect', 'read_csv', 'append', 'collect', 'fit_predictor', 'collect', 'reset_index', 'get_ipython', 'run_cell_magic']","['print', 'get_ipython', 'run_line_magic', 'read_csv', 'notnull', 'isnull', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'display_importances', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'agg', 'upper', 'astype', 'CREDIT_ACTIVE', 'factorize', 'set_index', 'append', 'fit_predictor', 'reset_index', 'run_cell_magic']",36,"['numpy', 'pandas', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'gc\n', 'os\n']",8,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",255,0.77804,None,2,
lightgbm_harder_better_slower.py,"os.path.join,print,print,df.memory_usage,None.sum,print,dfcol.min,dfcol.max,str,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,dfcol.astype,df.memory_usage,None.sum,print,print,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,print,print,print,right_df.groupby,None.agg,left_df.merge,app_data.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.astype,prev_app_df.astype,app_data.columns.str.contains,None.sum,app_data.mean,print,prev_app_df.groupby,None.agg,app_data.merge,agg_and_merge,print,process_dataframe,prev_app_dfcat_feats.groupby,None.agg,merged_df.merge,print,np.average,credit_card_df.groupby,None.agg,merged_df.merge,agg_and_merge,print,credit_card_df.groupby,None.idxmax,credit_card_df.columnscredit_card_df.dtypes.tolist,merged_df.merge,print,agg_and_merge,print,process_dataframe,bureau_dfcat_feats.groupby,None.agg,merged_df.merge,print,bureau_balance_df.groupby,None.idxmax,merged_df.merge,print,np.average,pos_cash_df.groupby,None.agg,merged_df.merge,agg_and_merge,pos_cash_df.groupby,None.idxmax,pos_cash_df.columnspos_cash_df.dtypes.tolist,merged_df.merge,print,agg_and_merge,print,merged_df.merge,merged_df.merge,merged_df.merge,merged_df.merge,print,print,LabelEncoder,encoder.fit_transform,print,categorical_feats.tolist,len,pd.concat,feature_engineering,merged_df.to_csv,merged_df.drop,process_dataframe,gc.collect,train_df.pop,test_df.drop,lgbm.Dataset,lgbm.cv,np.argmax,print,print,lgbm.train,clf.predict,pd.DataFrame,out_df.to_csv,plt.subplots,lgbm.plot_importance,lgbm.plot_importance,ax.set_title,ax1.set_title,plt.tight_layout,plt.savefig",143,"['path', 'print', 'print', 'memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'astype', 'memory_usage', 'sum', 'print', 'print', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'print', 'print', 'print', 'groupby', 'agg', 'merge', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'astype', 'astype', 'columns', 'sum', 'mean', 'print', 'groupby', 'agg', 'merge', 'agg_and_merge', 'print', 'process_dataframe', 'groupby', 'agg', 'merge', 'print', 'average', 'groupby', 'agg', 'merge', 'agg_and_merge', 'print', 'groupby', 'idxmax', 'columnscredit_card_df', 'merge', 'print', 'agg_and_merge', 'print', 'process_dataframe', 'groupby', 'agg', 'merge', 'print', 'groupby', 'idxmax', 'merge', 'print', 'average', 'groupby', 'agg', 'merge', 'agg_and_merge', 'groupby', 'idxmax', 'columnspos_cash_df', 'merge', 'print', 'agg_and_merge', 'print', 'merge', 'merge', 'merge', 'merge', 'print', 'print', 'LabelEncoder', 'fit_transform', 'print', 'tolist', 'len', 'concat', 'feature_engineering', 'to_csv', 'drop', 'process_dataframe', 'collect', 'pop', 'drop', 'Dataset', 'cv', 'argmax', 'print', 'print', 'train', 'predict', 'DataFrame', 'to_csv', 'subplots', 'plot_importance', 'plot_importance', 'set_title', 'set_title', 'tight_layout', 'savefig']","['path', 'print', 'memory_usage', 'sum', 'min', 'max', 'str', 'iinfo', 'astype', 'finfo', 'reduce_mem_usage', 'groupby', 'agg', 'merge', 'replace', 'columns', 'mean', 'agg_and_merge', 'process_dataframe', 'average', 'idxmax', 'columnscredit_card_df', 'columnspos_cash_df', 'LabelEncoder', 'fit_transform', 'tolist', 'len', 'concat', 'feature_engineering', 'to_csv', 'drop', 'collect', 'pop', 'Dataset', 'cv', 'argmax', 'train', 'predict', 'DataFrame', 'subplots', 'plot_importance', 'set_title', 'tight_layout', 'savefig']",44,"['os\n', 'gc\n', 'pandas', 'numpy', 'lightgbm', 'xgboost', 'seaborn', 'sklearn', 'matplotlib']",9,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",330,0.77805,Silver,44,
basic-baseline-with-lgb-v3-one-hot-encoder.py,"print,get_ipython,None.run_line_magic,os.listdir,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,list_of_files.sort,list_of_files.remove,print,pd.DataFrame,print,POS_CASH_balance.head,application_test.head,application_train.head,bureau.head,bureau_balance.head,credit_card_balance.head,installments_payments.head,previous_application.head,np.concatenate,print,len,print,print,len,print,print,np.unique,print,np.unique,bureau.isin,np.intersect1d,bureau_filtered.isin,len,print,application_train.drop,application_test.copy,len,print,pd.concat,gc.collect,list,categorical_features,numerical.remove,dffeature.fillna,print,LabelEncoder,encoder.fit,encoder.transform,df.head,dffeats.fillna,df.head,POS_CASH_balance.isin,print,POS_CASH_balance_G1.head,plt.figure,plt.title,sns.distplot,plt.show,zip,plot_distribution,Counter,plt.bar,plt.xticks,plt.show,np.unique,POS_CASH_balance_G1.groupby,None.mean,POS_CASH_balance_G1.groupby,None.count,df.merge,None.fillna,df.merge,None.fillna,gc.collect,df.head,bureau.drop,bureau.drop,bureau.isin,print,bureau_G1.head,bureau_G1.drop,bureau_G1.drop,plot_distribution,Counter,plt.bar,plt.xticks,plt.title,plt.show,bureau_G1.groupby,None.mean,bureau_G1.groupby,None.count,df.merge,None.fillna,df.merge,None.fillna,gc.collect,df.head,credit_card_balance.drop,credit_card_balance.drop,credit_card_balance.isin,print,credit_card_balance_G1.head,credit_card_balance_G1.drop,credit_card_balance_G1.drop,plot_distribution,Counter,plt.bar,plt.xticks,plt.title,plt.show,credit_card_balance_G1.groupby,None.mean,credit_card_balance_G1.groupby,None.count,df.merge,None.fillna,df.merge,None.fillna,gc.collect,df.head,installments_payments.drop,installments_payments.drop,installments_payments.isin,print,installments_payments_G1.head,plot_distribution,installments_payments_G1.groupby,None.mean,installments_payments_G1.groupby,None.count,df.merge,None.fillna,df.merge,None.fillna,gc.collect,df.head,previous_application.drop,previous_application.drop,previous_application.isin,print,previous_application_G1.head,categorical_features,numerical.remove,plot_distribution,Counter,plt.bar,plt.xticks,plt.title,plt.show,previous_application_G1.groupby,None.mean,previous_application_G1.groupby,None.count,df.merge,None.fillna,df.merge,None.fillna,gc.collect,df.head,dftr.drop,dftr.drop,KFold,np.zeros,np.zeros,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,print,gc.collect,pd.read_csv,submission.to_csv,submission.head",182,"['print', 'get_ipython', 'run_line_magic', 'listdir', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'sort', 'remove', 'print', 'DataFrame', 'print', 'head', 'head', 'head', 'head', 'head', 'head', 'head', 'head', 'concatenate', 'print', 'len', 'print', 'print', 'len', 'print', 'print', 'unique', 'print', 'unique', 'isin', 'intersect1d', 'isin', 'len', 'print', 'drop', 'copy', 'len', 'print', 'concat', 'collect', 'list', 'categorical_features', 'remove', 'fillna', 'print', 'LabelEncoder', 'fit', 'transform', 'head', 'fillna', 'head', 'isin', 'print', 'head', 'figure', 'title', 'distplot', 'show', 'zip', 'plot_distribution', 'Counter', 'bar', 'xticks', 'show', 'unique', 'groupby', 'mean', 'groupby', 'count', 'merge', 'fillna', 'merge', 'fillna', 'collect', 'head', 'drop', 'drop', 'isin', 'print', 'head', 'drop', 'drop', 'plot_distribution', 'Counter', 'bar', 'xticks', 'title', 'show', 'groupby', 'mean', 'groupby', 'count', 'merge', 'fillna', 'merge', 'fillna', 'collect', 'head', 'drop', 'drop', 'isin', 'print', 'head', 'drop', 'drop', 'plot_distribution', 'Counter', 'bar', 'xticks', 'title', 'show', 'groupby', 'mean', 'groupby', 'count', 'merge', 'fillna', 'merge', 'fillna', 'collect', 'head', 'drop', 'drop', 'isin', 'print', 'head', 'plot_distribution', 'groupby', 'mean', 'groupby', 'count', 'merge', 'fillna', 'merge', 'fillna', 'collect', 'head', 'drop', 'drop', 'isin', 'print', 'head', 'categorical_features', 'remove', 'plot_distribution', 'Counter', 'bar', 'xticks', 'title', 'show', 'groupby', 'mean', 'groupby', 'count', 'merge', 'fillna', 'merge', 'fillna', 'collect', 'head', 'drop', 'drop', 'KFold', 'zeros', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'print', 'collect', 'read_csv', 'to_csv', 'head']","['print', 'get_ipython', 'run_line_magic', 'listdir', 'read_csv', 'sort', 'remove', 'DataFrame', 'head', 'concatenate', 'len', 'unique', 'isin', 'intersect1d', 'drop', 'copy', 'concat', 'collect', 'list', 'categorical_features', 'fillna', 'LabelEncoder', 'fit', 'transform', 'figure', 'title', 'distplot', 'show', 'zip', 'plot_distribution', 'Counter', 'bar', 'xticks', 'groupby', 'mean', 'count', 'merge', 'KFold', 'zeros', 'enumerate', 'LGBMClassifier', 'predict_proba', 'to_csv']",43,"['numpy', 'pandas', 'os\n', 'matplotlib\n', 'matplotlib', 'seaborn', 'collections', 'gc\n', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",626,0.77826,None,1,
olivier_lightgbm_parameters_by_bayesian_opt.py,"pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,inst.groupby,None.mean,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,gc.collect,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,pd.DataFrame,roc_auc_score,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,plt.figure,enumerate,roc_curve,roc_auc_score,scores.append,plt.plot,plt.plot,roc_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig,plt.figure,enumerate,roc_curve,average_precision_score,scores.append,plt.plot,precision_recall_curve,average_precision_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig,gc.enable,build_model_input,StratifiedKFold,train_model,datetime.now,str,None.replace,str,test_preds.to_csv,str,df_oof_preds.to_csv,folds.split,display_importances,display_roc_curve,display_precision_recall",172,"['read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'groupby', 'mean', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'DataFrame', 'roc_auc_score', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'figure', 'enumerate', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'plot', 'roc_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig', 'figure', 'enumerate', 'roc_curve', 'average_precision_score', 'append', 'plot', 'precision_recall_curve', 'average_precision_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig', 'enable', 'build_model_input', 'StratifiedKFold', 'train_model', 'now', 'str', 'replace', 'str', 'to_csv', 'str', 'to_csv', 'split', 'display_importances', 'display_roc_curve', 'display_precision_recall']","['read_csv', 'print', 'concat', 'drop', 'groupby', 'count', 'map', 'mean', 'collect', 'get_dummies', 'merge', 'DataFrame', 'factorize', 'get_indexer', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'roc_auc_score', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'roc_curve', 'append', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'legend', 'average_precision_score', 'precision_recall_curve', 'enable', 'build_model_input', 'StratifiedKFold', 'train_model', 'now', 'str', 'replace', 'to_csv', 'split', 'display_importances', 'display_roc_curve', 'display_precision_recall']",49,"['pandas', 'numpy', 'sklearn', 'lightgbm', 'datetime', 'matplotlib', 'seaborn', 'gc\n']",8,"[1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",377,0.779,Gold,96,
homecreditdefaultrisk-mlnd-nachorovi.py,"init_notebook_mode,dfcol.value_counts,cnt_srs.head,cnt_srs.head,cnt_srs.head,cnt_srs.tail,cnt_srs.tail,go.Bar,go.Bar,dict,go.Figure,iplot,go.Bar,dict,go.Figure,iplot,go.Bar,dict,go.Figure,iplot,df1col.value_counts,df0col.value_counts,dict,float,enumerate,float,enumerate,go.Bar,go.Bar,df.memory_usage,None.sum,print,dfcol.min,dfcol.max,str,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,dfcol.astype,dfcol.astype,df.memory_usage,None.sum,print,print,print,time,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,time,print,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,print,display,pd.DataFrame,display,plt.figure,plt.subplot,app_train.value_counts,None.plot,plt.title,app_train.groupby,None.describe,None.transpose,None.reset_index,display,df.isin,df_x.rename,df_y.rename,pd.concat,df_new.unique,None.tolist,len,plt.figure,itertools.zip_longest,plt.subplot,sns.barplot,plt.title,plt.subplots_adjust,fig.set_facecolor,plt.figure,plt.title,sns.distplot,plt.figure,plt.title,sns.distplot,plt.figure,plt.title,sns.distplot,plt.figure,plt.title,sns.distplot,plt.figure,plt.title,sns.distplot,print,pd.concat,print,print,print,max,pd.get_dummies,print,_one_hot_encoding,print,_one_hot_encoding,_one_hot_encoding,_one_hot_encoding,_one_hot_encoding,_one_hot_encoding,data.copy,print,posc_bal.groupby,None.count,posc_bal.map,posc_bal.drop,posc_bal.groupby,None.mean,data.merge,print,prev_app.groupby,None.count,prev_app.map,prev_app.drop,prev_app.groupby,None.mean,data.merge,print,inst_pay.groupby,None.count,inst_pay.map,inst_pay.drop,inst_pay.groupby,None.mean,data.merge,print,cc_bal.groupby,None.count,cc_bal.map,cc_bal.drop,cc_bal.groupby,None.mean,data.merge,print,bureau.groupby,None.count,bureau.map,bureau.drop,bureau.groupby,None.mean,data.merge,plt.figure,plt.title,sns.distplot,MinMaxScaler,scaler.fit_transform,data_train_test.copy,print,print,data.fillna,data.isnull,None.sum,None.sum,print,gc.collect,print,train.drop,test.drop,print,print,print,train_test_split,print,print,print,int,int,int,int,lgb.LGBMClassifier,make_scorer,GridSearchCV,time,grid_obj.fit,time,print,print,print,print,print,print,best_est.predict,print,print,int,int,int,int,RandomForestRegressor,make_scorer,GridSearchCV,time,grid_obj.fit,time,print,print,print,print,estimator.fit,None.predict,print,best_est.predict,print,lgb.Dataset,lgb.Dataset,time,lgb.train,time,lgb.Dataset,time,lgb.cv,np.argmax,print,print,lgb.train,time,print,lgb.plot_importance,print,KFold,np.zeros,np.zeros,pd.DataFrame,time,enumerate,lgb.LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,time,print,print,feature_importance.groupby,None.mean,None.sort_values,feature_importance.groupby,None.mean,None.sort_values,feature_importance.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,pd.DataFrame,submission.to_csv,RandomForestRegressor,print,time,estimator.fit,time,print,estimator.predict,print,pd.DataFrame,display,estimator.predict,print,pd.DataFrame,submission.head,run_mode.split,submission.to_csv",330,"['init_notebook_mode', 'value_counts', 'head', 'head', 'head', 'tail', 'tail', 'Bar', 'Bar', 'dict', 'Figure', 'iplot', 'Bar', 'dict', 'Figure', 'iplot', 'Bar', 'dict', 'Figure', 'iplot', 'value_counts', 'value_counts', 'dict', 'float', 'enumerate', 'float', 'enumerate', 'Bar', 'Bar', 'memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'astype', 'astype', 'memory_usage', 'sum', 'print', 'print', 'print', 'time', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'time', 'print', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'print', 'display', 'DataFrame', 'display', 'figure', 'subplot', 'value_counts', 'plot', 'title', 'groupby', 'describe', 'transpose', 'reset_index', 'display', 'isin', 'rename', 'rename', 'concat', 'unique', 'tolist', 'len', 'figure', 'zip_longest', 'subplot', 'barplot', 'title', 'subplots_adjust', 'set_facecolor', 'figure', 'title', 'distplot', 'figure', 'title', 'distplot', 'figure', 'title', 'distplot', 'figure', 'title', 'distplot', 'figure', 'title', 'distplot', 'print', 'concat', 'print', 'print', 'print', 'max', 'get_dummies', 'print', '_one_hot_encoding', 'print', '_one_hot_encoding', '_one_hot_encoding', '_one_hot_encoding', '_one_hot_encoding', '_one_hot_encoding', 'copy', 'print', 'groupby', 'count', 'map', 'drop', 'groupby', 'mean', 'merge', 'print', 'groupby', 'count', 'map', 'drop', 'groupby', 'mean', 'merge', 'print', 'groupby', 'count', 'map', 'drop', 'groupby', 'mean', 'merge', 'print', 'groupby', 'count', 'map', 'drop', 'groupby', 'mean', 'merge', 'print', 'groupby', 'count', 'map', 'drop', 'groupby', 'mean', 'merge', 'figure', 'title', 'distplot', 'MinMaxScaler', 'fit_transform', 'copy', 'print', 'print', 'fillna', 'isnull', 'sum', 'sum', 'print', 'collect', 'print', 'drop', 'drop', 'print', 'print', 'print', 'train_test_split', 'print', 'print', 'print', 'int', 'int', 'int', 'int', 'LGBMClassifier', 'make_scorer', 'GridSearchCV', 'time', 'fit', 'time', 'print', 'print', 'print', 'print', 'print', 'print', 'predict', 'print', 'print', 'int', 'int', 'int', 'int', 'RandomForestRegressor', 'make_scorer', 'GridSearchCV', 'time', 'fit', 'time', 'print', 'print', 'print', 'print', 'fit', 'predict', 'print', 'predict', 'print', 'Dataset', 'Dataset', 'time', 'train', 'time', 'Dataset', 'time', 'cv', 'argmax', 'print', 'print', 'train', 'time', 'print', 'plot_importance', 'print', 'KFold', 'zeros', 'zeros', 'DataFrame', 'time', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'time', 'print', 'print', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'DataFrame', 'to_csv', 'RandomForestRegressor', 'print', 'time', 'fit', 'time', 'print', 'predict', 'print', 'DataFrame', 'display', 'predict', 'print', 'DataFrame', 'head', 'split', 'to_csv']","['init_notebook_mode', 'value_counts', 'head', 'tail', 'Bar', 'dict', 'Figure', 'iplot', 'float', 'enumerate', 'memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'astype', 'finfo', 'time', 'reduce_mem_usage', 'display', 'DataFrame', 'figure', 'subplot', 'plot', 'title', 'groupby', 'describe', 'transpose', 'reset_index', 'isin', 'rename', 'concat', 'unique', 'tolist', 'len', 'zip_longest', 'barplot', 'subplots_adjust', 'set_facecolor', 'distplot', 'get_dummies', '_one_hot_encoding', 'copy', 'count', 'map', 'drop', 'mean', 'merge', 'MinMaxScaler', 'fit_transform', 'fillna', 'isnull', 'collect', 'train_test_split', 'int', 'LGBMClassifier', 'make_scorer', 'GridSearchCV', 'fit', 'predict', 'RandomForestRegressor', 'Dataset', 'train', 'cv', 'argmax', 'plot_importance', 'KFold', 'zeros', 'predict_proba', 'sort_values', 'feature', 'tight_layout', 'savefig', 'to_csv', 'split']",77,"['numpy', 'pandas', 'os\n', 'plotly', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm', 'time', 'IPython', 'itertools\n', 'gc\n']",12,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1041,0.77933,None,1,
homecredit-default-risk-step-by-step-2nd-notebook.py,"warnings.filterwarnings,pd.set_option,pd.read_feather,pd.read_feather,pd.read_feather,pd.read_feather,pd.read_feather,pd.read_feather,print,pd.merge,print,list,df.rename,df.TARGET.isnull,df.TARGET.isnull,train.drop,test.drop,LGBMClassifier,clf.fit,pd.DataFrame,submission.to_csv",21,"['filterwarnings', 'set_option', 'read_feather', 'read_feather', 'read_feather', 'read_feather', 'read_feather', 'read_feather', 'print', 'merge', 'print', 'list', 'rename', 'TARGET', 'TARGET', 'drop', 'drop', 'LGBMClassifier', 'fit', 'DataFrame', 'to_csv']","['filterwarnings', 'set_option', 'read_feather', 'print', 'merge', 'list', 'rename', 'TARGET', 'drop', 'LGBMClassifier', 'fit', 'DataFrame', 'to_csv']",13,"['numpy', 'pandas', 'matplotlib', 'seaborn', 'lightgbm', 'warnings\n', 're\n']",7,"[1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",116,0.77999,Bronze,9,
model-stacking.py,"print,get_ipython,None.run_line_magic,pd.DataFrame,pd.Series,print,all_models.to_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,buro_balance.head,prev.head,credit_card.head,payments.head,pd.concat,pd.get_dummies,buro_balance.groupby,None.size,buro_balance.groupby,None.max,buro_balance.groupby,None.min,buro_balance.groupby,None.value_counts,buro_counts.unstack,buro.join,prev.head,pd.get_dummies,prev.groupby,None.mean,prev.groupby,None.count,pd.get_dummies,buro.groupby,None.mean,buro.groupby,None.count,avg_buro.head,LabelEncoder,le.fit_transform,POS_CASH.groupby,None.nunique,POS_CASH.groupby,None.max,nunique_status2.head,POS_CASH.drop,LabelEncoder,le.fit_transform,credit_card.groupby,None.nunique,credit_card.groupby,None.max,credit_card.drop,payments.groupby,None.mean,payments.groupby,None.max,payments.groupby,None.min,data.merge,test.merge,data.head,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.isnull,None.mean,data.isnull,None.mean,data.head,lgb.LGBMClassifier,np.zeros,range,train_test_split,model.fit,pd.DataFrame,None.sort_values,feature_importances.head,list,print,feature_importances.tail,df.sort_values,None.reset_index,df.sum,np.cumsum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plt.figure,plt.plot,plt.xlabel,plt.ylabel,plt.title,plt.show,np.min,print,plot_feature_importances,list,print,print,KFold,np.zeros,np.zeros,np.zeros,k_fold.split,lgb.LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,valid_scores.append,train_scores.append,gc.enable,gc.collect,pd.DataFrame,submission.to_csv",135,"['print', 'get_ipython', 'run_line_magic', 'DataFrame', 'Series', 'print', 'to_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'head', 'head', 'head', 'head', 'concat', 'get_dummies', 'groupby', 'size', 'groupby', 'max', 'groupby', 'min', 'groupby', 'value_counts', 'unstack', 'join', 'head', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'head', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'head', 'drop', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'merge', 'merge', 'head', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'isnull', 'mean', 'isnull', 'mean', 'head', 'LGBMClassifier', 'zeros', 'range', 'train_test_split', 'fit', 'DataFrame', 'sort_values', 'head', 'list', 'print', 'tail', 'sort_values', 'reset_index', 'sum', 'cumsum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'figure', 'plot', 'xlabel', 'ylabel', 'title', 'show', 'min', 'print', 'plot_feature_importances', 'list', 'print', 'print', 'KFold', 'zeros', 'zeros', 'zeros', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'append', 'append', 'enable', 'collect', 'DataFrame', 'to_csv']","['print', 'get_ipython', 'run_line_magic', 'DataFrame', 'Series', 'to_csv', 'read_csv', 'head', 'concat', 'get_dummies', 'groupby', 'size', 'max', 'min', 'value_counts', 'unstack', 'join', 'mean', 'count', 'LabelEncoder', 'fit_transform', 'nunique', 'drop', 'merge', 'isnull', 'LGBMClassifier', 'zeros', 'range', 'train_test_split', 'fit', 'sort_values', 'list', 'tail', 'reset_index', 'sum', 'cumsum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot', 'ylabel', 'plot_feature_importances', 'KFold', 'split', 'predict_proba', 'append', 'enable', 'collect']",53,"['numpy', 'pandas', 'sklearn', 'xgboost', 'os\n', 'matplotlib', 'skopt', 'lightgbm', 'gc\n']",9,"[1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",602,0.78,Bronze,9,
lightgbm.py,"df.memory_usage,None.sum,print,dfcol.min,dfcol.max,str,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,dfcol.astype,df.memory_usage,None.sum,print,print,reduce_mem_usage,reduce_mem_usage,pd.concat,alldata.loc.fillna,alldata.select_dtypes,alldata.select_dtypes,gc.collect,reduce_mem_usage,reduce_mem_usage,pd.merge,gc.collect,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,reduce_mem_usage,print,df.select_dtypes,df.select_dtypes,pd.get_dummies,df.groupby,None.agg,None.drop,.join,tmp_df_mean.columns.ravel,pd.merge,gc.collect,print,gc.collect,gc.collect,alldata.select_dtypes,alldata.select_dtypes,alldata.localldata.is_test.groupby,None.mean,alldata.loccol.map,alldata.loccol.fillna,alldata.loccategorical_cols.apply,alldata.localldata.is_test.drop,alldata.localldata.is_test.drop,StratifiedKFold,np.zeros,pd.read_csv,pd.DataFrame,enumerate,LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,pd.DataFrame,pd.concat,print,print,sub.to_csv",87,"['memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'astype', 'memory_usage', 'sum', 'print', 'print', 'reduce_mem_usage', 'reduce_mem_usage', 'concat', 'loc', 'select_dtypes', 'select_dtypes', 'collect', 'reduce_mem_usage', 'reduce_mem_usage', 'merge', 'collect', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'reduce_mem_usage', 'print', 'select_dtypes', 'select_dtypes', 'get_dummies', 'groupby', 'agg', 'drop', 'join', 'columns', 'merge', 'collect', 'print', 'collect', 'collect', 'select_dtypes', 'select_dtypes', 'localldata', 'mean', 'loccol', 'loccol', 'loccategorical_cols', 'localldata', 'localldata', 'StratifiedKFold', 'zeros', 'read_csv', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'print', 'to_csv']","['memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'astype', 'finfo', 'reduce_mem_usage', 'concat', 'loc', 'select_dtypes', 'collect', 'merge', 'get_dummies', 'groupby', 'agg', 'drop', 'join', 'columns', 'localldata', 'mean', 'loccol', 'loccategorical_cols', 'StratifiedKFold', 'zeros', 'read_csv', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",34,"['gc\n', 'pandas', 'numpy', 'sklearn', 'xgboost', 'catboost', 'lightgbm']",7,"[1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",213,0.78,None,7,
ligthgbm-0-781-home-credit-default-risk.py,"gc.enable,pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,inst.groupby,None.mean,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,gc.collect,gc.enable,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test.to_csv,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,plt.figure,enumerate,roc_curve,roc_auc_score,scores.append,plt.plot,plt.plot,roc_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig,plt.figure,precision_recall_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig",154,"['enable', 'read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'groupby', 'mean', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'enable', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'figure', 'enumerate', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'plot', 'roc_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig', 'figure', 'precision_recall_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig']","['enable', 'read_csv', 'print', 'concat', 'drop', 'groupby', 'count', 'map', 'mean', 'collect', 'get_dummies', 'merge', 'DataFrame', 'factorize', 'get_indexer', 'KFold', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'legend', 'precision_recall_curve']",39,"['pandas', 'numpy', 'sklearn', 'matplotlib', 'seaborn', 'gc\n', 'lightgbm']",7,"[1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",390,0.781,None,5,
bigdata-project-eda-fe-hr.py,"os.walk,print,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.set_option,pd.set_option,pd.read_csv,pd.read_csv,print,print,app_train.value_counts,app_train.astype,None.value_counts,None.plot,plt.subplots,sns.violinplot,sns.distplot,sns.distplot,show_hist_by_target,app_train.dtypesapp_train.dtypes.index.tolist,sns.catplot,chart.set_xticklabels,show_category_by_target,abs,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,print,print,print,print,app_train.corr,None.sort_values,print,print,app_traincorr_columns.corr,plt.figure,sns.heatmap,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.value_counts,app_train.replace,app_train.value_counts,app_train.value_counts,pd.concat,print,apps.mean,apps.mean,apps.std,apps.head,apps.fillna,apps.head,apps.dtypesapps.dtypes.index.tolist,pd.factorize,apps.isnull,apps.isnull,apps_train.drop,train_test_split,LGBMClassifier,clf.fit,plot_importance,clf.predict_proba,app_test.to_csv,apps.mean,apps.std,apps.fillna,pd.read_csv,print,prev.head,prev.groupby,None.count,None.mean,sns.boxplot,prev.merge,app_prev_target.dtypesapp_prev_target.dtypes.index.tolist,show_hist_by_target,app_prev_target.dtypesapp_prev_target.dtypes.index.tolist,show_category_by_target,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,prev_group.agg,.join,None.upper,prev_amt_agg.columns.ravel,prev_amt_agg.reset_index,prev.isin,None.groupby,prev_refused_appr_group.count,None.unstack,prev_refused_appr_agg.fillna,prev_refused_appr_agg.reset_index,get_prev_processed,get_prev_amt_agg,get_prev_refused_appr_agg,prev_amt_agg.merge,prev_agg.drop,get_apps_processed,get_prev_agg,print,print,apps_all.merge,print,apps_all.dtypesapps_all.dtypes.index.tolist,pd.factorize,apps_all.isnull,apps_all.isnull,apps_all_test.drop,apps_all_train.drop,train_test_split,print,LGBMClassifier,clf.fit,pd.read_csv,pd.read_csv,pd.concat,pd.read_csv,get_dataset,get_apps_all_with_prev_agg,get_apps_all_encoded,get_apps_all_train_test,train_apps_all,plot_importance,clf.predict_proba,apps_all_test.to_csv,pd.read_csv,pd.read_csv,bureau.merge,bureau_app.astype,None.value_counts,None.plot,bureau_app.dtypesbureau_app.dtypes.index.tolist,show_hist_by_target,bureau.dtypesbureau.dtypes.index.tolist,show_category_by_target,bureau_app.corr,abs,plt.figure,sns.heatmap,bureau.apply,bureau.apply,bureau.groupby,bureau_grp.agg,.join,None.upper,bureau_day_amt_agg.columns.ravel,bureau_day_amt_agg.reset_index,print,bureaucond_active.groupby,bureau_active_grp.agg,.join,None.upper,bureau_active_agg.columns.ravel,bureau_active_agg.reset_index,print,bureau_bal.merge,bureau_bal.apply,bureau_bal.apply,bureau_bal.groupby,bureau_bal_grp.agg,.join,None.upper,bureau_bal_agg.columns.ravel,bureau_bal_agg.reset_index,print,get_bureau_processed,get_bureau_day_amt_agg,get_bureau_active_agg,get_bureau_bal_agg,bureau_day_amt_agg.merge,bureau_agg.merge,print,get_apps_processed,get_prev_agg,get_bureau_agg,print,print,print,apps_all.merge,apps_all.merge,print,get_apps_all_with_prev_bureau_agg,get_apps_all_encoded,get_apps_all_train_test,train_apps_all,clf.predict_proba,apps_all_test.to_csv",210,"['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'set_option', 'read_csv', 'read_csv', 'print', 'print', 'value_counts', 'astype', 'value_counts', 'plot', 'subplots', 'violinplot', 'distplot', 'distplot', 'show_hist_by_target', 'dtypesapp_train', 'catplot', 'set_xticklabels', 'show_category_by_target', 'abs', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'print', 'print', 'print', 'print', 'corr', 'sort_values', 'print', 'print', 'corr', 'figure', 'heatmap', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'value_counts', 'replace', 'value_counts', 'value_counts', 'concat', 'print', 'mean', 'mean', 'std', 'head', 'fillna', 'head', 'dtypesapps', 'factorize', 'isnull', 'isnull', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv', 'mean', 'std', 'fillna', 'read_csv', 'print', 'head', 'groupby', 'count', 'mean', 'boxplot', 'merge', 'dtypesapp_prev_target', 'show_hist_by_target', 'dtypesapp_prev_target', 'show_category_by_target', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'isin', 'groupby', 'count', 'unstack', 'fillna', 'reset_index', 'get_prev_processed', 'get_prev_amt_agg', 'get_prev_refused_appr_agg', 'merge', 'drop', 'get_apps_processed', 'get_prev_agg', 'print', 'print', 'merge', 'print', 'dtypesapps_all', 'factorize', 'isnull', 'isnull', 'drop', 'drop', 'train_test_split', 'print', 'LGBMClassifier', 'fit', 'read_csv', 'read_csv', 'concat', 'read_csv', 'get_dataset', 'get_apps_all_with_prev_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'train_apps_all', 'plot_importance', 'predict_proba', 'to_csv', 'read_csv', 'read_csv', 'merge', 'astype', 'value_counts', 'plot', 'dtypesbureau_app', 'show_hist_by_target', 'dtypesbureau', 'show_category_by_target', 'corr', 'abs', 'figure', 'heatmap', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'print', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'print', 'merge', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'print', 'get_bureau_processed', 'get_bureau_day_amt_agg', 'get_bureau_active_agg', 'get_bureau_bal_agg', 'merge', 'merge', 'print', 'get_apps_processed', 'get_prev_agg', 'get_bureau_agg', 'print', 'print', 'print', 'merge', 'merge', 'print', 'get_apps_all_with_prev_bureau_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'train_apps_all', 'predict_proba', 'to_csv']","['walk', 'print', 'get_ipython', 'run_line_magic', 'filterwarnings', 'set_option', 'read_csv', 'value_counts', 'astype', 'plot', 'subplots', 'violinplot', 'distplot', 'show_hist_by_target', 'dtypesapp_train', 'catplot', 'set_xticklabels', 'show_category_by_target', 'abs', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'corr', 'sort_values', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'replace', 'concat', 'mean', 'std', 'head', 'fillna', 'dtypesapps', 'factorize', 'isnull', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'plot_importance', 'predict_proba', 'to_csv', 'groupby', 'count', 'boxplot', 'merge', 'dtypesapp_prev_target', 'agg', 'join', 'upper', 'columns', 'reset_index', 'isin', 'unstack', 'get_prev_processed', 'get_prev_amt_agg', 'get_prev_refused_appr_agg', 'get_apps_processed', 'get_prev_agg', 'dtypesapps_all', 'get_dataset', 'get_apps_all_with_prev_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'train_apps_all', 'dtypesbureau_app', 'dtypesbureau', 'apply', 'get_bureau_processed', 'get_bureau_day_amt_agg', 'get_bureau_active_agg', 'get_bureau_bal_agg', 'get_bureau_agg', 'get_apps_all_with_prev_bureau_agg']",80,"['numpy', 'pandas', 'os\n', 'gc\n', 'time\n', 'warnings\n', 'matplotlib', 'seaborn', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1059,0.78171,None,2,
intro-to-model-tuning-grid-and-random-search.py,"pd.read_csv,features.sample,features.select_dtypes,np.array,None.reshape,features.drop,train_test_split,print,print,lgb.Dataset,lgb.Dataset,lgb.LGBMClassifier,model.get_params,lgb.cv,print,print,len,model.fit,model.predict_proba,roc_auc_score,print,hyperparameters.keys,lgb.cv,len,objective,print,lgb.LGBMModel,model.get_params,list,list,list,list,list,list,list,list,random.seed,random.sample,random.sample,print,print,get_ipython,None.run_line_magic,plt.hist,plt.xlabel,plt.ylabel,plt.title,print,print,plt.hist,plt.xlabel,plt.ylabel,plt.title,pd.DataFrame,pd.DataFrame,param_grid.values,len,print,print,pd.DataFrame,zip,itertools.product,dict,objective,results.sort_values,results.reset_index,grid_search,print,print,pprint.pprint,lgb.LGBMClassifier,model.fit,model.predict_proba,print,random.seed,random.sample,param_grid.items,pd.DataFrame,range,random.sample,param_grid.items,objective,results.sort_values,results.reset_index,random_search,print,print,pprint.pprint,lgb.LGBMClassifier,model.fit,model.predict_proba,print,open,csv.writer,writer.writerow,of_connection.close,pd.DataFrame,range,random.sample,param_grid.items,objective,open,csv.writer,writer.writerow,of_connection.close,results.sort_values,results.reset_index,pd.DataFrame,zip,itertools.product,dict,objective,open,csv.writer,writer.writerow,of_connection.close,results.sort_values,results.reset_index,pd.read_csv,pd.read_csv,grid_results.map,random_results.map,results.sort_values,None.reset_index,print,lgb.LGBMClassifier,model.fit,model.predict_proba,print,pd.DataFrame,enumerate,hyp_df.append,evaluate,evaluate,alt.renderers.enable,random_hyp.append,hyp.head,random_hyp.max,grid_hyp.max,alt.Chart,None.mark_circle,None.encode,grid_hyp.idxmax,None.copy,random_hyp.idxmax,None.copy,hyp.sort_values,sns.lmplot,plt.scatter,plt.scatter,plt.xlabel,plt.ylabel,plt.title,print,print,alt.Chart,None.mark_bar,None.encode,bars.mark_text,None.encode,random_hyp.value_counts,None.plot.bar,random_hyp.astype,random_hyp.loc.copy,plt.figure,sns.kdeplot,sns.kdeplot,plt.vlines,plt.legend,plt.xlabel,plt.ylabel,plt.title,enumerate,plt.figure,sns.kdeplot,sns.kdeplot,plt.vlines,plt.legend,plt.title,plt.xlabel,plt.ylabel,plt.show,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,pd.read_csv,pd.read_csv,np.array,None.reshape,train.drop,test.drop,print,print,lgb.Dataset,dict,lgb.cv,print,print,lgb.LGBMClassifier,model.fit,model.predict_proba,pd.DataFrame,submission.to_csv",228,"['read_csv', 'sample', 'select_dtypes', 'array', 'reshape', 'drop', 'train_test_split', 'print', 'print', 'Dataset', 'Dataset', 'LGBMClassifier', 'get_params', 'cv', 'print', 'print', 'len', 'fit', 'predict_proba', 'roc_auc_score', 'print', 'keys', 'cv', 'len', 'objective', 'print', 'LGBMModel', 'get_params', 'list', 'list', 'list', 'list', 'list', 'list', 'list', 'list', 'seed', 'sample', 'sample', 'print', 'print', 'get_ipython', 'run_line_magic', 'hist', 'xlabel', 'ylabel', 'title', 'print', 'print', 'hist', 'xlabel', 'ylabel', 'title', 'DataFrame', 'DataFrame', 'values', 'len', 'print', 'print', 'DataFrame', 'zip', 'product', 'dict', 'objective', 'sort_values', 'reset_index', 'grid_search', 'print', 'print', 'pprint', 'LGBMClassifier', 'fit', 'predict_proba', 'print', 'seed', 'sample', 'items', 'DataFrame', 'range', 'sample', 'items', 'objective', 'sort_values', 'reset_index', 'random_search', 'print', 'print', 'pprint', 'LGBMClassifier', 'fit', 'predict_proba', 'print', 'open', 'writer', 'writerow', 'close', 'DataFrame', 'range', 'sample', 'items', 'objective', 'open', 'writer', 'writerow', 'close', 'sort_values', 'reset_index', 'DataFrame', 'zip', 'product', 'dict', 'objective', 'open', 'writer', 'writerow', 'close', 'sort_values', 'reset_index', 'read_csv', 'read_csv', 'map', 'map', 'sort_values', 'reset_index', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'print', 'DataFrame', 'enumerate', 'append', 'evaluate', 'evaluate', 'renderers', 'append', 'head', 'max', 'max', 'Chart', 'mark_circle', 'encode', 'idxmax', 'copy', 'idxmax', 'copy', 'sort_values', 'lmplot', 'scatter', 'scatter', 'xlabel', 'ylabel', 'title', 'print', 'print', 'Chart', 'mark_bar', 'encode', 'mark_text', 'encode', 'value_counts', 'plot', 'astype', 'loc', 'figure', 'kdeplot', 'kdeplot', 'vlines', 'legend', 'xlabel', 'ylabel', 'title', 'enumerate', 'figure', 'kdeplot', 'kdeplot', 'vlines', 'legend', 'title', 'xlabel', 'ylabel', 'show', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'read_csv', 'read_csv', 'array', 'reshape', 'drop', 'drop', 'print', 'print', 'Dataset', 'dict', 'cv', 'print', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv']","['read_csv', 'sample', 'select_dtypes', 'array', 'reshape', 'drop', 'train_test_split', 'print', 'Dataset', 'LGBMClassifier', 'get_params', 'cv', 'len', 'fit', 'predict_proba', 'roc_auc_score', 'keys', 'objective', 'LGBMModel', 'list', 'seed', 'get_ipython', 'run_line_magic', 'hist', 'xlabel', 'ylabel', 'title', 'DataFrame', 'values', 'zip', 'product', 'dict', 'sort_values', 'reset_index', 'grid_search', 'pprint', 'items', 'range', 'random_search', 'open', 'writer', 'writerow', 'close', 'map', 'enumerate', 'append', 'evaluate', 'renderers', 'head', 'max', 'Chart', 'mark_circle', 'encode', 'idxmax', 'copy', 'lmplot', 'scatter', 'mark_bar', 'mark_text', 'value_counts', 'plot', 'astype', 'loc', 'figure', 'kdeplot', 'vlines', 'legend', 'show', 'subplots', 'regplot', 'set', 'tight_layout', 'to_csv']",73,"['pandas', 'numpy', 'lightgbm', 'sklearn', 'random\n', 'matplotlib', 'seaborn', 'itertools\n', 'pprint\n', 'csv\n', 'ast\n', 'altair']",12,"[1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1147,0.782,Gold,380,
home-credit-feature-engineering-and-prediction.py,"plt.style.use,get_ipython,None.run_line_magic,init_notebook_mode,print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,data.replace,data.replace,data.replace,data.mean,data.std,test.replace,test.replace,test.mean,test.std,bureau_new.groupby,None.count,None.reset_index,None.rename,bureau_new.merge,bureau_new.head,bureau_new.groupby,None.nunique,None.reset_index,None.rename,bureau_new.merge,bureau_new.head,bureau_new.replace,bureau_new.groupby,None.mean,None.reset_index,None.rename,bureau_new.merge,bureau_new.head,bureau_new.apply,bureau_new.groupby,None.mean,None.reset_index,None.rename,bureau_new.merge,bureau_new.groupby,None.agg,pd.Index,bureau_agg.reset_index,bureau_new.merge,pd.get_dummies,pd.get_dummies,bureau_balance.groupby,None.agg,pd.Index,bb_group.reset_index,buro.merge,buro.groupby,None.mean,buro.groupby,None.count,pd.get_dummies,installments_payments.groupby,None.agg,installments_payments.groupby,None.size,pd.Index,installments_payments.merge,previous_application.replace,previous_application.replace,previous_application.replace,previous_application.replace,previous_application.replace,previous_application.groupby,None.agg,pd.Index,previous_application.merge,approved.groupby,None.agg,pd.Index,previous_application.join,refused.groupby,None.agg,pd.Index,previous_application.join,previous_application.groupby,None.mean,None.reset_index,POS_CASH_balance.groupby,None.agg,pd.Index,POS_CASH_AGG.groupby,None.size,pd.get_dummies,POS_CASH_balance.merge,POS_CASH_balance.head,POS_CASH_balance.groupby,None.mean,None.reset_index,pd.concat,pd.get_dummies,print,data.merge,test.merge,print,data.merge,test.merge,print,data.merge,test.merge,print,data.merge,test.merge,print,gc.collect,print,data.isnull,None.mean,data.isnull,None.mean,print,gc.enable,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test.to_csv,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.feature.isin,best_features.head",155,"['style', 'get_ipython', 'run_line_magic', 'init_notebook_mode', 'print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'replace', 'replace', 'replace', 'mean', 'std', 'replace', 'replace', 'mean', 'std', 'groupby', 'count', 'reset_index', 'rename', 'merge', 'head', 'groupby', 'nunique', 'reset_index', 'rename', 'merge', 'head', 'replace', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'head', 'apply', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'groupby', 'agg', 'Index', 'reset_index', 'merge', 'get_dummies', 'get_dummies', 'groupby', 'agg', 'Index', 'reset_index', 'merge', 'groupby', 'mean', 'groupby', 'count', 'get_dummies', 'groupby', 'agg', 'groupby', 'size', 'Index', 'merge', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'merge', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'groupby', 'mean', 'reset_index', 'groupby', 'agg', 'Index', 'groupby', 'size', 'get_dummies', 'merge', 'head', 'groupby', 'mean', 'reset_index', 'concat', 'get_dummies', 'print', 'merge', 'merge', 'print', 'merge', 'merge', 'print', 'merge', 'merge', 'print', 'merge', 'merge', 'print', 'collect', 'print', 'isnull', 'mean', 'isnull', 'mean', 'print', 'enable', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'head']","['style', 'get_ipython', 'run_line_magic', 'init_notebook_mode', 'print', 'read_csv', 'replace', 'mean', 'std', 'groupby', 'count', 'reset_index', 'rename', 'merge', 'head', 'nunique', 'apply', 'agg', 'Index', 'get_dummies', 'size', 'join', 'concat', 'collect', 'isnull', 'enable', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv', 'sort_values', 'feature']",36,"['numpy', 'pandas', 'matplotlib\n', 'matplotlib', 'seaborn', 'gc', 'plotly', 'sklearn', 'os\n', 'lightgbm', 'gc\n']",11,"[1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",621,0.782,None,2,
classification-using-random-search-xgboost.py,"pd.read_csv,features.sample,features.select_dtypes,np.array,None.reshape,features.drop,train_test_split,print,print,lgb.Dataset,lgb.Dataset,lgb.LGBMClassifier,model.get_params,lgb.cv,print,print,len,model.fit,model.predict_proba,roc_auc_score,print,hyperparameters.keys,lgb.cv,len,objective,print,lgb.LGBMModel,model.get_params,list,list,list,list,list,list,list,list,random.seed,random.sample,random.sample,print,print,get_ipython,None.run_line_magic,plt.hist,plt.xlabel,plt.ylabel,plt.title,print,print,plt.hist,plt.xlabel,plt.ylabel,plt.title,pd.DataFrame,pd.DataFrame,param_grid.values,len,print,print,pd.DataFrame,zip,itertools.product,dict,objective,results.sort_values,results.reset_index,grid_search,print,print,pprint.pprint,lgb.LGBMClassifier,model.fit,model.predict_proba,print,random.seed,random.sample,param_grid.items,pd.DataFrame,range,random.sample,param_grid.items,objective,results.sort_values,results.reset_index,random_search,print,print,pprint.pprint,lgb.LGBMClassifier,model.fit,model.predict_proba,print,open,csv.writer,writer.writerow,of_connection.close,pd.DataFrame,range,random.sample,param_grid.items,objective,open,csv.writer,writer.writerow,of_connection.close,results.sort_values,results.reset_index,pd.DataFrame,zip,itertools.product,dict,objective,open,csv.writer,writer.writerow,of_connection.close,results.sort_values,results.reset_index,pd.read_csv,pd.read_csv,grid_results.map,random_results.map,results.sort_values,None.reset_index,print,lgb.LGBMClassifier,model.fit,model.predict_proba,print,pd.DataFrame,enumerate,hyp_df.append,evaluate,evaluate,alt.renderers.enable,random_hyp.append,hyp.head,random_hyp.max,grid_hyp.max,alt.Chart,None.mark_circle,None.encode,grid_hyp.idxmax,None.copy,random_hyp.idxmax,None.copy,hyp.sort_values,sns.lmplot,plt.scatter,plt.scatter,plt.xlabel,plt.ylabel,plt.title,print,print,alt.Chart,None.mark_bar,None.encode,bars.mark_text,None.encode,random_hyp.value_counts,None.plot.bar,random_hyp.astype,random_hyp.loc.copy,plt.figure,sns.kdeplot,sns.kdeplot,plt.vlines,plt.legend,plt.xlabel,plt.ylabel,plt.title,enumerate,plt.figure,sns.kdeplot,sns.kdeplot,plt.vlines,plt.legend,plt.title,plt.xlabel,plt.ylabel,plt.show,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,pd.read_csv,pd.read_csv,np.array,None.reshape,train.drop,test.drop,print,print,lgb.Dataset,dict,lgb.cv,print,print,lgb.LGBMClassifier,model.fit,model.predict_proba,pd.DataFrame,submission.to_csv,xgb.XGBClassifier,clf_xgBoost.fit,clf_xgBoost.predict_proba,pd.DataFrame,submission.to_csv,submission.head",234,"['read_csv', 'sample', 'select_dtypes', 'array', 'reshape', 'drop', 'train_test_split', 'print', 'print', 'Dataset', 'Dataset', 'LGBMClassifier', 'get_params', 'cv', 'print', 'print', 'len', 'fit', 'predict_proba', 'roc_auc_score', 'print', 'keys', 'cv', 'len', 'objective', 'print', 'LGBMModel', 'get_params', 'list', 'list', 'list', 'list', 'list', 'list', 'list', 'list', 'seed', 'sample', 'sample', 'print', 'print', 'get_ipython', 'run_line_magic', 'hist', 'xlabel', 'ylabel', 'title', 'print', 'print', 'hist', 'xlabel', 'ylabel', 'title', 'DataFrame', 'DataFrame', 'values', 'len', 'print', 'print', 'DataFrame', 'zip', 'product', 'dict', 'objective', 'sort_values', 'reset_index', 'grid_search', 'print', 'print', 'pprint', 'LGBMClassifier', 'fit', 'predict_proba', 'print', 'seed', 'sample', 'items', 'DataFrame', 'range', 'sample', 'items', 'objective', 'sort_values', 'reset_index', 'random_search', 'print', 'print', 'pprint', 'LGBMClassifier', 'fit', 'predict_proba', 'print', 'open', 'writer', 'writerow', 'close', 'DataFrame', 'range', 'sample', 'items', 'objective', 'open', 'writer', 'writerow', 'close', 'sort_values', 'reset_index', 'DataFrame', 'zip', 'product', 'dict', 'objective', 'open', 'writer', 'writerow', 'close', 'sort_values', 'reset_index', 'read_csv', 'read_csv', 'map', 'map', 'sort_values', 'reset_index', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'print', 'DataFrame', 'enumerate', 'append', 'evaluate', 'evaluate', 'renderers', 'append', 'head', 'max', 'max', 'Chart', 'mark_circle', 'encode', 'idxmax', 'copy', 'idxmax', 'copy', 'sort_values', 'lmplot', 'scatter', 'scatter', 'xlabel', 'ylabel', 'title', 'print', 'print', 'Chart', 'mark_bar', 'encode', 'mark_text', 'encode', 'value_counts', 'plot', 'astype', 'loc', 'figure', 'kdeplot', 'kdeplot', 'vlines', 'legend', 'xlabel', 'ylabel', 'title', 'enumerate', 'figure', 'kdeplot', 'kdeplot', 'vlines', 'legend', 'title', 'xlabel', 'ylabel', 'show', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'read_csv', 'read_csv', 'array', 'reshape', 'drop', 'drop', 'print', 'print', 'Dataset', 'dict', 'cv', 'print', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'XGBClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'head']","['read_csv', 'sample', 'select_dtypes', 'array', 'reshape', 'drop', 'train_test_split', 'print', 'Dataset', 'LGBMClassifier', 'get_params', 'cv', 'len', 'fit', 'predict_proba', 'roc_auc_score', 'keys', 'objective', 'LGBMModel', 'list', 'seed', 'get_ipython', 'run_line_magic', 'hist', 'xlabel', 'ylabel', 'title', 'DataFrame', 'values', 'zip', 'product', 'dict', 'sort_values', 'reset_index', 'grid_search', 'pprint', 'items', 'range', 'random_search', 'open', 'writer', 'writerow', 'close', 'map', 'enumerate', 'append', 'evaluate', 'renderers', 'head', 'max', 'Chart', 'mark_circle', 'encode', 'idxmax', 'copy', 'lmplot', 'scatter', 'mark_bar', 'mark_text', 'value_counts', 'plot', 'astype', 'loc', 'figure', 'kdeplot', 'vlines', 'legend', 'show', 'subplots', 'regplot', 'set', 'tight_layout', 'to_csv', 'XGBClassifier']",74,"['pandas', 'numpy', 'lightgbm', 'sklearn', 'random\n', 'matplotlib', 'seaborn', 'itertools\n', 'pprint\n', 'csv\n', 'ast\n', 'altair', 'xgboost']",13,"[1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",859,0.782,None,2,
introduction-to-feature-selection.py,"warnings.filterwarnings,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,list,list,list,list,list,print,print,print,previous_features.append,train_bureau.merge,test_bureau.merge,print,print,pd.get_dummies,pd.get_dummies,train.align,print,print,print,print,print,train.drop,test.drop,print,print,train.corr,None.abs,corr_matrix.head,corr_matrix.where,upper.head,any,print,train.drop,test.drop,print,print,pd.read_csv,pd.read_csv,print,print,train.isnull,None.sum,len,None.sort_values,train_missing.head,test.isnull,None.sum,len,None.sort_values,test_missing.head,list,print,pd.get_dummies,pd.get_dummies,train.align,print,print,train.drop,test.drop,np.zeros,lgb.LGBMClassifier,range,train_test_split,model.fit,pd.DataFrame,None.sort_values,feature_importances.head,list,print,feature_importances.tail,df.sort_values,None.reset_index,df.sum,np.cumsum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plt.figure,plt.plot,plt.xlabel,plt.ylabel,plt.title,plt.show,np.min,print,plot_feature_importances,train.drop,test.drop,print,print,np.zeros,lgb.LGBMClassifier,range,train_test_split,model.fit,pd.DataFrame,None.sort_values,list,print,identify_zero_importance_features,plot_feature_importances,list,train_small.to_csv,test_small.to_csv,features.drop,test_features.drop,pd.get_dummies,pd.get_dummies,features.align,LabelEncoder,enumerate,label_encoder.fit_transform,label_encoder.transform,cat_indices.append,ValueError,print,print,list,np.array,np.array,KFold,np.zeros,np.zeros,np.zeros,k_fold.split,lgb.LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,valid_scores.append,train_scores.append,gc.enable,gc.collect,pd.DataFrame,pd.DataFrame,roc_auc_score,valid_scores.append,train_scores.append,list,fold_names.append,pd.DataFrame,model,submission.to_csv,model,submission_small.to_csv,train.drop,test.drop,Pipeline,pipeline.fit_transform,pipeline.transform,plt.figure,plt.plot,plt.xlabel,plt.ylabel,plt.title,pd.DataFrame,sns.lmplot,plt.title,print",169,"['filterwarnings', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'list', 'list', 'list', 'list', 'list', 'print', 'print', 'print', 'append', 'merge', 'merge', 'print', 'print', 'get_dummies', 'get_dummies', 'align', 'print', 'print', 'print', 'print', 'print', 'drop', 'drop', 'print', 'print', 'corr', 'abs', 'head', 'where', 'head', 'any', 'print', 'drop', 'drop', 'print', 'print', 'read_csv', 'read_csv', 'print', 'print', 'isnull', 'sum', 'len', 'sort_values', 'head', 'isnull', 'sum', 'len', 'sort_values', 'head', 'list', 'print', 'get_dummies', 'get_dummies', 'align', 'print', 'print', 'drop', 'drop', 'zeros', 'LGBMClassifier', 'range', 'train_test_split', 'fit', 'DataFrame', 'sort_values', 'head', 'list', 'print', 'tail', 'sort_values', 'reset_index', 'sum', 'cumsum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'figure', 'plot', 'xlabel', 'ylabel', 'title', 'show', 'min', 'print', 'plot_feature_importances', 'drop', 'drop', 'print', 'print', 'zeros', 'LGBMClassifier', 'range', 'train_test_split', 'fit', 'DataFrame', 'sort_values', 'list', 'print', 'identify_zero_importance_features', 'plot_feature_importances', 'list', 'to_csv', 'to_csv', 'drop', 'drop', 'get_dummies', 'get_dummies', 'align', 'LabelEncoder', 'enumerate', 'fit_transform', 'transform', 'append', 'ValueError', 'print', 'print', 'list', 'array', 'array', 'KFold', 'zeros', 'zeros', 'zeros', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'append', 'append', 'enable', 'collect', 'DataFrame', 'DataFrame', 'roc_auc_score', 'append', 'append', 'list', 'append', 'DataFrame', 'model', 'to_csv', 'model', 'to_csv', 'drop', 'drop', 'Pipeline', 'fit_transform', 'transform', 'figure', 'plot', 'xlabel', 'ylabel', 'title', 'DataFrame', 'lmplot', 'title', 'print']","['filterwarnings', 'read_csv', 'list', 'print', 'append', 'merge', 'get_dummies', 'align', 'drop', 'corr', 'abs', 'head', 'where', 'any', 'isnull', 'sum', 'len', 'sort_values', 'zeros', 'LGBMClassifier', 'range', 'train_test_split', 'fit', 'DataFrame', 'tail', 'reset_index', 'cumsum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot', 'ylabel', 'min', 'plot_feature_importances', 'identify_zero_importance_features', 'to_csv', 'LabelEncoder', 'enumerate', 'fit_transform', 'transform', 'ValueError', 'array', 'KFold', 'split', 'predict_proba', 'enable', 'collect', 'roc_auc_score', 'model', 'Pipeline', 'lmplot']",56,"['pandas', 'numpy', 'featuretools', 'matplotlib', 'seaborn', 'warnings\n', 'lightgbm', 'sklearn', 'gc\n']",9,"[1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",848,0.78205,Gold,276,
hybrid-jeepy-and-lgb.py,"np.random.randn,len,len,pd.concat,temp.groupby,None.name.agg,np.exp,target.mean,averages.drop,pd.merge,None.rename,None.fillna,pd.merge,None.rename,None.fillna,add_noise,add_noise,pd.DataFrame,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,gc.enable,pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,inst.groupby,None.mean,print,pd.read_csv,pd.read_csv,print,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,gc.collect,train.columns.str.replace,test.columns.str.replace,trainc.astype,stringtypes.append,trainc.astype,inttypes.append,trainc.astype,floattypes.append,train.reset_index,test.reset_index,KFold,testcol.isin,testcol.isin,target_encode,enumerate,target_encode,KFold,testcol.isin,testcol.isin,target_encode,enumerate,target_encode,pd.concat,gc.collect,alldata.isnull,None.sum,alldatacol.value_counts,None.reset_index,alldata.merge,list,alldatafeatures.astype,StandardScaler,alldatac.isnull,ss.fit_transform,alldatac.fillna,UseGPFeatures,UseGPFeatures,gc.enable,KFold,np.zeros,np.zeros,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,print,gc.collect,pd.DataFrame,Submission.to_csv",680,"['random', 'len', 'len', 'concat', 'groupby', 'name', 'exp', 'mean', 'drop', 'merge', 'rename', 'fillna', 'merge', 'rename', 'fillna', 'add_noise', 'add_noise', 'DataFrame', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'enable', 'read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'groupby', 'mean', 'print', 'read_csv', 'read_csv', 'print', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'columns', 'columns', 'astype', 'append', 'astype', 'append', 'astype', 'append', 'reset_index', 'reset_index', 'KFold', 'isin', 'isin', 'target_encode', 'enumerate', 'target_encode', 'KFold', 'isin', 'isin', 'target_encode', 'enumerate', 'target_encode', 'concat', 'collect', 'isnull', 'sum', 'value_counts', 'reset_index', 'merge', 'list', 'astype', 'StandardScaler', 'isnull', 'fit_transform', 'fillna', 'UseGPFeatures', 'UseGPFeatures', 'enable', 'KFold', 'zeros', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'print', 'collect', 'DataFrame', 'to_csv']","['random', 'len', 'concat', 'groupby', 'name', 'exp', 'mean', 'drop', 'merge', 'rename', 'fillna', 'add_noise', 'DataFrame', 'tanh', 'enable', 'read_csv', 'print', 'count', 'map', 'collect', 'get_dummies', 'factorize', 'get_indexer', 'columns', 'astype', 'append', 'reset_index', 'KFold', 'isin', 'target_encode', 'enumerate', 'isnull', 'sum', 'value_counts', 'list', 'StandardScaler', 'fit_transform', 'UseGPFeatures', 'zeros', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",43,"['gc\n', 'numpy', 'pandas', 'sklearn', 'lightgbm']",5,"[1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",940,0.78304,Gold,113,
intro-home-credit-default-risk.py,"warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,app_train.describe,app_train.describe,len,pd.concat,None.reset_index,print,dataset.isnull,None.sum,dataset.dtypes.value_counts,dataset.select_dtypes,None.apply,dataset.describe,LabelEncoder,len,le.fit,le.transform,le_vars.append,print,print,pd.get_dummies,print,dataset.describe,dataset.plot.hist,plt.xlabel,sns.factorplot,g.despine,g.set_ylabels,print,print,outlier_children.describe,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,sns.lineplot,sns.heatmap,dataset.describe,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.describe,dataset.plot.hist,plt.xlabel,print,print,outlier_days_employed.describe,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.describe,dataset.plot.hist,plt.xlabel,sns.heatmap,dataset.describe,dataset.plot.hist,plt.xlabel,print,print,outlier_car_age.describe,outlier_car_age.plot.hist,plt.xlabel,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,print,print,print,outlier_fam_mem.describe,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.map,None.sum,dataset.replace,dataset.describe,dataset.describe,dataset.plot.hist,plt.xlabel,sns.heatmap,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,sns.heatmap,dataset.describe,dataset.plot.hist,plt.xlabel,print,print,outlier_obs_30_social.describe,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,print,print,outlier_def_30_social.describe,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,print,print,outlier_obs_60_social.describe,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,print,print,outlier_def_60_social.describe,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,sns.heatmap,dataset.describe,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.replace,dataset.describe,dataset.plot.hist,plt.xlabel,dataset.replace,sns.heatmap,sns.heatmap,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.read_csv,bureau.head,print,bureau.describe,bureau.groupby,None.count,None.rename,BUREAU_count.describe,dataset.merge,dataset.corr,print,bureau.describe,bureau.plot.hist,plt.xlabel,bureau.groupby,None.max,None.rename,DAYS_CREDIT_max.head,dataset.merge,dataset.corr,print,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,bureau.describe,bureau.plot.hist,plt.xlabel,bureau.groupby,None.max,None.rename,CREDIT_DAY_OVERDUE_max.describe,CREDIT_DAY_OVERDUE_maxCREDIT_DAY_OVERDUE_max.count,CREDIT_DAY_OVERDUE_max.where,CREDIT_DAY_OVERDUE_max.drop,dataset.merge,dataset.corr,print,bureau.describe,bureau.plot.hist,plt.xlabel,bureau.groupby,None.max,None.rename,DAYS_CREDIT_ENDDATE_max.describe,DAYS_CREDIT_ENDDATE_max.replace,dataset.merge,dataset.corr,print,bureau.describe,bureau.plot.hist,plt.xlabel,bureau.groupby,None.mean,None.rename,DAYS_ENDDATE_FACT_mean.describe,DAYS_ENDDATE_FACT_mean.plot.hist,plt.xlabel,DAYS_ENDDATE_FACT_mean.replace,dataset.merge,dataset.corr,print,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,bureau.describe,bureau.groupby,None.max,None.rename,AMT_CREDIT_MAX_OVERDUE_max.describe,bureau.groupby,None.mean,None.rename,AMT_CREDIT_MAX_OVERDUE_mean.describe,dataset.merge,dataset.merge,dataset.corr,dataset.corr,print,print,bureau.describe,bureau.groupby,None.sum,None.rename,CNT_CREDIT_PROLONG_sum.describe,dataset.merge,dataset.corr,print,bureau.describe,bureau.groupby,None.mean,None.rename,AMT_CREDIT_SUM_mean.describe,dataset.merge,dataset.corr,print,bureau.describe,bureau.groupby,None.mean,None.rename,AMT_CREDIT_SUM_DEBT_mean.describe,dataset.merge,dataset.corr,print,bureau.describe,bureau.groupby,None.mean,None.rename,AMT_CREDIT_SUM_LIMIT_mean.describe,dataset.merge,dataset.corr,print,bureau.describe,bureau.groupby,None.mean,None.rename,AMT_CREDIT_SUM_OVERDUE_mean.describe,dataset.merge,dataset.corr,print,bureau.describe,bureau.groupby,None.max,None.rename,DAYS_CREDIT_UPDATE_max.describe,dataset.merge,dataset.corr,print,bureau.describe,bureau.groupby,None.mean,None.rename,AMT_ANNUITY_mean.describe,dataset.merge,dataset.corr,print,bureau.describe,pd.get_dummies,bureau_cats.head,bureau_cats.groupby,None.agg,bureau_cats_grouped.head,dataset.merge,dataset.head,pd.read_csv,bureau_balance.head,bureau_balance.groupby,None.count,None.rename,MONTHS_BALANCE_count.describe,bureau_balance.groupby,None.mean,None.rename,MONTHS_BALANCE_mean.describe,MONTHS_BALANCE_mean.merge,MONTHS_BAL.head,pd.get_dummies,bureau_bal_cats.head,bureau_bal_cats.groupby,None.agg,bureau_bal_cats_grouped.head,MONTHS_BAL.merge,bureau_bal_merged.merge,bureau_bal_merged.head,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,bureau_bal_merged.groupby,None.mean,None.rename,dataset.merge,dataset.corr,print,dataset.head,gc.enable,gc.collect,pd.read_csv,credit.head,credit.groupby,None.count,None.rename,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,credit_stats_by_prev.merge,credit_stats_by_prev.head,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,credit.groupby,None.mean,None.rename,credit_stats_by_prev.merge,gc.enable,gc.collect,pd.get_dummies,credit_cats.head,credit_cats.groupby,None.agg,credit_cats_grouped.head,credit_stats_by_prev.merge,gc.enable,gc.collect,credit_stats_by_prev.head,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,credit_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,print,dataset.head,gc.enable,gc.collect,pd.read_csv,install.head,install.head,install.groupby,None.count,None.rename,install.groupby,None.max,None.rename,install_stats_by_prev.merge,install_stats_by_prev.merge,gc.enable,gc.collect,install.groupby,None.mean,None.rename,install_stats_by_prev.merge,gc.enable,gc.collect,install.groupby,None.mean,None.rename,install_stats_by_prev.merge,gc.enable,gc.collect,install.groupby,None.mean,None.rename,install_stats_by_prev.merge,gc.enable,gc.collect,install.groupby,None.mean,None.rename,install_stats_by_prev.merge,gc.enable,gc.collect,install.groupby,None.mean,None.rename,install.groupby,None.max,None.rename,install.groupby,None.min,None.rename,install_stats_by_prev.merge,install_stats_by_prev.merge,install_stats_by_prev.merge,gc.enable,gc.collect,install.groupby,None.mean,None.rename,install.groupby,None.max,None.rename,install.groupby,None.min,None.rename,install_stats_by_prev.merge,install_stats_by_prev.merge,install_stats_by_prev.merge,gc.enable,gc.collect,install_stats_by_prev.head,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.max,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,install_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,print,dataset.head,gc.enable,gc.collect,pd.read_csv,cash.head,cash.groupby,None.count,None.rename,cash.groupby,None.mean,None.rename,cash_stats_by_prev.merge,cash_stats_by_prev.merge,gc.enable,gc.collect,cash.groupby,None.mean,None.rename,cash_stats_by_prev.merge,gc.enable,gc.collect,cash.groupby,None.mean,None.rename,cash_stats_by_prev.merge,gc.enable,gc.collect,cash.groupby,None.mean,None.rename,cash_stats_by_prev.merge,gc.enable,gc.collect,cash.groupby,None.mean,None.rename,cash_stats_by_prev.merge,gc.enable,gc.collect,pd.get_dummies,cash_cats.head,cash_cats.groupby,None.agg,cash_cats_grouped.head,cash_stats_by_prev.merge,gc.enable,gc.collect,cash_stats_by_prev.head,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,cash_stats_by_prev.groupby,None.mean,None.rename,dataset.merge,gc.enable,gc.collect,gc.enable,gc.collect,print,dataset.head,dataset.dtypes.value_counts,dataset.describe,dataset.map,dataset.map,dataset.describe,dataset.describe,dataset.drop,train_test_split,X_small.drop,corr.corr,None.abs,corr_matrix.where,upper_corr.head,any,print,dataset.drop,print,gc.enable,gc.collect,dataset.isnull,None.sum,len,None.sort_values,dataset_missing.head,print,dataset.drop,print,train.drop,x_test.drop,train.astype,train.drop,print,print,print,np.zeros,lgb.LGBMClassifier,range,train_test_split,model.fit,pd.DataFrame,None.sort_values,feature_imp.head,list,print,feature_imp.tail,x_train.drop,x_test.drop,print,print,np.zeros,np.zeros,KFold,np.array,np.array,k_fold.split,lgb.LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,valid_scores.append,train_scores.append,gc.enable,gc.collect,roc_auc_score,valid_scores.append,train_scores.append,list,fold_names.append,pd.DataFrame,pd.DataFrame,submission.to_csv",1102,"['filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'describe', 'describe', 'len', 'concat', 'reset_index', 'print', 'isnull', 'sum', 'dtypes', 'select_dtypes', 'apply', 'describe', 'LabelEncoder', 'len', 'fit', 'transform', 'append', 'print', 'print', 'get_dummies', 'print', 'describe', 'plot', 'xlabel', 'factorplot', 'despine', 'set_ylabels', 'print', 'print', 'describe', 'replace', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'lineplot', 'heatmap', 'describe', 'describe', 'plot', 'xlabel', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'describe', 'replace', 'describe', 'plot', 'xlabel', 'describe', 'describe', 'plot', 'xlabel', 'describe', 'describe', 'plot', 'xlabel', 'heatmap', 'describe', 'plot', 'xlabel', 'print', 'print', 'describe', 'plot', 'xlabel', 'replace', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'describe', 'replace', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'map', 'sum', 'replace', 'describe', 'describe', 'plot', 'xlabel', 'heatmap', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'heatmap', 'describe', 'plot', 'xlabel', 'print', 'print', 'describe', 'replace', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'print', 'print', 'describe', 'replace', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'print', 'print', 'describe', 'replace', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'print', 'print', 'describe', 'replace', 'describe', 'plot', 'xlabel', 'heatmap', 'describe', 'describe', 'plot', 'xlabel', 'describe', 'plot', 'xlabel', 'replace', 'describe', 'plot', 'xlabel', 'replace', 'describe', 'plot', 'xlabel', 'replace', 'describe', 'plot', 'xlabel', 'replace', 'describe', 'plot', 'xlabel', 'replace', 'describe', 'plot', 'xlabel', 'replace', 'heatmap', 'heatmap', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'read_csv', 'head', 'print', 'describe', 'groupby', 'count', 'rename', 'describe', 'merge', 'corr', 'print', 'describe', 'plot', 'xlabel', 'groupby', 'max', 'rename', 'head', 'merge', 'corr', 'print', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'describe', 'plot', 'xlabel', 'groupby', 'max', 'rename', 'describe', 'count', 'where', 'drop', 'merge', 'corr', 'print', 'describe', 'plot', 'xlabel', 'groupby', 'max', 'rename', 'describe', 'replace', 'merge', 'corr', 'print', 'describe', 'plot', 'xlabel', 'groupby', 'mean', 'rename', 'describe', 'plot', 'xlabel', 'replace', 'merge', 'corr', 'print', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'describe', 'groupby', 'max', 'rename', 'describe', 'groupby', 'mean', 'rename', 'describe', 'merge', 'merge', 'corr', 'corr', 'print', 'print', 'describe', 'groupby', 'sum', 'rename', 'describe', 'merge', 'corr', 'print', 'describe', 'groupby', 'mean', 'rename', 'describe', 'merge', 'corr', 'print', 'describe', 'groupby', 'mean', 'rename', 'describe', 'merge', 'corr', 'print', 'describe', 'groupby', 'mean', 'rename', 'describe', 'merge', 'corr', 'print', 'describe', 'groupby', 'mean', 'rename', 'describe', 'merge', 'corr', 'print', 'describe', 'groupby', 'max', 'rename', 'describe', 'merge', 'corr', 'print', 'describe', 'groupby', 'mean', 'rename', 'describe', 'merge', 'corr', 'print', 'describe', 'get_dummies', 'head', 'groupby', 'agg', 'head', 'merge', 'head', 'read_csv', 'head', 'groupby', 'count', 'rename', 'describe', 'groupby', 'mean', 'rename', 'describe', 'merge', 'head', 'get_dummies', 'head', 'groupby', 'agg', 'head', 'merge', 'merge', 'head', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'groupby', 'mean', 'rename', 'merge', 'corr', 'print', 'head', 'enable', 'collect', 'read_csv', 'head', 'groupby', 'count', 'rename', 'groupby', 'mean', 'rename', 'merge', 'merge', 'head', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'get_dummies', 'head', 'groupby', 'agg', 'head', 'merge', 'enable', 'collect', 'head', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'print', 'head', 'enable', 'collect', 'read_csv', 'head', 'head', 'groupby', 'count', 'rename', 'groupby', 'max', 'rename', 'merge', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'groupby', 'max', 'rename', 'groupby', 'min', 'rename', 'merge', 'merge', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'groupby', 'max', 'rename', 'groupby', 'min', 'rename', 'merge', 'merge', 'merge', 'enable', 'collect', 'head', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'max', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'print', 'head', 'enable', 'collect', 'read_csv', 'head', 'groupby', 'count', 'rename', 'groupby', 'mean', 'rename', 'merge', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'get_dummies', 'head', 'groupby', 'agg', 'head', 'merge', 'enable', 'collect', 'head', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'groupby', 'mean', 'rename', 'merge', 'enable', 'collect', 'enable', 'collect', 'print', 'head', 'dtypes', 'describe', 'map', 'map', 'describe', 'describe', 'drop', 'train_test_split', 'drop', 'corr', 'abs', 'where', 'head', 'any', 'print', 'drop', 'print', 'enable', 'collect', 'isnull', 'sum', 'len', 'sort_values', 'head', 'print', 'drop', 'print', 'drop', 'drop', 'astype', 'drop', 'print', 'print', 'print', 'zeros', 'LGBMClassifier', 'range', 'train_test_split', 'fit', 'DataFrame', 'sort_values', 'head', 'list', 'print', 'tail', 'drop', 'drop', 'print', 'print', 'zeros', 'zeros', 'KFold', 'array', 'array', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'append', 'append', 'enable', 'collect', 'roc_auc_score', 'append', 'append', 'list', 'append', 'DataFrame', 'DataFrame', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'describe', 'len', 'concat', 'reset_index', 'isnull', 'sum', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'append', 'get_dummies', 'xlabel', 'factorplot', 'despine', 'set_ylabels', 'replace', 'lineplot', 'heatmap', 'map', 'figure', 'kdeplot', 'ylabel', 'title', 'groupby', 'count', 'rename', 'merge', 'corr', 'max', 'where', 'drop', 'mean', 'agg', 'enable', 'collect', 'min', 'train_test_split', 'abs', 'any', 'sort_values', 'zeros', 'LGBMClassifier', 'range', 'DataFrame', 'list', 'tail', 'KFold', 'array', 'split', 'predict_proba', 'roc_auc_score', 'to_csv']",62,"['numpy', 'pandas', 'sklearn', 'os\n', 'gc\n', 'matplotlib', 'seaborn', 'lightgbm', 'warnings\n']",9,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",3203,0.784,None,3,
home-credit-default-analysis.py,"get_ipython,None.run_line_magic,sns.set,glob,pd.read_csv,reading_csv_file,print,app_train.head,y.head,reading_csv_file,print,app_test.head,reading_csv_file,reading_csv_file,reading_csv_file,reading_csv_file,reading_csv_file,reading_csv_file,os.listdir,data.remove,print,app_train.head,sns.countplot,plt.figure,sns.countplot,pd.crosstab,plt.figure,plt.show,input.isnull,None.sum,len,pd.concat,renamed_miss_val_percent_tabrenamed_miss_val_percent_tab.iloc.sort_values,None.round,print,print,check_missing_values,missing_value.head,app_train.get_dtype_counts,print,app_train.select_dtypes,None.apply,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,app_train.corr,None.sort_values,print,print,app_train.select_dtypes,app_train.select_dtypes,len,len,pd.get_dummies,pd.get_dummies,print,print,one_hot_encoded_app_train.align,print,print,one_hot_encoded_app_train.drop,Xcol.isnull,None.any,input_set.drop,dropping_missing_columns,dropping_missing_columns,print,print,one_hot_encoded_app_train.copy,one_hot_encoded_app_test.copy,y.copy,train_tobe_imputed.drop,Imputer,imputer.fit_transform,imputer.fit_transform,print,print,print,train_test_split,LogisticRegression,model.fit,print,model.predict,model.predict,model.predict_proba,confusion_matrix,accuracy_score,r2_score,classification_report,print,print,print,print,print,cross_val_score,print,print,print,pd.DataFrame,my_submission.to_csv",101,"['get_ipython', 'run_line_magic', 'set', 'glob', 'read_csv', 'reading_csv_file', 'print', 'head', 'head', 'reading_csv_file', 'print', 'head', 'reading_csv_file', 'reading_csv_file', 'reading_csv_file', 'reading_csv_file', 'reading_csv_file', 'reading_csv_file', 'listdir', 'remove', 'print', 'head', 'countplot', 'figure', 'countplot', 'crosstab', 'figure', 'show', 'isnull', 'sum', 'len', 'concat', 'iloc', 'round', 'print', 'print', 'check_missing_values', 'head', 'get_dtype_counts', 'print', 'select_dtypes', 'apply', 'describe', 'describe', 'plot', 'xlabel', 'corr', 'sort_values', 'print', 'print', 'select_dtypes', 'select_dtypes', 'len', 'len', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'drop', 'isnull', 'any', 'drop', 'dropping_missing_columns', 'dropping_missing_columns', 'print', 'print', 'copy', 'copy', 'copy', 'drop', 'Imputer', 'fit_transform', 'fit_transform', 'print', 'print', 'print', 'train_test_split', 'LogisticRegression', 'fit', 'print', 'predict', 'predict', 'predict_proba', 'confusion_matrix', 'accuracy_score', 'r2_score', 'classification_report', 'print', 'print', 'print', 'print', 'print', 'cross_val_score', 'print', 'print', 'print', 'DataFrame', 'to_csv']","['get_ipython', 'run_line_magic', 'set', 'glob', 'read_csv', 'reading_csv_file', 'print', 'head', 'listdir', 'remove', 'countplot', 'figure', 'crosstab', 'show', 'isnull', 'sum', 'len', 'concat', 'iloc', 'round', 'check_missing_values', 'get_dtype_counts', 'select_dtypes', 'apply', 'describe', 'plot', 'xlabel', 'corr', 'sort_values', 'get_dummies', 'align', 'drop', 'any', 'dropping_missing_columns', 'copy', 'Imputer', 'fit_transform', 'train_test_split', 'LogisticRegression', 'fit', 'predict', 'predict_proba', 'confusion_matrix', 'accuracy_score', 'r2_score', 'classification_report', 'cross_val_score', 'DataFrame', 'to_csv']",49,"['__future__', 'pandas', 'numpy', 'os', 'zipfile', 'glob', 'seaborn', 'matplotlib', 'scikit-learn', 'sklearn']",10,"[1 1 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0]",568,0.78532,Silver,56,
hybrid-jeepy-and-lgb-ii.py,"np.random.randn,len,len,pd.concat,temp.groupby,None.name.agg,np.exp,target.mean,averages.drop,pd.merge,None.rename,None.fillna,pd.merge,None.rename,None.fillna,add_noise,add_noise,pd.DataFrame,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,gc.enable,pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,inst.groupby,None.mean,print,pd.read_csv,pd.read_csv,print,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,gc.collect,train.columns.str.replace,test.columns.str.replace,trainc.astype,stringtypes.append,trainc.astype,inttypes.append,trainc.astype,floattypes.append,train.reset_index,test.reset_index,KFold,testcol.isin,testcol.isin,enumerate,target_encode,target_encode,KFold,testcol.isin,testcol.isin,enumerate,target_encode,target_encode,test.insert,pd.concat,gc.collect,alldata.isnull,None.sum,alldatacol.value_counts,None.reset_index,alldata.merge,list,alldatafeatures.astype,StandardScaler,alldatac.isnull,ss.fit_transform,alldatac.fillna,UseGPFeatures,UseGPFeatures,gc.enable,KFold,np.zeros,np.zeros,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,print,gc.collect,pd.DataFrame,Submission.to_csv",681,"['random', 'len', 'len', 'concat', 'groupby', 'name', 'exp', 'mean', 'drop', 'merge', 'rename', 'fillna', 'merge', 'rename', 'fillna', 'add_noise', 'add_noise', 'DataFrame', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'enable', 'read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'groupby', 'mean', 'print', 'read_csv', 'read_csv', 'print', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'columns', 'columns', 'astype', 'append', 'astype', 'append', 'astype', 'append', 'reset_index', 'reset_index', 'KFold', 'isin', 'isin', 'enumerate', 'target_encode', 'target_encode', 'KFold', 'isin', 'isin', 'enumerate', 'target_encode', 'target_encode', 'insert', 'concat', 'collect', 'isnull', 'sum', 'value_counts', 'reset_index', 'merge', 'list', 'astype', 'StandardScaler', 'isnull', 'fit_transform', 'fillna', 'UseGPFeatures', 'UseGPFeatures', 'enable', 'KFold', 'zeros', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'print', 'collect', 'DataFrame', 'to_csv']","['random', 'len', 'concat', 'groupby', 'name', 'exp', 'mean', 'drop', 'merge', 'rename', 'fillna', 'add_noise', 'DataFrame', 'tanh', 'enable', 'read_csv', 'print', 'count', 'map', 'collect', 'get_dummies', 'factorize', 'get_indexer', 'columns', 'astype', 'append', 'reset_index', 'KFold', 'isin', 'enumerate', 'target_encode', 'insert', 'isnull', 'sum', 'value_counts', 'list', 'StandardScaler', 'fit_transform', 'UseGPFeatures', 'zeros', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",44,"['gc\n', 'numpy', 'pandas', 'sklearn', 'lightgbm']",5,"[1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",943,0.78547,Gold,66,
bayesian-opt-lgbmclassifier.py,"warnings.simplefilter,os.walk,print,pd.read_csv,df.notnull,train_test_split,df.isnull,df.isnull,time.time,LGBMClassifier,cross_val_score,print,SCORES.append,plt.figure,plt.plot,plt.scatter,plt.ylabel,plt.xlabel,plt.title,plt.show,print,np.mean,BayesianOptimization,lgbBO.maximize,max,range,None.index,LGBMClassifier,clf.fit,clf.predict_proba,metrics.roc_curve,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.show,print,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.show,pd.DataFrame,importance_df.sort_values,importance_df.reset_index,display_importances,plt.figure,sns.heatmap,plt.show,pd.concat,pd.concat,LGBMClassifier,clf.fit,pickle.dump,clf.predict_proba,pd.DataFrame,df_results.to_csv",65,"['simplefilter', 'walk', 'print', 'read_csv', 'notnull', 'train_test_split', 'isnull', 'isnull', 'time', 'LGBMClassifier', 'cross_val_score', 'print', 'append', 'figure', 'plot', 'scatter', 'ylabel', 'xlabel', 'title', 'show', 'print', 'mean', 'BayesianOptimization', 'maximize', 'max', 'range', 'index', 'LGBMClassifier', 'fit', 'predict_proba', 'roc_curve', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'show', 'print', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'show', 'DataFrame', 'sort_values', 'reset_index', 'display_importances', 'figure', 'heatmap', 'show', 'concat', 'concat', 'LGBMClassifier', 'fit', 'dump', 'predict_proba', 'DataFrame', 'to_csv']","['simplefilter', 'walk', 'print', 'read_csv', 'notnull', 'train_test_split', 'isnull', 'time', 'LGBMClassifier', 'cross_val_score', 'append', 'figure', 'plot', 'scatter', 'ylabel', 'xlabel', 'title', 'show', 'mean', 'BayesianOptimization', 'maximize', 'max', 'range', 'index', 'fit', 'predict_proba', 'roc_curve', 'xlim', 'ylim', 'groupby', 'sort_values', 'feature', 'barplot', 'tight_layout', 'DataFrame', 'reset_index', 'display_importances', 'heatmap', 'concat', 'dump', 'to_csv']",41,"['numpy', 'pandas', 'matplotlib', 'seaborn', 'gc\n', 'time\n', 'contextlib', 'sklearn', 'bayes_opt', 'lightgbm', 'pickle\n', 'warnings\n', 'os\n']",13,"[1 1 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",329,0.78551,None,2,
home-crerit-default-risk-002.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,pd.factorize,one_hot_encoder,df.replace,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",169,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'collect', 'groupby', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",49,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",459,0.78585,Bronze,24,
home-credit-default-risk-001.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,pd.factorize,one_hot_encoder,df.replace,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",169,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'collect', 'groupby', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",49,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",459,0.78588,Bronze,31,
pure-gp-with-mean-squared-error.py,"time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.mean,dfdocs.std,dfdocs.kurtosis,dflive.sum,dflive.std,dflive.kurtosis,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,active_agg.columns.tolist,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,e.upper,e.upper,e.upper,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,approved_agg.columns.tolist,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,e.upper,e.upper,e.upper,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,warnings.simplefilter,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,StandardScaler,np.isfinite,dfc.isnull,ss.fit_transform,dfc.fillna,df.notnull,df.isnull,train_df.columns.str.replace,test_df.columns.str.replace,np.exp,pd.DataFrame,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,Output,pd.DataFrame,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,Output,roc_auc_score,roc_auc_score,test_df.copy,GP1,GP2,x.to_csv",449,"['time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'mean', 'std', 'kurtosis', 'sum', 'std', 'kurtosis', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'columns', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'upper', 'upper', 'upper', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'columns', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'upper', 'upper', 'upper', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'simplefilter', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'StandardScaler', 'isfinite', 'isnull', 'fit_transform', 'fillna', 'notnull', 'isnull', 'columns', 'columns', 'exp', 'DataFrame', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'Output', 'DataFrame', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'Output', 'roc_auc_score', 'roc_auc_score', 'copy', 'GP1', 'GP2', 'to_csv']","['time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'mean', 'std', 'kurtosis', 'sum', 'map', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'agg', 'Index', 'join', 'drop', 'columns', 'upper', 'size', 'apply', 'simplefilter', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'StandardScaler', 'isfinite', 'isnull', 'fit_transform', 'notnull', 'exp', 'DataFrame', 'tanh', 'Output', 'roc_auc_score', 'copy', 'GP1', 'GP2', 'to_csv']",49,"['gc\n', 'time\n', 'numpy', 'pandas', 'contextlib', 'sklearn', 'warnings\n']",7,"[1 1 0 1 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",661,0.78664,Silver,28,
lightgbm_with_weighted_averages_dropout_787.py,"os.path.join,print,print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,print,print,print,right_df.groupby,None.agg,left_df.merge,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,print,prev_app_df.groupby,None.agg,app_data.merge,agg_and_merge,print,process_dataframe,prev_app_dfcat_feats.groupby,None.agg,merged_df.merge,print,np.average,credit_card_df.groupby,None.agg,merged_df.merge,agg_and_merge,print,credit_card_df.groupby,None.idxmax,credit_card_df.columnscredit_card_df.dtypes.tolist,merged_df.merge,print,agg_and_merge,print,bureau_balance_df.groupby,None.idxmax,merged_df.merge,print,np.average,pos_cash_df.groupby,None.agg,merged_df.merge,agg_and_merge,pos_cash_df.groupby,None.idxmax,pos_cash_df.columnspos_cash_df.dtypes.tolist,merged_df.merge,print,agg_and_merge,print,merged_df.merge,merged_df.merge,merged_df.merge,merged_df.merge,print,print,LabelEncoder,encoder.fit_transform,print,categorical_feats.tolist,len,pd.concat,feature_engineering,merged_df.to_csv,merged_df.drop,process_dataframe,gc.collect,train_df.pop,test_df.drop,lgbm.Dataset,gc.collect,lgbm.cv,np.argmax,print,print,lgbm.train,clf.predict,pd.DataFrame,out_df.to_csv,plt.subplots,lgbm.plot_importance,lgbm.plot_importance,ax.set_title,ax1.set_title,plt.tight_layout,plt.savefig",98,"['path', 'print', 'print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'print', 'print', 'print', 'groupby', 'agg', 'merge', 'replace', 'replace', 'replace', 'replace', 'replace', 'print', 'groupby', 'agg', 'merge', 'agg_and_merge', 'print', 'process_dataframe', 'groupby', 'agg', 'merge', 'print', 'average', 'groupby', 'agg', 'merge', 'agg_and_merge', 'print', 'groupby', 'idxmax', 'columnscredit_card_df', 'merge', 'print', 'agg_and_merge', 'print', 'groupby', 'idxmax', 'merge', 'print', 'average', 'groupby', 'agg', 'merge', 'agg_and_merge', 'groupby', 'idxmax', 'columnspos_cash_df', 'merge', 'print', 'agg_and_merge', 'print', 'merge', 'merge', 'merge', 'merge', 'print', 'print', 'LabelEncoder', 'fit_transform', 'print', 'tolist', 'len', 'concat', 'feature_engineering', 'to_csv', 'drop', 'process_dataframe', 'collect', 'pop', 'drop', 'Dataset', 'collect', 'cv', 'argmax', 'print', 'print', 'train', 'predict', 'DataFrame', 'to_csv', 'subplots', 'plot_importance', 'plot_importance', 'set_title', 'set_title', 'tight_layout', 'savefig']","['path', 'print', 'read_csv', 'groupby', 'agg', 'merge', 'replace', 'agg_and_merge', 'process_dataframe', 'average', 'idxmax', 'columnscredit_card_df', 'columnspos_cash_df', 'LabelEncoder', 'fit_transform', 'tolist', 'len', 'concat', 'feature_engineering', 'to_csv', 'drop', 'collect', 'pop', 'Dataset', 'cv', 'argmax', 'train', 'predict', 'DataFrame', 'subplots', 'plot_importance', 'set_title', 'tight_layout', 'savefig']",34,"['os\n', 'gc\n', 'pandas', 'numpy', 'lightgbm', 'sklearn', 'matplotlib']",7,"[1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",261,0.787,Gold,132,
pure-gp-with-logloss.py,"time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.mean,dfdocs.std,dfdocs.kurtosis,dflive.sum,dflive.std,dflive.kurtosis,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,active_agg.columns.tolist,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,e.upper,e.upper,e.upper,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,approved_agg.columns.tolist,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,e.upper,e.upper,e.upper,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,warnings.simplefilter,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,StandardScaler,np.isfinite,dfc.isnull,ss.fit_transform,dfc.fillna,df.notnull,df.isnull,train_df.columns.str.replace,test_df.columns.str.replace,np.exp,pd.DataFrame,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,Output,pd.DataFrame,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,np.tanh,Output,roc_auc_score,roc_auc_score,test_df.copy,GP1,GP2,x.to_csv",449,"['time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'mean', 'std', 'kurtosis', 'sum', 'std', 'kurtosis', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'columns', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'upper', 'upper', 'upper', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'columns', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'upper', 'upper', 'upper', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'simplefilter', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'StandardScaler', 'isfinite', 'isnull', 'fit_transform', 'fillna', 'notnull', 'isnull', 'columns', 'columns', 'exp', 'DataFrame', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'Output', 'DataFrame', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'Output', 'roc_auc_score', 'roc_auc_score', 'copy', 'GP1', 'GP2', 'to_csv']","['time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'mean', 'std', 'kurtosis', 'sum', 'map', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'agg', 'Index', 'join', 'drop', 'columns', 'upper', 'size', 'apply', 'simplefilter', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'StandardScaler', 'isfinite', 'isnull', 'fit_transform', 'notnull', 'exp', 'DataFrame', 'tanh', 'Output', 'roc_auc_score', 'copy', 'GP1', 'GP2', 'to_csv']",49,"['gc\n', 'time\n', 'numpy', 'pandas', 'contextlib', 'sklearn', 'warnings\n']",7,"[1 1 0 1 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",661,0.78765,Bronze,22,
simple-blending-788-lb.py,"print,pd.read_csv,pd.read_csv,data1.to_csv",4,"['print', 'read_csv', 'read_csv', 'to_csv']","['print', 'read_csv', 'to_csv']",3,"['numpy', 'pandas', 'os\n']",3,"[1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",51,0.788,Bronze,20,
light-gbm-easy-peasy.py,"warnings.filterwarnings,print,pd.read_csv,pd.read_csv,print,df.append,df.describe,app_train.plot.hist,plt.xlabel,df.replace,app_train.select_dtypes,None.apply,print,print,print,LabelEncoder,len,le.fit,le.transform,print,pd.get_dummies,print,app_train.value_counts,app_train.astype,None.plot.hist,gc.collect,list,pd.factorize,pd.concat,pd.read_csv,pd.read_csv,_get_categorical_features,_get_categorical_features,_get_dummies,_get_dummies,bureau.groupby,None.mean,bureau.groupby,None.count,df.merge,gc.collect,pd.read_csv,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,_get_categorical_features,_get_dummies,prev.groupby,None.count,prev.map,prev.groupby,None.mean,df.merge,gc.collect,pd.read_csv,_get_categorical_features,_get_dummies,pos.groupby,None.count,pos.map,pos.groupby,None.mean,df.merge,gc.collect,pd.read_csv,_get_categorical_features,_get_dummies,ins.apply,ins.apply,ins.groupby,None.count,ins.map,ins.groupby,None.mean,df.merge,gc.collect,pd.read_csv,_get_categorical_features,_get_dummies,credit_card_balance.groupby,None.count,credit_card_balance.map,credit_card_balance.groupby,None.mean,df.merge,gc.collect,df.notnull,df.isnull,print,KFold,np.zeros,np.zeros,pd.DataFrame,folds.split,LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,pd.DataFrame,pd.concat,gc.collect,print,test_df.to_csv",105,"['filterwarnings', 'print', 'read_csv', 'read_csv', 'print', 'append', 'describe', 'plot', 'xlabel', 'replace', 'select_dtypes', 'apply', 'print', 'print', 'print', 'LabelEncoder', 'len', 'fit', 'transform', 'print', 'get_dummies', 'print', 'value_counts', 'astype', 'plot', 'collect', 'list', 'factorize', 'concat', 'read_csv', 'read_csv', '_get_categorical_features', '_get_categorical_features', '_get_dummies', '_get_dummies', 'groupby', 'mean', 'groupby', 'count', 'merge', 'collect', 'read_csv', 'replace', 'replace', 'replace', 'replace', 'replace', '_get_categorical_features', '_get_dummies', 'groupby', 'count', 'map', 'groupby', 'mean', 'merge', 'collect', 'read_csv', '_get_categorical_features', '_get_dummies', 'groupby', 'count', 'map', 'groupby', 'mean', 'merge', 'collect', 'read_csv', '_get_categorical_features', '_get_dummies', 'apply', 'apply', 'groupby', 'count', 'map', 'groupby', 'mean', 'merge', 'collect', 'read_csv', '_get_categorical_features', '_get_dummies', 'groupby', 'count', 'map', 'groupby', 'mean', 'merge', 'collect', 'notnull', 'isnull', 'print', 'KFold', 'zeros', 'zeros', 'DataFrame', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'collect', 'print', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'append', 'describe', 'plot', 'xlabel', 'replace', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'get_dummies', 'value_counts', 'astype', 'collect', 'list', 'factorize', 'concat', '_get_categorical_features', '_get_dummies', 'groupby', 'mean', 'count', 'merge', 'map', 'notnull', 'isnull', 'KFold', 'zeros', 'DataFrame', 'split', 'LGBMClassifier', 'predict_proba', 'to_csv']",37,"['numpy', 'pandas', 'sklearn', 'os\n', 'gc\n', 'warnings\n', 'matplotlib', 'seaborn', 'lightgbm']",9,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",563,0.78844,None,1,
simple-home-default-credit-lb-score-0-789.py,"print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.concat,pd.get_dummies,print,buro_balance.groupby,None.size,buro_balance.groupby,None.max,buro_balance.groupby,None.min,buro_balance.groupby,None.value_counts,buro_counts.unstack,buro.join,print,pd.get_dummies,prev.groupby,None.mean,prev.groupby,None.count,print,pd.get_dummies,buro.groupby,None.mean,buro.groupby,None.count,print,LabelEncoder,le.fit_transform,POS_CASH.groupby,None.nunique,POS_CASH.groupby,None.max,POS_CASH.drop,print,le.fit_transform,credit_card.groupby,None.nunique,credit_card.groupby,None.max,credit_card.drop,print,payments.groupby,None.mean,payments.groupby,None.max,payments.groupby,None.min,print,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,print,data.isnull,None.mean,data.isnull,None.mean,data.drop,test.drop,data.replace,test.replace,data.replace,test.replace,data.align,print,print,test.replace,print,SimpleImputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,data.merge,test.merge,app_train_poly.align,print,print,app_train_poly.head,app_train_poly.rename,app_test_poly.rename,app_test_poly.drop,app_train_poly.drop,app_train_polycol.std,colsToRemove.append,app_train_poly.drop,app_test_poly.drop,print,print,app_train_poly.rename,app_test_poly.rename,app_train_poly.copy,app_test_poly.copy,app_train_domain.mean,app_test_domain.mean,print,print,print,print,app_train_domain.drop,app_test_domain.drop,app_train_domain.drop,app_test_domain.drop,features.drop,test_features.drop,pd.get_dummies,pd.get_dummies,features.align,LabelEncoder,enumerate,label_encoder.fit_transform,label_encoder.transform,cat_indices.append,ValueError,print,print,list,np.array,np.array,KFold,np.zeros,np.zeros,np.zeros,k_fold.split,lgb.LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,valid_scores.append,train_scores.append,gc.enable,gc.collect,pd.DataFrame,pd.DataFrame,roc_auc_score,valid_scores.append,train_scores.append,list,fold_names.append,pd.DataFrame,model,print,print,df.sort_values,None.reset_index,df.sum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plot_feature_importances,submission.to_csv",187,"['print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'concat', 'get_dummies', 'print', 'groupby', 'size', 'groupby', 'max', 'groupby', 'min', 'groupby', 'value_counts', 'unstack', 'join', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'print', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'print', 'isnull', 'mean', 'isnull', 'mean', 'drop', 'drop', 'replace', 'replace', 'replace', 'replace', 'align', 'print', 'print', 'replace', 'print', 'SimpleImputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'head', 'rename', 'rename', 'drop', 'drop', 'std', 'append', 'drop', 'drop', 'print', 'print', 'rename', 'rename', 'copy', 'copy', 'mean', 'mean', 'print', 'print', 'print', 'print', 'drop', 'drop', 'drop', 'drop', 'drop', 'drop', 'get_dummies', 'get_dummies', 'align', 'LabelEncoder', 'enumerate', 'fit_transform', 'transform', 'append', 'ValueError', 'print', 'print', 'list', 'array', 'array', 'KFold', 'zeros', 'zeros', 'zeros', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'append', 'append', 'enable', 'collect', 'DataFrame', 'DataFrame', 'roc_auc_score', 'append', 'append', 'list', 'append', 'DataFrame', 'model', 'print', 'print', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'to_csv']","['print', 'read_csv', 'concat', 'get_dummies', 'groupby', 'size', 'max', 'min', 'value_counts', 'unstack', 'join', 'mean', 'count', 'LabelEncoder', 'fit_transform', 'nunique', 'drop', 'merge', 'isnull', 'replace', 'align', 'SimpleImputer', 'transform', 'PolynomialFeatures', 'fit', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'head', 'rename', 'std', 'append', 'copy', 'enumerate', 'ValueError', 'list', 'array', 'KFold', 'zeros', 'split', 'LGBMClassifier', 'predict_proba', 'enable', 'collect', 'roc_auc_score', 'model', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'to_csv']",59,"['pandas', 'numpy', 'sklearn', 'lightgbm', 'matplotlib', 'seaborn', 'gc\n']",7,"[1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",750,0.789,None,4,
home_rf_et_xgb_cb_stack_oof1_lb_0_789.py,"warnings.filterwarnings,print,pd.read_csv,os.path.join,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,right_df.groupby,None.agg,left_df.merge,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.replace,prev_app_df.groupby,None.agg,app_data.merge,agg_and_merge,process_dataframe,prev_app_dfcat_feats.groupby,None.agg,merged_df.merge,np.average,credit_card_df.groupby,None.agg,merged_df.merge,agg_and_merge,credit_card_df.groupby,None.idxmax,credit_card_df.columnscredit_card_df.dtypes.tolist,merged_df.merge,agg_and_merge,bureau_balance_df.groupby,None.idxmax,merged_df.merge,np.average,pos_cash_df.groupby,None.agg,merged_df.merge,agg_and_merge,pos_cash_df.groupby,None.idxmax,pos_cash_df.columnspos_cash_df.dtypes.tolist,merged_df.merge,agg_and_merge,merged_df.merge,merged_df.merge,merged_df.merge,merged_df.merge,LabelEncoder,encoder.fit_transform,categorical_feats.tolist,len,pd.concat,print,feature_engineering,print,merged_df.to_csv,merged_df.drop,process_dataframe,gc.collect,train_df.pop,test_df.drop,print,data_train.fillna,data_test.fillna,print,KFold,np.array,np.array,np.array,clf,print,self.clf.fit,print,self.clf.predict_proba,params.pop,xgb.DMatrix,print,xgb.train,print,self.gbdt.predict,np.zeros,np.zeros,np.empty,enumerate,clf.train,clf.predict,clf.predict,oof_test_skf.mean,oof_train.reshape,oof_test.reshape,np.zeros,np.zeros,np.empty,enumerate,clf.train,clf.predict,clf.predict,oof_test_skf.mean,oof_train.reshape,oof_test.reshape,XgbWrapper,SklearnWrapper,SklearnWrapper,SklearnWrapper,print,get_oof_xgb,print,get_oof,print,get_oof,print,get_oof,np.concatenate,np.concatenate,np.save,np.save,xgb.DMatrix,xgb.DMatrix,print,xgb.cv,print,xgb.train,gbdt.predict,np.array,np.save,subm.to_csv",134,"['filterwarnings', 'print', 'read_csv', 'path', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'groupby', 'agg', 'merge', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'merge', 'agg_and_merge', 'process_dataframe', 'groupby', 'agg', 'merge', 'average', 'groupby', 'agg', 'merge', 'agg_and_merge', 'groupby', 'idxmax', 'columnscredit_card_df', 'merge', 'agg_and_merge', 'groupby', 'idxmax', 'merge', 'average', 'groupby', 'agg', 'merge', 'agg_and_merge', 'groupby', 'idxmax', 'columnspos_cash_df', 'merge', 'agg_and_merge', 'merge', 'merge', 'merge', 'merge', 'LabelEncoder', 'fit_transform', 'tolist', 'len', 'concat', 'print', 'feature_engineering', 'print', 'to_csv', 'drop', 'process_dataframe', 'collect', 'pop', 'drop', 'print', 'fillna', 'fillna', 'print', 'KFold', 'array', 'array', 'array', 'clf', 'print', 'clf', 'print', 'clf', 'pop', 'DMatrix', 'print', 'train', 'print', 'gbdt', 'zeros', 'zeros', 'empty', 'enumerate', 'train', 'predict', 'predict', 'mean', 'reshape', 'reshape', 'zeros', 'zeros', 'empty', 'enumerate', 'train', 'predict', 'predict', 'mean', 'reshape', 'reshape', 'XgbWrapper', 'SklearnWrapper', 'SklearnWrapper', 'SklearnWrapper', 'print', 'get_oof_xgb', 'print', 'get_oof', 'print', 'get_oof', 'print', 'get_oof', 'concatenate', 'concatenate', 'save', 'save', 'DMatrix', 'DMatrix', 'print', 'cv', 'print', 'train', 'predict', 'array', 'save', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'path', 'groupby', 'agg', 'merge', 'replace', 'agg_and_merge', 'process_dataframe', 'average', 'idxmax', 'columnscredit_card_df', 'columnspos_cash_df', 'LabelEncoder', 'fit_transform', 'tolist', 'len', 'concat', 'feature_engineering', 'to_csv', 'drop', 'collect', 'pop', 'fillna', 'KFold', 'array', 'clf', 'DMatrix', 'train', 'gbdt', 'zeros', 'empty', 'enumerate', 'predict', 'mean', 'reshape', 'XgbWrapper', 'SklearnWrapper', 'get_oof_xgb', 'get_oof', 'concatenate', 'save', 'cv']",44,"['warnings\n', 'numpy', 'pandas', 'matplotlib', 'sklearn', 'catboost', 'xgboost', 'gc\n', 'os\n']",9,"[1 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",400,0.789,,,couldnt find
clean-manual-feature-engineering.py,"round,print,dfc.astype,print,pd.read_csv,None.replace,pd.read_csv,None.replace,pd.read_csv,None.replace,pd.read_csv,None.replace,app_train.append,convert_types,convert_types,convert_types,gc.enable,gc.collect,df.drop,dfparent_var.copy,df.select_dtypes,None.copy,numeric_df.groupby,None.agg,columns.append,np.unique,pd.get_dummies,categorical.groupby,None.agg,column_names.append,np.unique,agg_numeric,agg_categorical,df_agg.merge,np.unique,gc.enable,gc.collect,parent_dfparent_vargrandparent_var.copy,None.set_index,agg_numeric,df_agg.merge,agg_numeric,any,agg_categorical,df_agg_cat.merge,agg_numeric,df_agg_client.merge,gc.enable,gc.collect,df_agg_client.copy,gc.enable,gc.collect,np.unique,app.sum,app.mean,appxxapp.columnsx.sum,agg_child,bureau_info.head,bureau_balance.isin,agg_grandchild,bureau_balance_info.head,app.set_index,app.merge,app.merge,pd.read_csv,None.replace,convert_types,agg_child,app.merge,pd.read_csv,None.replace,convert_types,agg_grandchild,app.merge,pd.read_csv,None.replace,convert_types,agg_grandchild,app.merge,pd.read_csv,None.replace,convert_types,agg_grandchild,gc.collect,gc.enable,time.sleep,app.merge,print,gc.enable,gc.collect,print,app.to_csv,app.reset_index,app.notnull,None.copy,app.isnull,None.copy,gc.enable,gc.collect,np.array,None.reshape,list,test.drop,train.drop,print,print,lgb.LGBMClassifier,model.fit,model.predict_proba,pd.DataFrame,submission.astype,submission.astype,submission.to_csv,list,pd.DataFrame,df.sort_values,None.reset_index,df.sum,np.cumsum,df.locn.plot.barh,plt.xlabel,plt.ylabel,plt.title,plt.gca,None.invert_yaxis,plt.figure,plt.plot,plt.xlabel,plt.ylabel,plt.title,np.min,plt.vlines,plt.show,print,plot_feature_importances,norm_fi.head",136,"['round', 'print', 'astype', 'print', 'read_csv', 'replace', 'read_csv', 'replace', 'read_csv', 'replace', 'read_csv', 'replace', 'append', 'convert_types', 'convert_types', 'convert_types', 'enable', 'collect', 'drop', 'copy', 'select_dtypes', 'copy', 'groupby', 'agg', 'append', 'unique', 'get_dummies', 'groupby', 'agg', 'append', 'unique', 'agg_numeric', 'agg_categorical', 'merge', 'unique', 'enable', 'collect', 'copy', 'set_index', 'agg_numeric', 'merge', 'agg_numeric', 'any', 'agg_categorical', 'merge', 'agg_numeric', 'merge', 'enable', 'collect', 'copy', 'enable', 'collect', 'unique', 'sum', 'mean', 'columnsx', 'agg_child', 'head', 'isin', 'agg_grandchild', 'head', 'set_index', 'merge', 'merge', 'read_csv', 'replace', 'convert_types', 'agg_child', 'merge', 'read_csv', 'replace', 'convert_types', 'agg_grandchild', 'merge', 'read_csv', 'replace', 'convert_types', 'agg_grandchild', 'merge', 'read_csv', 'replace', 'convert_types', 'agg_grandchild', 'collect', 'enable', 'sleep', 'merge', 'print', 'enable', 'collect', 'print', 'to_csv', 'reset_index', 'notnull', 'copy', 'isnull', 'copy', 'enable', 'collect', 'array', 'reshape', 'list', 'drop', 'drop', 'print', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'astype', 'astype', 'to_csv', 'list', 'DataFrame', 'sort_values', 'reset_index', 'sum', 'cumsum', 'locn', 'xlabel', 'ylabel', 'title', 'gca', 'invert_yaxis', 'figure', 'plot', 'xlabel', 'ylabel', 'title', 'min', 'vlines', 'show', 'print', 'plot_feature_importances', 'head']","['round', 'print', 'astype', 'read_csv', 'replace', 'append', 'convert_types', 'enable', 'collect', 'drop', 'copy', 'select_dtypes', 'groupby', 'agg', 'unique', 'get_dummies', 'agg_numeric', 'agg_categorical', 'merge', 'set_index', 'any', 'sum', 'mean', 'columnsx', 'agg_child', 'head', 'isin', 'agg_grandchild', 'sleep', 'to_csv', 'reset_index', 'notnull', 'isnull', 'array', 'reshape', 'list', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'sort_values', 'cumsum', 'locn', 'xlabel', 'ylabel', 'title', 'gca', 'invert_yaxis', 'figure', 'plot', 'min', 'vlines', 'show', 'plot_feature_importances']",54,"['pandas', 'numpy', 'sys\n', 'gc\n', 'time\n', 'lightgbm']",6,"[1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",795,0.78921,Bronze,24,
xgb_lgbm_vote.py,"time.clock,dataset.memory_usage,None.sum,print,datasetcol.min,datasetcol.max,str,np.iinfo,np.iinfo,np.iinfo,datasetcol.astype,np.iinfo,np.iinfo,np.iinfo,datasetcol.astype,np.iinfo,np.iinfo,np.iinfo,datasetcol.astype,np.iinfo,np.iinfo,np.iinfo,datasetcol.astype,gc.collect,np.finfo,np.finfo,np.finfo,datasetcol.astype,np.finfo,np.finfo,np.finfo,datasetcol.astype,datasetcol.astype,gc.collect,dataset.memory_usage,None.sum,print,print,a.merge,datasetcol.fillna,dd.read_csv,dd.read_csv,df_test.compute,df_train.compute,gc.collect,df_train.drop,df_test.drop,print,gc.collect,StratifiedKFold,XGBClassifier,LGBMClassifier,print,csr_matrix,None.tocsr,csr_matrix,None.tocsr,print,pd.DataFrame,pd.DataFrame,list,np.zeros,np.zeros,skf.split,df_train.iloctrain_index.fillna,None.to_sparse,None.to_csr,classifier.fit,df_train.iloctest_index.fillna,None.to_sparse,None.to_csr,classifier.predict_proba,roc_auc_score,print,classifier.predict_proba,classifier.predict_proba,classifier.fit,classifier.predict_proba,roc_auc_score,print,classifier.predict_proba,classifier.predict_proba,print,pd.DataFrame,VotingClassifier,np.zeros,skf.split,print,vc.fit,print,vc.predict_proba,roc_auc_score,print,print,vc.predict_proba,vc.fit,vc.predict_proba,roc_auc_score,print,vc.predict_proba,gc.collect,print,pd.DataFrame,pd.DataFrame,datetime.datetime.now,None.strftime,df_subm.to_csv",107,"['clock', 'memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'collect', 'finfo', 'finfo', 'finfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'astype', 'collect', 'memory_usage', 'sum', 'print', 'print', 'merge', 'fillna', 'read_csv', 'read_csv', 'compute', 'compute', 'collect', 'drop', 'drop', 'print', 'collect', 'StratifiedKFold', 'XGBClassifier', 'LGBMClassifier', 'print', 'csr_matrix', 'tocsr', 'csr_matrix', 'tocsr', 'print', 'DataFrame', 'DataFrame', 'list', 'zeros', 'zeros', 'split', 'iloctrain_index', 'to_sparse', 'to_csr', 'fit', 'iloctest_index', 'to_sparse', 'to_csr', 'predict_proba', 'roc_auc_score', 'print', 'predict_proba', 'predict_proba', 'fit', 'predict_proba', 'roc_auc_score', 'print', 'predict_proba', 'predict_proba', 'print', 'DataFrame', 'VotingClassifier', 'zeros', 'split', 'print', 'fit', 'print', 'predict_proba', 'roc_auc_score', 'print', 'print', 'predict_proba', 'fit', 'predict_proba', 'roc_auc_score', 'print', 'predict_proba', 'collect', 'print', 'DataFrame', 'DataFrame', 'datetime', 'strftime', 'to_csv']","['clock', 'memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'astype', 'collect', 'finfo', 'merge', 'fillna', 'read_csv', 'compute', 'drop', 'StratifiedKFold', 'XGBClassifier', 'LGBMClassifier', 'csr_matrix', 'tocsr', 'DataFrame', 'list', 'zeros', 'split', 'iloctrain_index', 'to_sparse', 'to_csr', 'fit', 'iloctest_index', 'predict_proba', 'roc_auc_score', 'VotingClassifier', 'datetime', 'strftime', 'to_csv']",36,"['numpy', 'pandas', 'os\n', 'time\n', 'sklearn', 'gc\n', 'dask', 'RepeatedKFold\n', 'RepeatedStratifiedKFold\n', 'xgboost', 'lightgbm', 'scipy', 'datetime\n']",13,"[1 1 1 1 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]",349,0.78966,None,0,
cse445.py,NA,0,['NA'],['NA'],1,"['os\n', 'gc\n', 'numpy', 'pandas', 'scipy', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n', 'xgboost', 'lightgbm']",11,"[1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1043,0.78968,None,0,
good-transformations-to-continuous-variables.r,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",345,0.79,Silver,27,
soumission-rc.py,"time.time,time.time,time.time,time.time,ftime.append,print,print,pd.read_csv,None.sort_values,list,print,list,pd.concat,list,pd.DataFrame,timer,set_groups,len,sorted,len,enumerate,datafkeydatafkeyvalmax.index.tolist,len,datafcontinuous.locindminindmax.groupby,None.agg,len,datafdichot.locindminindmax.groupby,None.agg,pd.DataFrame,pd.MultiIndex,list,pd.concat,pd.concat,timer,set,len,pd.DataFrame,pd.get_dummies,str,str,var.columns.tolist,dataf.dtypes.tolist,None.tolist,dataf.dtypes.tolist,None.tolist,len,continuous.append,set,len,continuous.append,set,datafi.count,dichot.append,discrete.append,timer,len,datafdiscrete.fillna,timer,pd.concat,list,len,pd.concat,list,list,set_groups,fill_values,dataf.columns.tolist,range,str,agregate,dataf.index.tolist,list,timer,process,gc.collect,timer,print,datai.merge,timer,print,gc.collect,list,set_groups,fill_values,gc.collect,gc.collect,print,data.count,data.count,None.index.tolist,data.mean,data.std,list,train_test_split,gc.collect,list,gc.collect,timer,pd.concat,pd.concat,gc.collect,timer,np.copy,LGBMClassifier,clf.fit,timer,pd.Series,pd.concat,submission.to_csv",109,"['time', 'time', 'time', 'time', 'append', 'print', 'print', 'read_csv', 'sort_values', 'list', 'print', 'list', 'concat', 'list', 'DataFrame', 'timer', 'set_groups', 'len', 'sorted', 'len', 'enumerate', 'index', 'len', 'locindminindmax', 'agg', 'len', 'locindminindmax', 'agg', 'DataFrame', 'MultiIndex', 'list', 'concat', 'concat', 'timer', 'set', 'len', 'DataFrame', 'get_dummies', 'str', 'str', 'columns', 'dtypes', 'tolist', 'dtypes', 'tolist', 'len', 'append', 'set', 'len', 'append', 'set', 'count', 'append', 'append', 'timer', 'len', 'fillna', 'timer', 'concat', 'list', 'len', 'concat', 'list', 'list', 'set_groups', 'fill_values', 'columns', 'range', 'str', 'agregate', 'index', 'list', 'timer', 'process', 'collect', 'timer', 'print', 'merge', 'timer', 'print', 'collect', 'list', 'set_groups', 'fill_values', 'collect', 'collect', 'print', 'count', 'count', 'index', 'mean', 'std', 'list', 'train_test_split', 'collect', 'list', 'collect', 'timer', 'concat', 'concat', 'collect', 'timer', 'copy', 'LGBMClassifier', 'fit', 'timer', 'Series', 'concat', 'to_csv']","['time', 'append', 'print', 'read_csv', 'sort_values', 'list', 'concat', 'DataFrame', 'timer', 'set_groups', 'len', 'sorted', 'enumerate', 'index', 'locindminindmax', 'agg', 'MultiIndex', 'set', 'get_dummies', 'str', 'columns', 'dtypes', 'tolist', 'count', 'fillna', 'fill_values', 'range', 'agregate', 'process', 'collect', 'merge', 'mean', 'std', 'train_test_split', 'copy', 'LGBMClassifier', 'fit', 'Series', 'to_csv']",39,"['time\n', 'numpy', 'pandas', 'os\n', 'matplotlib', 'collections\n', 'gc\n', 'sklearn', 'random\n', 'contextlib', 'lightgbm', 'seaborn', 'warnings\n']",13,"[1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",457,0.79002,None,3,
simple-features.py,"pd.read_csv,pd.read_csv,pd.read_csv,app_train.drop,train_test_split,LGBMClassifier,clf.fit,clf.predict_proba,submit.to_csv",9,"['read_csv', 'read_csv', 'read_csv', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']","['read_csv', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",7,"['numpy', 'pandas', 'os\n', 'sklearn', 'lightgbm', 'roc_auc_score\n']",6,"[1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",80,0.7903,None,0,
project-of-datascience-homecreditdefaultrisk.py,"sns.color_palette,py.init_notebook_mode,init_notebook_mode,offline.init_notebook_mode,cf.go_offline,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,application_train.head,POS_CASH_balance.head,bureau_balance.head,previous_application.head,installments_payments.head,credit_card_balance.head,bureau.head,application_train.isnull,None.mean,None.sort_values,POS_CASH_balance.isnull,None.mean,None.sort_values,bureau_balance.isnull,None.mean,None.sort_values,previous_application.isnull,None.mean,None.sort_values,installments_payments.isnull,None.mean,None.sort_values,credit_card_balance.isnull,None.mean,None.sort_values,bureau.isnull,None.mean,None.sort_values,plt.figure,plt.title,sns.distplot,plt.show,plt.figure,plt.title,sns.distplot,plt.show,plt.figure,plt.title,sns.distplot,plt.show,pd.DataFrame,temp.iplot,application_train.value_counts,temp.iplot,application_train.value_counts,temp.iplot,previous_application.value_counts,iplot,pd.DataFrame,temp.iplot,pd.DataFrame,temp.iplot,application_train.drop,None.corr,sns.heatmap,plt.show,LabelEncoder,LE.fit,LE.transform,LE.transform,application_train.head,application_train.fillna,application_train.drop,XGBClassifier,xgb.fit,plot_importance,plt.show,application_train.append,None.reset_index,df.replace,previous_application.replace,previous_application.replace,previous_application.replace,previous_application.replace,previous_application.replace,installments_payments.apply,installments_payments.apply,bureau_balance.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,gc.collect,pd.merge,gc.collect,LabelEncoder,LE.fit_transform,previous_application.groupby,None.agg,pd.Index,gc.collect,pd.merge,gc.collect,LabelEncoder,LE.fit_transform,POS_CASH_balance.groupby,None.agg,pd.Index,POS_CASH_balance.groupby,None.size,gc.collect,pd.merge,gc.collect,LabelEncoder,LE.fit_transform,installments_payments.groupby,None.agg,pd.Index,installments_payments.groupby,None.size,gc.collect,pd.merge,gc.collect,LabelEncoder,LE.fit_transform,credit_card_balance.drop,credit_card_balance.groupby,None.agg,pd.Index,credit_card_balance.groupby,None.size,pd.merge,gc.collect,len,len,gc.collect,StratifiedKFold,np.zeros,enumerate,LGBMClassifier,lgb.fit,lgb.predict_proba,gc.collect,df_test.to_csv",151,"['color_palette', 'init_notebook_mode', 'init_notebook_mode', 'init_notebook_mode', 'go_offline', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'head', 'head', 'head', 'head', 'head', 'head', 'head', 'isnull', 'mean', 'sort_values', 'isnull', 'mean', 'sort_values', 'isnull', 'mean', 'sort_values', 'isnull', 'mean', 'sort_values', 'isnull', 'mean', 'sort_values', 'isnull', 'mean', 'sort_values', 'isnull', 'mean', 'sort_values', 'figure', 'title', 'distplot', 'show', 'figure', 'title', 'distplot', 'show', 'figure', 'title', 'distplot', 'show', 'DataFrame', 'iplot', 'value_counts', 'iplot', 'value_counts', 'iplot', 'value_counts', 'iplot', 'DataFrame', 'iplot', 'DataFrame', 'iplot', 'drop', 'corr', 'heatmap', 'show', 'LabelEncoder', 'fit', 'transform', 'transform', 'head', 'fillna', 'drop', 'XGBClassifier', 'fit', 'plot_importance', 'show', 'append', 'reset_index', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'apply', 'apply', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'collect', 'merge', 'collect', 'LabelEncoder', 'fit_transform', 'groupby', 'agg', 'Index', 'collect', 'merge', 'collect', 'LabelEncoder', 'fit_transform', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'merge', 'collect', 'LabelEncoder', 'fit_transform', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'merge', 'collect', 'LabelEncoder', 'fit_transform', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'merge', 'collect', 'len', 'len', 'collect', 'StratifiedKFold', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'collect', 'to_csv']","['color_palette', 'init_notebook_mode', 'go_offline', 'read_csv', 'head', 'isnull', 'mean', 'sort_values', 'figure', 'title', 'distplot', 'show', 'DataFrame', 'iplot', 'value_counts', 'drop', 'corr', 'heatmap', 'LabelEncoder', 'fit', 'transform', 'fillna', 'XGBClassifier', 'plot_importance', 'append', 'reset_index', 'replace', 'apply', 'groupby', 'agg', 'Index', 'join', 'collect', 'merge', 'fit_transform', 'size', 'len', 'StratifiedKFold', 'zeros', 'enumerate', 'LGBMClassifier', 'predict_proba', 'to_csv']",43,"['pandas', 'numpy', 'matplotlib\n', 'matplotlib', 'seaborn', 'plotly', 'cufflinks', 'os\n', 'gc\n', 'sklearn', 'xgboost', 'lightgbm']",12,"[1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",498,0.79052,None,2,
lgbm-credit-default-prediction.py,"gc.enable,pd.read_csv,pd.read_csv,train_data.count,None.sort_values,len,test_data.count,None.sort_values,len,set,set,train_data.dropna,train_data.drop,train_data.append,application_data.count,None.sort_values,len,application_data.count,None.sort_values,len,list,LabelEncoder,application_data.select_dtypes,len,le.fit,le.transform,pd.get_dummies,application_data.count,None.sort_values,len,application_dataapplication_data.IS_TRAIN.merge,train_data.corr,corrs.abs,None.sort_values,None.tail,pd.read_csv,application_data.AMT_REQ_CREDIT_BUREAU_WEEK.isnull,application_data.SK_ID_CURR.isin,application_data.SK_ID_CURR.isin,application_data.count,None.sort_values,len,application_data.OBS_30_CNT_SOCIAL_CIRCLE.isnull,pd.read_csv,bureau.SK_ID_CURR.isin,bureau_balance.SK_ID_BUREAU.isin,pd.get_dummies,bureau_balance.sort_values,bureau_balance.groupby,None.size,None.to_frame,temp.rename,temp.reset_index,bureau_balance.groupby,None.agg,bureau_balance.columns.map,bureau_balance.reset_index,bureau_balance.merge,bureau_balance.columns.map,bureau.merge,bureau.drop,bureau.sort_values,pd.get_dummies,bureau.groupby,None.size,None.to_frame,temp.rename,temp.reset_index,bureau.groupby,None.agg,bureau.columns.map,bureau.reset_index,bureau.merge,bureau.columns.map,application_data.merge,pd.read_csv,prev_application.SK_ID_CURR.isin,pd.get_dummies,prev_application.drop,prev_application.sort_values,prev_application.groupby,None.size,None.to_frame,temp.rename,temp.reset_index,prev_application.groupby,None.agg,prev_application.columns.map,prev_application.reset_index,prev_application.merge,prev_application.columns.map,application_data.merge,pd.read_csv,pos_cash_balance.sort_values,pos_cash_balance.groupby,None.size,None.to_frame,temp.rename,temp.reset_index,pd.get_dummies,pos_cash_balance.groupby,None.agg,pos_cash_balance.columns.map,pos_cash_balance.reset_index,pos_cash_balance.merge,pos_cash_balance.drop,pos_cash_balance.groupby,None.size,None.to_frame,temp.rename,temp.reset_index,pos_cash_balance.groupby,None.agg,pos_cash_balance.columns.map,pos_cash_balance.reset_index,pos_cash_balance.merge,pos_cash_balance.columns.map,application_data.merge,pd.read_csv,pd.get_dummies,credit_card_balance.sort_values,credit_card_balance.groupby,None.size,None.to_frame,temp.rename,temp.reset_index,credit_card_balance.groupby,None.agg,credit_card_balance.columns.map,credit_card_balance.reset_index,credit_card_balance.merge,credit_card_balance.drop,credit_card_balance.groupby,None.agg,credit_card_balance.columns.map,credit_card_balance.reset_index,credit_card_balance.columns.map,application_data.merge,pd.read_csv,installments_payments.sort_values,installments_payments.groupby,None.size,None.to_frame,temp.rename,temp.reset_index,installments_payments.fillna,installments_payments.groupby,None.agg,installments_payments.columns.map,installments_payments.reset_index,installments_payments.merge,installments_payments.drop,installments_payments.groupby,None.agg,installments_payments.columns.map,installments_payments.reset_index,installments_payments.columns.map,application_data.merge,len,application_data.drop,.join,lgb.LGBMClassifier,train_data.drop,test_data.drop,model.get_params,StratifiedKFold,np.zeros,tqdm,lgb.Dataset,lgb.Dataset,lgb.train,model.feature_importance,pd.DataFrame,fi.sort_values,fi.head,list,len,random.randint,random.randint,random.choice,random.randint,random.choice,random.choice,random.choice,random.randint,random.randint,lgb.Dataset,tqdm,get_random_params,time.time,print,lgb.cv,time.time,print,StratifiedKFold,np.zeros,tqdm,print,lgb.Dataset,lgb.Dataset,lgb.train,model.predict,model.predict,roc_auc_score,submit.to_csv",205,"['enable', 'read_csv', 'read_csv', 'count', 'sort_values', 'len', 'count', 'sort_values', 'len', 'set', 'set', 'dropna', 'drop', 'append', 'count', 'sort_values', 'len', 'count', 'sort_values', 'len', 'list', 'LabelEncoder', 'select_dtypes', 'len', 'fit', 'transform', 'get_dummies', 'count', 'sort_values', 'len', 'IS_TRAIN', 'corr', 'abs', 'sort_values', 'tail', 'read_csv', 'AMT_REQ_CREDIT_BUREAU_WEEK', 'SK_ID_CURR', 'SK_ID_CURR', 'count', 'sort_values', 'len', 'OBS_30_CNT_SOCIAL_CIRCLE', 'read_csv', 'SK_ID_CURR', 'SK_ID_BUREAU', 'get_dummies', 'sort_values', 'groupby', 'size', 'to_frame', 'rename', 'reset_index', 'groupby', 'agg', 'columns', 'reset_index', 'merge', 'columns', 'merge', 'drop', 'sort_values', 'get_dummies', 'groupby', 'size', 'to_frame', 'rename', 'reset_index', 'groupby', 'agg', 'columns', 'reset_index', 'merge', 'columns', 'merge', 'read_csv', 'SK_ID_CURR', 'get_dummies', 'drop', 'sort_values', 'groupby', 'size', 'to_frame', 'rename', 'reset_index', 'groupby', 'agg', 'columns', 'reset_index', 'merge', 'columns', 'merge', 'read_csv', 'sort_values', 'groupby', 'size', 'to_frame', 'rename', 'reset_index', 'get_dummies', 'groupby', 'agg', 'columns', 'reset_index', 'merge', 'drop', 'groupby', 'size', 'to_frame', 'rename', 'reset_index', 'groupby', 'agg', 'columns', 'reset_index', 'merge', 'columns', 'merge', 'read_csv', 'get_dummies', 'sort_values', 'groupby', 'size', 'to_frame', 'rename', 'reset_index', 'groupby', 'agg', 'columns', 'reset_index', 'merge', 'drop', 'groupby', 'agg', 'columns', 'reset_index', 'columns', 'merge', 'read_csv', 'sort_values', 'groupby', 'size', 'to_frame', 'rename', 'reset_index', 'fillna', 'groupby', 'agg', 'columns', 'reset_index', 'merge', 'drop', 'groupby', 'agg', 'columns', 'reset_index', 'columns', 'merge', 'len', 'drop', 'join', 'LGBMClassifier', 'drop', 'drop', 'get_params', 'StratifiedKFold', 'zeros', 'tqdm', 'Dataset', 'Dataset', 'train', 'feature_importance', 'DataFrame', 'sort_values', 'head', 'list', 'len', 'randint', 'randint', 'choice', 'randint', 'choice', 'choice', 'choice', 'randint', 'randint', 'Dataset', 'tqdm', 'get_random_params', 'time', 'print', 'cv', 'time', 'print', 'StratifiedKFold', 'zeros', 'tqdm', 'print', 'Dataset', 'Dataset', 'train', 'predict', 'predict', 'roc_auc_score', 'to_csv']","['enable', 'read_csv', 'count', 'sort_values', 'len', 'set', 'dropna', 'drop', 'append', 'list', 'LabelEncoder', 'select_dtypes', 'fit', 'transform', 'get_dummies', 'IS_TRAIN', 'corr', 'abs', 'tail', 'AMT_REQ_CREDIT_BUREAU_WEEK', 'SK_ID_CURR', 'OBS_30_CNT_SOCIAL_CIRCLE', 'SK_ID_BUREAU', 'groupby', 'size', 'to_frame', 'rename', 'reset_index', 'agg', 'columns', 'merge', 'fillna', 'join', 'LGBMClassifier', 'get_params', 'StratifiedKFold', 'zeros', 'tqdm', 'Dataset', 'train', 'feature_importance', 'DataFrame', 'head', 'randint', 'choice', 'get_random_params', 'time', 'print', 'cv', 'predict', 'roc_auc_score', 'to_csv']",52,"['numpy', 'pandas', 'tqdm', 'random\n', 'gc\n', 'time\n', 'sklearn', 'lightgbm']",8,"[1 1 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1110,0.79059,None,2,
lightgbm_with_simple_features.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,pd.factorize,one_hot_encoder,df.replace,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",146,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'collect', 'groupby', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",49,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",358,0.7907,Gold,610,
good_fun.py,"gc.enable,pd.set_option,pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,buro_full.groupby,None.sum,avg_buro.merge,print,buro_full.groupby,None.std,avg_buro.merge,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,prev.groupby,None.sum,avg_prev.merge,print,prev.groupby,None.std,avg_prev.merge,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,print,pos.groupby,None.sum,avg_pos.merge,print,pos.groupby,None.std,avg_pos.merge,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,print,cc_bal.groupby,None.sum,avg_cc_bal.merge,print,cc_bal.groupby,None.std,avg_cc_bal.merge,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,print,inst.groupby,None.mean,print,inst.groupby,None.sum,avg_inst.merge,print,inst.groupby,None.std,avg_inst.merge,gc.collect,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,gc.collect,print,pd.read_csv,data.merge,test.merge,gc.collect,print,pd.read_csv,data.merge,test.merge,gc.collect,gc.enable,StratifiedKFold,np.zeros,np.zeros,pd.DataFrame,print,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,np.concatenate,pd.concat,print,gc.collect,print,test.to_csv,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,plt.figure,enumerate,roc_curve,roc_auc_score,scores.append,plt.plot,plt.plot,roc_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig,plt.figure,precision_recall_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig",207,"['enable', 'set_option', 'read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'print', 'read_csv', 'merge', 'merge', 'collect', 'print', 'read_csv', 'merge', 'merge', 'collect', 'enable', 'StratifiedKFold', 'zeros', 'zeros', 'DataFrame', 'print', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concatenate', 'concat', 'print', 'collect', 'print', 'to_csv', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'figure', 'enumerate', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'plot', 'roc_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig', 'figure', 'precision_recall_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig']","['enable', 'set_option', 'read_csv', 'print', 'concat', 'drop', 'groupby', 'count', 'map', 'mean', 'collect', 'get_dummies', 'merge', 'sum', 'std', 'DataFrame', 'factorize', 'get_indexer', 'StratifiedKFold', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concatenate', 'to_csv', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'legend', 'precision_recall_curve']",43,"['pandas', 'numpy', 'sklearn', 'matplotlib', 'seaborn', 'gc\n', 'lightgbm']",7,"[1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",380,0.791,None,1,
model-tuning-results-random-vs-bayesian-opt.py,"plt.style.use,get_ipython,None.run_line_magic,pd.read_csv,None.sort_values,None.reset_index,pd.read_csv,None.sort_values,None.reset_index,print,print,ast.literal_eval,None.items,print,keys.append,print,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,scores.append,scores.head,plt.figure,plt.subplot,plt.hist,plt.xlim,plt.xlabel,plt.ylabel,plt.title,plt.subplot,plt.hist,plt.xlim,plt.xlabel,plt.ylabel,plt.title,scores.groupby,None.agg,sns.lmplot,plt.scatter,plt.scatter,plt.xlabel,plt.ylabel,plt.title,np.polyfit,print,np.polyfit,print,print,print,results.copy,results.map,results.sort_values,None.reset_index,pd.DataFrame,enumerate,hyp_df.append,process,process,random_hyp.head,list,list,list,list,list,list,list,list,plt.figure,sns.kdeplot,sns.kdeplot,sns.kdeplot,plt.vlines,plt.vlines,plt.legend,plt.xlabel,plt.ylabel,plt.title,print,print,plt.figure,sns.kdeplot,sns.kdeplot,sns.kdeplot,plt.vlines,plt.vlines,plt.legend,plt.xlabel,plt.ylabel,plt.title,print,print,plt.show,plot_hyp_dist,plot_hyp_dist,plot_hyp_dist,plot_hyp_dist,plot_hyp_dist,plot_hyp_dist,random_hyp.groupby,None.agg,opt_hyp.groupby,None.agg,plt.figure,plt.subplot,random_hyp.groupby,None.agg,None.plot.bar,plt.ylabel,plt.title,plt.subplot,opt_hyp.groupby,None.agg,None.plot.bar,plt.ylabel,plt.title,plt.figure,sns.kdeplot,sns.kdeplot,sns.kdeplot,plt.vlines,plt.vlines,plt.legend,plt.xlabel,plt.ylabel,plt.title,print,print,random_hyp.groupby,None.agg,opt_hyp.groupby,None.agg,plt.subplots,enumerate,opt_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,enumerate,opt_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,random_hyp.append,hyp.head,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,opt_hyphyper.astype,sns.regplot,axsi.scatter,plt.legend,plt.tight_layout,plt.subplots,enumerate,random_hyphyper.astype,sns.regplot,axsi.scatter,axsi.set,opt_hyphyper.astype,sns.regplot,axsi.scatter,plt.legend,plt.tight_layout,plt.figure,fig.add_subplot,ax.scatter,ax.set_xlabel,ax.set_ylabel,ax.set_zlabel,plt.title,plt.figure,fig.add_subplot,ax.scatter,ax.set_xlabel,ax.set_ylabel,ax.set_zlabel,plt.title,plt.figure,plt.plot,plt.xlabel,plt.ylabel,plt.title,plt.figure,fig.add_subplot,ax.scatter,ax.set_xlabel,ax.set_ylabel,ax.set_zlabel,plt.title,plot_3d,plt.figure,plt.plot,plt.xlabel,plt.ylabel,plt.title,plot_3d,random_hyp.astype,random_hyp.corr,random_hyprandom_hyp.corr,opt_hyp.astype,opt_hyp.corr,opt_hypopt_hyp.corr,plt.figure,sns.heatmap,plt.title,plt.figure,sns.heatmap,plt.title,hyp.drop,hyp.astype,hyp.astype,hyp.astype,hyp.astype,pd.get_dummies,hyp.pop,np.array,LinearRegression,lr.fit,list,zip,pd.read_csv,print,pd.read_csv,print,np.array,None.reshape,train.drop,list,test.drop,list,ast.literal_eval,lgb.LGBMClassifier,rmodel.fit,rmodel.predict_proba,pd.DataFrame,rsub.to_csv,ast.literal_eval,lgb.LGBMClassifier,bmodel.fit,bmodel.predict_proba,pd.DataFrame,bsub.to_csv,pd.DataFrame,pd.DataFrame,df.sort_values,None.reset_index,df.sum,np.cumsum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plot_feature_importances,norm_randomfi.head,plot_feature_importances,norm_bayesfi.head",268,"['style', 'get_ipython', 'run_line_magic', 'read_csv', 'sort_values', 'reset_index', 'read_csv', 'sort_values', 'reset_index', 'print', 'print', 'literal_eval', 'items', 'print', 'append', 'print', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'append', 'head', 'figure', 'subplot', 'hist', 'xlim', 'xlabel', 'ylabel', 'title', 'subplot', 'hist', 'xlim', 'xlabel', 'ylabel', 'title', 'groupby', 'agg', 'lmplot', 'scatter', 'scatter', 'xlabel', 'ylabel', 'title', 'polyfit', 'print', 'polyfit', 'print', 'print', 'print', 'copy', 'map', 'sort_values', 'reset_index', 'DataFrame', 'enumerate', 'append', 'process', 'process', 'head', 'list', 'list', 'list', 'list', 'list', 'list', 'list', 'list', 'figure', 'kdeplot', 'kdeplot', 'kdeplot', 'vlines', 'vlines', 'legend', 'xlabel', 'ylabel', 'title', 'print', 'print', 'figure', 'kdeplot', 'kdeplot', 'kdeplot', 'vlines', 'vlines', 'legend', 'xlabel', 'ylabel', 'title', 'print', 'print', 'show', 'plot_hyp_dist', 'plot_hyp_dist', 'plot_hyp_dist', 'plot_hyp_dist', 'plot_hyp_dist', 'plot_hyp_dist', 'groupby', 'agg', 'groupby', 'agg', 'figure', 'subplot', 'groupby', 'agg', 'plot', 'ylabel', 'title', 'subplot', 'groupby', 'agg', 'plot', 'ylabel', 'title', 'figure', 'kdeplot', 'kdeplot', 'kdeplot', 'vlines', 'vlines', 'legend', 'xlabel', 'ylabel', 'title', 'print', 'print', 'groupby', 'agg', 'groupby', 'agg', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'tight_layout', 'append', 'head', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'astype', 'regplot', 'scatter', 'legend', 'tight_layout', 'subplots', 'enumerate', 'astype', 'regplot', 'scatter', 'set', 'astype', 'regplot', 'scatter', 'legend', 'tight_layout', 'figure', 'add_subplot', 'scatter', 'set_xlabel', 'set_ylabel', 'set_zlabel', 'title', 'figure', 'add_subplot', 'scatter', 'set_xlabel', 'set_ylabel', 'set_zlabel', 'title', 'figure', 'plot', 'xlabel', 'ylabel', 'title', 'figure', 'add_subplot', 'scatter', 'set_xlabel', 'set_ylabel', 'set_zlabel', 'title', 'plot_3d', 'figure', 'plot', 'xlabel', 'ylabel', 'title', 'plot_3d', 'astype', 'corr', 'corr', 'astype', 'corr', 'corr', 'figure', 'heatmap', 'title', 'figure', 'heatmap', 'title', 'drop', 'astype', 'astype', 'astype', 'astype', 'get_dummies', 'pop', 'array', 'LinearRegression', 'fit', 'list', 'zip', 'read_csv', 'print', 'read_csv', 'print', 'array', 'reshape', 'drop', 'list', 'drop', 'list', 'literal_eval', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'literal_eval', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'DataFrame', 'DataFrame', 'sort_values', 'reset_index', 'sum', 'cumsum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'head', 'plot_feature_importances', 'head']","['style', 'get_ipython', 'run_line_magic', 'read_csv', 'sort_values', 'reset_index', 'print', 'literal_eval', 'items', 'append', 'figure', 'kdeplot', 'xlabel', 'ylabel', 'title', 'head', 'subplot', 'hist', 'xlim', 'groupby', 'agg', 'lmplot', 'scatter', 'polyfit', 'copy', 'map', 'DataFrame', 'enumerate', 'process', 'list', 'vlines', 'legend', 'show', 'plot_hyp_dist', 'plot', 'subplots', 'astype', 'regplot', 'set', 'tight_layout', 'add_subplot', 'set_xlabel', 'set_ylabel', 'set_zlabel', 'plot_3d', 'corr', 'heatmap', 'drop', 'get_dummies', 'pop', 'array', 'LinearRegression', 'fit', 'zip', 'reshape', 'LGBMClassifier', 'predict_proba', 'to_csv', 'sum', 'cumsum', 'barh', 'set_yticks', 'set_yticklabels', 'plot_feature_importances']",64,"['pandas', 'numpy', 'matplotlib', 'seaborn', 'pprint\n', 'ast\n', '`Axes3D`', 'mpl_toolkits', 'sklearn', 'lightgbm']",10,"[1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]",1077,0.791,Silver,111,
homecredit-auc190927.py,"warnings.simplefilter,os.walk,print,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.apply,pd.factorize,one_hot_encoder,df.replace,df.abs,df.abs,df.rename,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",152,"['simplefilter', 'walk', 'print', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'apply', 'factorize', 'one_hot_encoder', 'replace', 'abs', 'abs', 'rename', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'walk', 'print', 'time', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'apply', 'factorize', 'one_hot_encoder', 'replace', 'abs', 'rename', 'collect', 'groupby', 'agg', 'Index', 'join', 'drop', 'size', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",52,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n', 'os\n']",11,"[1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",376,0.79102,None,0,
fork-of-simple-features-0064d3.py,"pd.read_csv,pd.read_csv,pd.read_csv,app_train.drop,train_test_split,LGBMClassifier,clf.fit,clf.predict_proba,submit.to_csv",9,"['read_csv', 'read_csv', 'read_csv', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']","['read_csv', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",7,"['numpy', 'pandas', 'os\n', 'sklearn', 'lightgbm', 'roc_auc_score\n']",6,"[1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",82,0.79123,None,0,
home-credit-default-risk-project-with-lightgbm.py,"warnings.simplefilter,df.memory_usage,None.sum,dfcol.min,dfcol.max,str,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.iinfo,np.iinfo,np.iinfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,np.finfo,np.finfo,np.finfo,dfcol.astype,dfcol.astype,df.memory_usage,None.sum,print,print,time.time,print,list,pd.get_dummies,LabelEncoder,len,le.fit,le.transform,print,pd.read_csv,pd.read_csv,df.append,None.reset_index,df.replace,pd.Series,df.mean,df.max,df.sum,label_encoder,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,pd.isnull,int,bureau_balance.apply,bureau_balance.astype,bureau_balance.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.drop,bureau.astype,bureau.astype,bureau.astype,bureau.astype,bureau.isin,None.astype,bureau.astype,bureau.drop,pd.qcut,one_hot_encoder,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,df.replace,df.replace,df.replace,df.replace,df.replace,df.replace,df.replace,df.replace,df.replace,df.replace,df.replace,df.replace,df.replace,df.drop,df.astype,list,pd.get_dummies,df.groupby,None.agg,pd.Index,pd.read_csv,df.replace,list,pd.get_dummies,df.groupby,None.agg,pd.Index,pos_agg.groupby,None.agg,pd.Index,gc.collect,pd.read_csv,df.apply,df.groupby,None.transform,df.astype,list,pd.get_dummies,df.groupby,None.agg,pd.Index,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,None.reset_index,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.rename,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",211,"['simplefilter', 'memory_usage', 'sum', 'min', 'max', 'str', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'astype', 'memory_usage', 'sum', 'print', 'print', 'time', 'print', 'list', 'get_dummies', 'LabelEncoder', 'len', 'fit', 'transform', 'print', 'read_csv', 'read_csv', 'append', 'reset_index', 'replace', 'Series', 'mean', 'max', 'sum', 'label_encoder', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'isnull', 'int', 'apply', 'astype', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'drop', 'astype', 'astype', 'astype', 'astype', 'isin', 'astype', 'astype', 'drop', 'qcut', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'drop', 'astype', 'list', 'get_dummies', 'groupby', 'agg', 'Index', 'read_csv', 'replace', 'list', 'get_dummies', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'collect', 'read_csv', 'apply', 'groupby', 'transform', 'astype', 'list', 'get_dummies', 'groupby', 'agg', 'Index', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'reset_index', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'rename', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'memory_usage', 'sum', 'min', 'max', 'str', 'iinfo', 'astype', 'finfo', 'print', 'time', 'list', 'get_dummies', 'LabelEncoder', 'len', 'fit', 'transform', 'read_csv', 'append', 'reset_index', 'replace', 'Series', 'mean', 'label_encoder', 'one_hot_encoder', 'collect', 'isnull', 'int', 'apply', 'groupby', 'agg', 'Index', 'join', 'drop', 'isin', 'qcut', 'size', 'rename', 'notnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",65,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n', 're\n']",11,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",762,0.79124,None,4,
baseline_lgbm_in_r.R,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",220,0.79161,Bronze,10,
automated-model-tuning.py,"get_ipython,None.run_line_magic,pd.read_csv,features.sample,features.select_dtypes,np.array,None.reshape,features.drop,train_test_split,print,print,train_features.head,lgb.LGBMClassifier,lgb.Dataset,lgb.Dataset,model.get_params,lgb.cv,print,print,len,model.fit,model.predict_proba,roc_auc_score,print,hyperparameters.get,int,timer,lgb.cv,timer,len,open,csv.writer,writer.writerow,of_connection.close,hp.loguniform,range,learning_rate_dist.append,plt.figure,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,hp.quniform,range,num_leaves_dist.append,plt.figure,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,hp.choice,sample,hyperparams.get,hp.choice,hp.quniform,hp.loguniform,hp.quniform,hp.quniform,hp.uniform,hp.uniform,hp.uniform,hp.choice,sample,x.get,sample,x.get,open,csv.writer,writer.writerow,of_connection.close,objective,print,print,Trials,open,csv.writer,writer.writerow,of_connection.close,fmin,sorted,pd.read_csv,results.copy,new_results.map,new_results.sort_values,None.reset_index,print,lgb.LGBMClassifier,model.fit,model.predict_proba,print,pd.DataFrame,enumerate,hyp_df.append,evaluate,fmin,open,f.write,pd.read_csv,None.sort_values,None.reset_index,pd.read_csv,None.sort_values,None.reset_index,evaluate,evaluate,pd.DataFrame,scores.append,scores.astype,scores.astype,scores.head,random_params.idxmax,None.copy,bayes_params.idxmax,None.copy,sns.lmplot,plt.scatter,plt.scatter,plt.xlabel,plt.ylabel,plt.title,alt.renderers.enable,alt.Chart,None.mark_circle,None.encode,plt.figure,sns.kdeplot,sns.kdeplot,sns.kdeplot,plt.vlines,plt.legend,plt.xlabel,plt.ylabel,plt.title,enumerate,plt.figure,sns.kdeplot,sns.kdeplot,sns.kdeplot,plt.vlines,plt.legend,plt.title,plt.xlabel,plt.ylabel,plt.show,plt.subplots,enumerate,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,enumerate,sns.regplot,axsi.scatter,axsi.set,plt.tight_layout,plt.subplots,random_params.value_counts,None.plot.bar,bayes_params.value_counts,None.plot.bar,alt.Chart,None.mark_bar,None.encode,bars.mark_text,None.encode,alt.Chart,None.mark_bar,None.encode,bars.mark_text,None.encode,pd.read_csv,pd.read_csv,np.array,None.reshape,train.drop,test.drop,print,print,random_results.map,bayes_results.map,lgb.Dataset,dict,lgb.cv,print,print,lgb.LGBMClassifier,model.fit,model.predict_proba,pd.DataFrame,submission.to_csv,dict,lgb.cv,print,print,lgb.LGBMClassifier,model.fit,model.predict_proba,pd.DataFrame,submission.to_csv",200,"['get_ipython', 'run_line_magic', 'read_csv', 'sample', 'select_dtypes', 'array', 'reshape', 'drop', 'train_test_split', 'print', 'print', 'head', 'LGBMClassifier', 'Dataset', 'Dataset', 'get_params', 'cv', 'print', 'print', 'len', 'fit', 'predict_proba', 'roc_auc_score', 'print', 'get', 'int', 'timer', 'cv', 'timer', 'len', 'open', 'writer', 'writerow', 'close', 'loguniform', 'range', 'append', 'figure', 'kdeplot', 'title', 'xlabel', 'ylabel', 'quniform', 'range', 'append', 'figure', 'kdeplot', 'title', 'xlabel', 'ylabel', 'choice', 'sample', 'get', 'choice', 'quniform', 'loguniform', 'quniform', 'quniform', 'uniform', 'uniform', 'uniform', 'choice', 'sample', 'get', 'sample', 'get', 'open', 'writer', 'writerow', 'close', 'objective', 'print', 'print', 'Trials', 'open', 'writer', 'writerow', 'close', 'fmin', 'sorted', 'read_csv', 'copy', 'map', 'sort_values', 'reset_index', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'print', 'DataFrame', 'enumerate', 'append', 'evaluate', 'fmin', 'open', 'write', 'read_csv', 'sort_values', 'reset_index', 'read_csv', 'sort_values', 'reset_index', 'evaluate', 'evaluate', 'DataFrame', 'append', 'astype', 'astype', 'head', 'idxmax', 'copy', 'idxmax', 'copy', 'lmplot', 'scatter', 'scatter', 'xlabel', 'ylabel', 'title', 'renderers', 'Chart', 'mark_circle', 'encode', 'figure', 'kdeplot', 'kdeplot', 'kdeplot', 'vlines', 'legend', 'xlabel', 'ylabel', 'title', 'enumerate', 'figure', 'kdeplot', 'kdeplot', 'kdeplot', 'vlines', 'legend', 'title', 'xlabel', 'ylabel', 'show', 'subplots', 'enumerate', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'enumerate', 'regplot', 'scatter', 'set', 'tight_layout', 'subplots', 'value_counts', 'plot', 'value_counts', 'plot', 'Chart', 'mark_bar', 'encode', 'mark_text', 'encode', 'Chart', 'mark_bar', 'encode', 'mark_text', 'encode', 'read_csv', 'read_csv', 'array', 'reshape', 'drop', 'drop', 'print', 'print', 'map', 'map', 'Dataset', 'dict', 'cv', 'print', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv', 'dict', 'cv', 'print', 'print', 'LGBMClassifier', 'fit', 'predict_proba', 'DataFrame', 'to_csv']","['get_ipython', 'run_line_magic', 'read_csv', 'sample', 'select_dtypes', 'array', 'reshape', 'drop', 'train_test_split', 'print', 'head', 'LGBMClassifier', 'Dataset', 'get_params', 'cv', 'len', 'fit', 'predict_proba', 'roc_auc_score', 'get', 'int', 'timer', 'open', 'writer', 'writerow', 'close', 'loguniform', 'range', 'append', 'figure', 'kdeplot', 'title', 'xlabel', 'ylabel', 'quniform', 'choice', 'uniform', 'objective', 'Trials', 'fmin', 'sorted', 'copy', 'map', 'sort_values', 'reset_index', 'DataFrame', 'enumerate', 'evaluate', 'write', 'astype', 'idxmax', 'lmplot', 'scatter', 'renderers', 'Chart', 'mark_circle', 'encode', 'vlines', 'legend', 'show', 'subplots', 'regplot', 'set', 'tight_layout', 'value_counts', 'plot', 'mark_bar', 'mark_text', 'dict', 'to_csv']",70,"['pandas', 'numpy', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'csv\n', 'hyperopt', 'timeit', 'ast\n', 'json\n', 'altair']",12,"[1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",943,0.792,Gold,313,
home-credit-nn-ae-lgb.py,NA,0,['NA'],['NA'],1,"['numpy', 'pandas', 'matplotlib', 'seaborn', 'imblearn', 'os\n', 'gc\n', 'functools', 'sklearn', 'keras', 'lightgbm']",11,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",741,0.792,None,1,
good_fun_opti_params_updatedjun4_prev_ratios.py,"gc.enable,pd.set_option,pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,buro_full.groupby,None.sum,avg_buro.merge,print,buro_full.groupby,None.std,avg_buro.merge,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,prev.groupby,None.sum,avg_prev.merge,print,prev.groupby,None.std,avg_prev.merge,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,print,pos.groupby,None.sum,avg_pos.merge,print,pos.groupby,None.std,avg_pos.merge,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,print,cc_bal.groupby,None.sum,avg_cc_bal.merge,print,cc_bal.groupby,None.std,avg_cc_bal.merge,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,print,inst.groupby,None.mean,print,inst.groupby,None.sum,avg_inst.merge,print,inst.groupby,None.std,avg_inst.merge,gc.collect,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,gc.collect,pd.read_csv,data.merge,test.merge,gc.collect,pd.read_csv,data.merge,test.merge,gc.collect,gc.enable,StratifiedKFold,np.zeros,np.zeros,pd.DataFrame,print,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,np.concatenate,pd.concat,print,gc.collect,print,test.to_csv,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,plt.figure,enumerate,roc_curve,roc_auc_score,scores.append,plt.plot,plt.plot,roc_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig,plt.figure,precision_recall_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig",205,"['enable', 'set_option', 'read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'read_csv', 'merge', 'merge', 'collect', 'read_csv', 'merge', 'merge', 'collect', 'enable', 'StratifiedKFold', 'zeros', 'zeros', 'DataFrame', 'print', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concatenate', 'concat', 'print', 'collect', 'print', 'to_csv', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'figure', 'enumerate', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'plot', 'roc_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig', 'figure', 'precision_recall_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig']","['enable', 'set_option', 'read_csv', 'print', 'concat', 'drop', 'groupby', 'count', 'map', 'mean', 'collect', 'get_dummies', 'merge', 'sum', 'std', 'DataFrame', 'factorize', 'get_indexer', 'StratifiedKFold', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concatenate', 'to_csv', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'legend', 'precision_recall_curve']",43,"['pandas', 'numpy', 'sklearn', 'matplotlib', 'seaborn', 'gc\n', 'lightgbm']",7,"[1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",410,0.79237,None,0,
fork_tidy_xgb_all_tables_lightgbm_0_792.R,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",187,0.793,Bronze,9,
hc-v500.py,"warnings.filterwarnings,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,previous.replace,previous.replace,previous.replace,previous.replace,previous.replace,previous.replace,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,.join,tmp_merge.fillna,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,.join,tmp_merge.fillna,.join,tmp_merge.fillna,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,.join,tmp_merge.fillna,.join,tmp_merge.fillna,previous.replace,previous.replace,previous.replace,previous.replace,previous.replace,previous.replace,train.replace,test.replace,range,df.replace,range,df.replace,range,df.replace,range,df.replace,df.replace,train.head,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previouspreviousprevious.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previouspreviousprevious.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,tmptmpi.groupby,None.count,None.reset_index,tmp_merge.merge,.join,previous.isnull,tmptmpi.groupby,None.count,None.reset_index,tmp_merge.merge,.join,previousprevious.groupby,None.agg,None.reset_index,tmp_merge.merge,previousprevious.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isnull,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,print,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,str,tmp_merge.fillna,df.sum,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,str,tmp_merge.fillna,df.sum,previouspreviousprevious.groupby,None.agg,None.reset_index,tmp_merge.merge,previouspreviousprevious.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureaubureau.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureaubureau.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureaubureaubureau.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureau.isin,None.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureau.isin,None.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureau.replace,bureaubureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isnull,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isnull,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isnull,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,tmp_merge.fillna,tmp_merge.fillna,tmp_merge.fillna,tmp_merge.fillna,bureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.fillna,bureau.groupby,None.agg,None.reset_index,tmp_merge.merge,pd.read_csv,install.groupby,None.agg,None.reset_index,tmp.merge,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,install.groupby,None.agg,None.reset_index,tmp.merge,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,install.groupby,None.agg,None.reset_index,tmp.merge,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,install.drop_duplicates,tmp.groupby,None.sum,None.reset_index,install.groupby,None.sum,None.reset_index,tmp.merge,payment_history.merge,install.groupby,None.mean,None.reset_index,payment_history.merge,payment_historypayment_history.groupby,None.agg,None.reset_index,tmp_merge.merge,payment_historypayment_history.groupby,None.agg,None.reset_index,tmp_merge.merge,install.groupby,None.agg,None.reset_index,tmp.merge,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,install.groupby,None.max,None.reset_index,payment_history.merge,payment_historypayment_history.groupby,install.groupby,None.max,None.reset_index,payment_history.merge,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,print,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,str,tmp_merge.fillna,range,print,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,str,tmp_merge.fillna,install.groupby,None.count,None.reset_index,install.merge,dup_install.reset_index,dup_install.groupby,None.agg,None.reset_index,tmp_merge.merge,dup_install.sort_values,pd.read_csv,credit.groupby,None.max,None.reset_index,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,credit.groupby,None.min,None.reset_index,credit.groupby,None.agg,None.reset_index,tmp_merge.merge,LabelEncoder,i.lower,le.fit_transform,i.lower,le.transform,df.replace,dfdoc.mean,df.replace,df.replace,df.replace,dfconnection.mean,df.mean,i.lower,i.lower,StratifiedKFold,kf.split,lgb.Dataset,lgb.Dataset,print,lgb.train,pd.DataFrame,lgb_model.predict,res.append,lgb_model.predict,pd.read_csv,sub.to_csv,pd.concat,res.to_csv,print,install.groupby,None.count,None.reset_index,install.merge,install.drop,tmp.sort_values,tmp.value_counts",573,"['filterwarnings', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'count', 'reset_index', 'merge', 'join', 'fillna', 'groupby', 'agg', 'reset_index', 'merge', 'join', 'fillna', 'join', 'fillna', 'groupby', 'agg', 'reset_index', 'merge', 'join', 'fillna', 'join', 'fillna', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'range', 'replace', 'range', 'replace', 'range', 'replace', 'range', 'replace', 'replace', 'head', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'count', 'reset_index', 'merge', 'join', 'isnull', 'groupby', 'count', 'reset_index', 'merge', 'join', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'count', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isnull', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'print', 'groupby', 'count', 'reset_index', 'merge', 'str', 'fillna', 'sum', 'groupby', 'count', 'reset_index', 'merge', 'str', 'fillna', 'sum', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'isin', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'isin', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'replace', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isnull', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isnull', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isnull', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'fillna', 'fillna', 'fillna', 'fillna', 'groupby', 'agg', 'reset_index', 'merge', 'fillna', 'groupby', 'agg', 'reset_index', 'merge', 'read_csv', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'drop_duplicates', 'groupby', 'sum', 'reset_index', 'groupby', 'sum', 'reset_index', 'merge', 'merge', 'groupby', 'mean', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'max', 'reset_index', 'merge', 'groupby', 'groupby', 'max', 'reset_index', 'merge', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'print', 'groupby', 'count', 'reset_index', 'merge', 'str', 'fillna', 'range', 'print', 'groupby', 'count', 'reset_index', 'merge', 'str', 'fillna', 'groupby', 'count', 'reset_index', 'merge', 'reset_index', 'groupby', 'agg', 'reset_index', 'merge', 'sort_values', 'read_csv', 'groupby', 'max', 'reset_index', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'min', 'reset_index', 'groupby', 'agg', 'reset_index', 'merge', 'LabelEncoder', 'lower', 'fit_transform', 'lower', 'transform', 'replace', 'mean', 'replace', 'replace', 'replace', 'mean', 'mean', 'lower', 'lower', 'StratifiedKFold', 'split', 'Dataset', 'Dataset', 'print', 'train', 'DataFrame', 'predict', 'append', 'predict', 'read_csv', 'to_csv', 'concat', 'to_csv', 'print', 'groupby', 'count', 'reset_index', 'merge', 'drop', 'sort_values', 'value_counts']","['filterwarnings', 'read_csv', 'replace', 'groupby', 'count', 'reset_index', 'merge', 'join', 'fillna', 'agg', 'range', 'head', 'isin', 'sort_values', 'nth', 'isnull', 'print', 'str', 'sum', 'drop_duplicates', 'mean', 'max', 'min', 'LabelEncoder', 'lower', 'fit_transform', 'transform', 'StratifiedKFold', 'split', 'Dataset', 'train', 'DataFrame', 'predict', 'append', 'to_csv', 'concat', 'drop', 'value_counts']",38,"['pandas', 'numpy', 'warnings\n', 'sklearn', 'os\n', 'gc\n', 'lightgbm']",7,"[1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1712,0.793,None,0,
xgb_simple_features.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,XGBClassifier,clf.fit,clf.predict_proba,clf.predict_proba,print,gc.collect,np.save,np.save,test_df.to_csv,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_xgb,timer,main",152,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'XGBClassifier', 'fit', 'predict_proba', 'predict_proba', 'print', 'collect', 'save', 'save', 'to_csv', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_xgb', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'XGBClassifier', 'fit', 'predict_proba', 'save', 'to_csv', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_xgb', 'main']",54,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'xgboost', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 0 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",359,0.793,Silver,40,
lgbm-with-bayesian-optimization.py,"pd.read_csv,pd.read_csv,pd.read_csv,app_train.drop,train_test_split,LGBMClassifier,clf.fit,clf.predict_proba,submit.to_csv",9,"['read_csv', 'read_csv', 'read_csv', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']","['read_csv', 'drop', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",7,"['numpy', 'pandas', 'os\n', 'sklearn', 'lightgbm', 'roc_auc_score\n']",6,"[1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",80,0.79317,None,0,
hc-v600.py,"warnings.filterwarnings,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,previous.replace,previous.replace,previous.replace,previous.replace,previous.replace,previous.replace,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,.join,tmp_merge.fillna,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,.join,tmp_merge.fillna,.join,tmp_merge.fillna,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,.join,tmp_merge.fillna,.join,tmp_merge.fillna,previous.replace,previous.replace,previous.replace,previous.replace,previous.replace,previous.replace,train.replace,test.replace,range,df.replace,range,df.replace,range,df.replace,range,df.replace,df.replace,train.head,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previouspreviousprevious.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previouspreviousprevious.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.isin,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,tmptmpi.groupby,None.count,None.reset_index,tmp_merge.merge,.join,previous.isnull,tmptmpi.groupby,None.count,None.reset_index,tmp_merge.merge,.join,previousprevious.groupby,None.agg,None.reset_index,tmp_merge.merge,previousprevious.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isin,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.isnull,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,print,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,str,tmp_merge.fillna,df.sum,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,str,tmp_merge.fillna,df.sum,previouspreviousprevious.groupby,None.agg,None.reset_index,tmp_merge.merge,previouspreviousprevious.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,previous.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureaubureau.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureaubureau.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureaubureaubureau.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureau.isin,None.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureau.isin,None.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,bureau.replace,bureaubureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isnull,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isnull,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isnull,None.sort_values,tmp.groupby,None.nth,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureaubureaubureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.replace,bureau.isin,None.groupby,None.agg,None.reset_index,tmp_merge.merge,tmp_merge.fillna,tmp_merge.fillna,tmp_merge.fillna,tmp_merge.fillna,bureau.groupby,None.agg,None.reset_index,tmp_merge.merge,bureau.fillna,bureau.groupby,None.agg,None.reset_index,tmp_merge.merge,pd.read_csv,install.groupby,None.agg,None.reset_index,tmp.merge,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,install.groupby,None.agg,None.reset_index,tmp.merge,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,install.groupby,None.agg,None.reset_index,tmp.merge,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,install.drop_duplicates,tmp.groupby,None.sum,None.reset_index,install.groupby,None.sum,None.reset_index,tmp.merge,payment_history.merge,install.groupby,None.mean,None.reset_index,payment_history.merge,payment_historypayment_history.groupby,None.agg,None.reset_index,tmp_merge.merge,payment_historypayment_history.groupby,None.agg,None.reset_index,tmp_merge.merge,install.groupby,None.agg,None.reset_index,tmp.merge,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,install.groupby,None.max,None.reset_index,payment_history.merge,payment_historypayment_history.groupby,install.groupby,None.max,None.reset_index,payment_history.merge,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,tmp_merge.fillna,print,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,str,tmp_merge.fillna,range,print,tmp.groupby,None.count,None.reset_index,tmp_merge.merge,str,tmp_merge.fillna,install.groupby,None.count,None.reset_index,install.merge,dup_install.reset_index,dup_install.groupby,None.agg,None.reset_index,tmp_merge.merge,dup_install.sort_values,pd.read_csv,credit.groupby,None.max,None.reset_index,tmp.groupby,None.agg,None.reset_index,tmp_merge.merge,credit.groupby,None.min,None.reset_index,credit.groupby,None.agg,None.reset_index,tmp_merge.merge,LabelEncoder,i.lower,le.fit_transform,i.lower,le.transform,df.replace,dfdoc.mean,df.replace,df.replace,df.replace,dfconnection.mean,df.mean,i.lower,i.lower,StratifiedKFold,kf.split,lgb.Dataset,lgb.Dataset,print,lgb.train,pd.DataFrame,lgb_model.predict,res.append,lgb_model.predict,pd.read_csv,sub.to_csv,pd.concat,res.to_csv,print,install.groupby,None.count,None.reset_index,install.merge,install.drop,tmp.sort_values,tmp.value_counts",573,"['filterwarnings', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'count', 'reset_index', 'merge', 'join', 'fillna', 'groupby', 'agg', 'reset_index', 'merge', 'join', 'fillna', 'join', 'fillna', 'groupby', 'agg', 'reset_index', 'merge', 'join', 'fillna', 'join', 'fillna', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'replace', 'range', 'replace', 'range', 'replace', 'range', 'replace', 'range', 'replace', 'replace', 'head', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'isin', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'count', 'reset_index', 'merge', 'join', 'isnull', 'groupby', 'count', 'reset_index', 'merge', 'join', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'count', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isnull', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'print', 'groupby', 'count', 'reset_index', 'merge', 'str', 'fillna', 'sum', 'groupby', 'count', 'reset_index', 'merge', 'str', 'fillna', 'sum', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'isin', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'isin', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'replace', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isnull', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isnull', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isnull', 'sort_values', 'groupby', 'nth', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'replace', 'isin', 'groupby', 'agg', 'reset_index', 'merge', 'fillna', 'fillna', 'fillna', 'fillna', 'groupby', 'agg', 'reset_index', 'merge', 'fillna', 'groupby', 'agg', 'reset_index', 'merge', 'read_csv', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'drop_duplicates', 'groupby', 'sum', 'reset_index', 'groupby', 'sum', 'reset_index', 'merge', 'merge', 'groupby', 'mean', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'max', 'reset_index', 'merge', 'groupby', 'groupby', 'max', 'reset_index', 'merge', 'groupby', 'count', 'reset_index', 'merge', 'fillna', 'print', 'groupby', 'count', 'reset_index', 'merge', 'str', 'fillna', 'range', 'print', 'groupby', 'count', 'reset_index', 'merge', 'str', 'fillna', 'groupby', 'count', 'reset_index', 'merge', 'reset_index', 'groupby', 'agg', 'reset_index', 'merge', 'sort_values', 'read_csv', 'groupby', 'max', 'reset_index', 'groupby', 'agg', 'reset_index', 'merge', 'groupby', 'min', 'reset_index', 'groupby', 'agg', 'reset_index', 'merge', 'LabelEncoder', 'lower', 'fit_transform', 'lower', 'transform', 'replace', 'mean', 'replace', 'replace', 'replace', 'mean', 'mean', 'lower', 'lower', 'StratifiedKFold', 'split', 'Dataset', 'Dataset', 'print', 'train', 'DataFrame', 'predict', 'append', 'predict', 'read_csv', 'to_csv', 'concat', 'to_csv', 'print', 'groupby', 'count', 'reset_index', 'merge', 'drop', 'sort_values', 'value_counts']","['filterwarnings', 'read_csv', 'replace', 'groupby', 'count', 'reset_index', 'merge', 'join', 'fillna', 'agg', 'range', 'head', 'isin', 'sort_values', 'nth', 'isnull', 'print', 'str', 'sum', 'drop_duplicates', 'mean', 'max', 'min', 'LabelEncoder', 'lower', 'fit_transform', 'transform', 'StratifiedKFold', 'split', 'Dataset', 'train', 'DataFrame', 'predict', 'append', 'to_csv', 'concat', 'drop', 'value_counts']",38,"['pandas', 'numpy', 'warnings\n', 'sklearn', 'os\n', 'gc\n', 'lightgbm']",7,"[1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1712,0.79328,None,0,
792_lb_lgbm_with_smile_feats.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,pd.factorize,one_hot_encoder,df.replace,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",146,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'collect', 'groupby', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",49,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",374,0.79333,None,0,
home-credit-default-risk-with-xgboost-and-lightgbm.r,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",268,0.79356,None,5,
the-model-3.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,df.drop,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",155,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'agg', 'Index', 'join', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",55,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",406,0.794,Bronze,8,
793_new_app_feats.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,pd.factorize,one_hot_encoder,df.replace,np.isnan,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",147,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'isnan', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'factorize', 'one_hot_encoder', 'replace', 'isnan', 'collect', 'groupby', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",50,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",379,0.794,None,0,
hcdr-single-model-private-score-0-79167-catboost.py,"get_ipython,None.run_line_magic,list,pd.DataFrame,df_files.File_Name.apply,print,print,print,pd.DataFrame,list,list,list,enumerate,str,str,str,str,df_facol.mean,df_facol.median,df_facol.std,df_facol.skew,list,df.fillna,df_corr.where,any,len,get_ipython,None.run_cell_magic,train.head,test.head,print,pd.concat,feature_summary,df_combcol.apply,print,pd.DataFrame,pd.get_dummies,pd.concat,display,print,cat_train.drop,print,pd.concat,print,display,df_final.replace,df_final.drop,gc.collect,get_ipython,None.run_cell_magic,get_ipython,None.run_cell_magic,pd.concat,bur_f.abs,bur_f.astype,gc.collect,bur_bal.MONTHS_BALANCE.abs,get_ipython,None.run_cell_magic,pd.get_dummies,pd.concat,get_ipython,None.run_cell_magic,bur_bal_ff.head,bur_bal_ff.drop,list,bur_bal_name.append,bur_bal_name.append,bur_bal_name.append,bur_bal_name.append,bur_bal_name.append,get_ipython,None.run_cell_magic,gc.collect,bur_f.join,gc.collect,list,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,get_ipython,None.run_cell_magic,list,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,bur_combi_name.append,get_ipython,None.run_cell_magic,bur_combi_fg.drop,df_final.join,gc.collect,get_ipython,None.run_cell_magic,prev_appl.replace,get_ipython,None.run_cell_magic,feature_summary,get_ipython,None.run_cell_magic,prev_appl_cat.drop,print,pd.concat,gc.collect,get_ipython,None.run_cell_magic,print,list,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,get_ipython,None.run_cell_magic,gc.collect,pd.get_dummies,pd.concat,gc.collect,list,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,prev_name.append,get_ipython,None.run_cell_magic,gc.collect,df_final.join,gc.collect,get_ipython,None.run_cell_magic,inst_paycol.abs,get_ipython,None.run_cell_magic,list,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,get_ipython,None.run_cell_magic,list,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,inst_pay_name.append,get_ipython,None.run_cell_magic,inst_pay_fg.drop,df_final.join,gc.collect,get_ipython,None.run_cell_magic,pos_cash.abs,pos_cash.apply,pd.get_dummies,pd.concat,list,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,get_ipython,None.run_cell_magic,list,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,pos_cash_name.append,get_ipython,None.run_cell_magic,df_final.join,gc.collect,get_ipython,None.run_cell_magic,cc_bal.abs,cc_balCNT_DRAWING_LIST.sum,cc_bal.apply,pd.get_dummies,pd.concat,list,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,get_ipython,None.run_cell_magic,list,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,cc_bal_name.append,get_ipython,None.run_cell_magic,df_final.join,gc.collect,print,df_final.drop,get_ipython,None.run_cell_magic,print,df_final.drop,gc.collect,get_ipython,None.run_cell_magic,len,len,print,gc.collect,get_ipython,None.run_cell_magic,pd.read_csv,sample.to_csv,df_preds_x.to_csv,df_preds.to_csv,get_ipython,None.run_cell_magic",297,"['get_ipython', 'run_line_magic', 'list', 'DataFrame', 'File_Name', 'print', 'print', 'print', 'DataFrame', 'list', 'list', 'list', 'enumerate', 'str', 'str', 'str', 'str', 'mean', 'median', 'std', 'skew', 'list', 'fillna', 'where', 'any', 'len', 'get_ipython', 'run_cell_magic', 'head', 'head', 'print', 'concat', 'feature_summary', 'apply', 'print', 'DataFrame', 'get_dummies', 'concat', 'display', 'print', 'drop', 'print', 'concat', 'print', 'display', 'replace', 'drop', 'collect', 'get_ipython', 'run_cell_magic', 'get_ipython', 'run_cell_magic', 'concat', 'abs', 'astype', 'collect', 'MONTHS_BALANCE', 'get_ipython', 'run_cell_magic', 'get_dummies', 'concat', 'get_ipython', 'run_cell_magic', 'head', 'drop', 'list', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'collect', 'join', 'collect', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'drop', 'join', 'collect', 'get_ipython', 'run_cell_magic', 'replace', 'get_ipython', 'run_cell_magic', 'feature_summary', 'get_ipython', 'run_cell_magic', 'drop', 'print', 'concat', 'collect', 'get_ipython', 'run_cell_magic', 'print', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'collect', 'get_dummies', 'concat', 'collect', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'collect', 'join', 'collect', 'get_ipython', 'run_cell_magic', 'abs', 'get_ipython', 'run_cell_magic', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'drop', 'join', 'collect', 'get_ipython', 'run_cell_magic', 'abs', 'apply', 'get_dummies', 'concat', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'join', 'collect', 'get_ipython', 'run_cell_magic', 'abs', 'sum', 'apply', 'get_dummies', 'concat', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'list', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'append', 'get_ipython', 'run_cell_magic', 'join', 'collect', 'print', 'drop', 'get_ipython', 'run_cell_magic', 'print', 'drop', 'collect', 'get_ipython', 'run_cell_magic', 'len', 'len', 'print', 'collect', 'get_ipython', 'run_cell_magic', 'read_csv', 'to_csv', 'to_csv', 'to_csv', 'get_ipython', 'run_cell_magic']","['get_ipython', 'run_line_magic', 'list', 'DataFrame', 'File_Name', 'print', 'enumerate', 'str', 'mean', 'median', 'std', 'skew', 'fillna', 'where', 'any', 'len', 'run_cell_magic', 'head', 'concat', 'feature_summary', 'apply', 'get_dummies', 'display', 'drop', 'replace', 'collect', 'abs', 'astype', 'MONTHS_BALANCE', 'append', 'join', 'sum', 'read_csv', 'to_csv']",34,"['numpy', 'pandas', 'os\n', 'matplotlib', 'seaborn', 'gc\n', 'sklearn', 'catboost']",8,"[1 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1249,0.79461,Bronze,8,
home-credit-risk-with-detailed-feature-engineering.py,"warnings.filterwarnings,warnings.filterwarnings,warnings.filterwarnings,time.time,print,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,print,pd.read_csv,pd.read_csv,df.append,None.reset_index,LabelEncoder,lbe.fit_transform,pd.get_dummies,df.replace,df.drop,pd.Index,df.rename,df.rename,pd.read_csv,pd.get_dummies,bb.groupby,None.agg,pd.Index,bb_agg.drop,pd.read_csv,bureau.join,bureau_and_bb.replace,bureau_and_bb.replace,pd.get_dummies,bureau_and_bb.drop,round,bureau_and_bb.groupby,None.agg,None.reset_index,pd.Index,round,active.groupby,None.agg,pd.Index,bureau_and_bb_agg.rename,bureau_and_bb_agg.join,closed.groupby,None.agg,pd.Index,bureau_and_bb_agg.join,pd.read_csv,ins.map,ins.groupby,None.agg,pd.Index,ins_agg.drop,ins_agg.reset_index,pd.read_csv,pd.get_dummies,pos.groupby,None.agg,pd.Index,pos_agg.astype,pos_agg.drop,pos_agg.reset_index,pd.read_csv,pd.get_dummies,CCB.drop,CCB.groupby,None.nunique,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.max,None.reset_index,None.rename,grp.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCBCCB.astype,DPD.tolist,enumerate,CCB.groupby,None.apply,None.reset_index,None.rename,grp.groupby,None.mean,None.reset_index,None.rename,CCB.merge,min_pay.tolist,total_pay.tolist,len,range,CCB.groupby,None.apply,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.mean,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.mean,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.size,CCB.groupby,None.agg,pd.Index,CCB_agg.reset_index,pd.read_csv,df_prev.replace,df_prev.replace,df_prev.replace,df_prev.replace,abs,df_prev.replace,df_prev.replace,df_prev.replace,df_prev.replace,df_prev.apply,df_prev.drop,df_prev.drop,category_columns.append,pd.get_dummies,prev_agg_list.update,timer,application_train,print,timer,bureau_bb,print,timer,installments_payments,print,timer,pos_cash_balance,print,timer,credit_card_balance,print,timer,previous_application,print,timer,df_prev.merge,df_prev_ins.merge,df_prev_ins_pos.groupby,None.agg,None.reset_index,pd.Index,df_prev_ins_pos_agg.rename,df.merge,df_prev_others.merge,df_prev_ins_pos_ccb.merge,print,.join,all_data.notnull,all_data.isnull,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,print,test_df.to_csv,display_importances,timer,pre_processing_and_combine,timer,modeling,timer,main",216,"['filterwarnings', 'filterwarnings', 'filterwarnings', 'time', 'print', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'print', 'read_csv', 'read_csv', 'append', 'reset_index', 'LabelEncoder', 'fit_transform', 'get_dummies', 'replace', 'drop', 'Index', 'rename', 'rename', 'read_csv', 'get_dummies', 'groupby', 'agg', 'Index', 'drop', 'read_csv', 'join', 'replace', 'replace', 'get_dummies', 'drop', 'round', 'groupby', 'agg', 'reset_index', 'Index', 'round', 'groupby', 'agg', 'Index', 'rename', 'join', 'groupby', 'agg', 'Index', 'join', 'read_csv', 'map', 'groupby', 'agg', 'Index', 'drop', 'reset_index', 'read_csv', 'get_dummies', 'groupby', 'agg', 'Index', 'astype', 'drop', 'reset_index', 'read_csv', 'get_dummies', 'drop', 'groupby', 'nunique', 'reset_index', 'rename', 'merge', 'groupby', 'max', 'reset_index', 'rename', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'astype', 'tolist', 'enumerate', 'groupby', 'apply', 'reset_index', 'rename', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'tolist', 'tolist', 'len', 'range', 'groupby', 'apply', 'reset_index', 'rename', 'merge', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'groupby', 'size', 'groupby', 'agg', 'Index', 'reset_index', 'read_csv', 'replace', 'replace', 'replace', 'replace', 'abs', 'replace', 'replace', 'replace', 'replace', 'apply', 'drop', 'drop', 'append', 'get_dummies', 'update', 'timer', 'application_train', 'print', 'timer', 'bureau_bb', 'print', 'timer', 'installments_payments', 'print', 'timer', 'pos_cash_balance', 'print', 'timer', 'credit_card_balance', 'print', 'timer', 'previous_application', 'print', 'timer', 'merge', 'merge', 'groupby', 'agg', 'reset_index', 'Index', 'rename', 'merge', 'merge', 'merge', 'print', 'join', 'notnull', 'isnull', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'print', 'to_csv', 'display_importances', 'timer', 'pre_processing_and_combine', 'timer', 'modeling', 'timer', 'main']","['filterwarnings', 'time', 'print', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'read_csv', 'append', 'reset_index', 'LabelEncoder', 'fit_transform', 'get_dummies', 'replace', 'drop', 'Index', 'rename', 'agg', 'join', 'round', 'map', 'astype', 'nunique', 'merge', 'max', 'sum', 'tolist', 'enumerate', 'apply', 'len', 'range', 'size', 'abs', 'update', 'timer', 'application_train', 'bureau_bb', 'installments_payments', 'pos_cash_balance', 'credit_card_balance', 'previous_application', 'notnull', 'isnull', 'KFold', 'zeros', 'DataFrame', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'pre_processing_and_combine', 'modeling', 'main']",60,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",942,0.79465,Bronze,43,
kfold-lightgbm.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,df.drop,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",155,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'agg', 'Index', 'join', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",55,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",429,0.79598,Bronze,19,
lighgbm_with_selected_features.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.mean,dfdocs.std,dfdocs.kurtosis,dflive.sum,dflive.std,dflive.kurtosis,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,active_agg.columns.tolist,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,e.upper,e.upper,e.upper,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,approved_agg.columns.tolist,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,e.upper,e.upper,e.upper,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,lgb.Dataset,lgb.Dataset,lgb.train,clf.predict,clf.predict,pd.DataFrame,clf.feature_importance,pd.concat,print,gc.collect,print,test_df.copy,sub_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,print,df.drop,gc.collect,print,kfold_lightgbm,timer,main",172,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'mean', 'std', 'kurtosis', 'sum', 'std', 'kurtosis', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'columns', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'upper', 'upper', 'upper', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'columns', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'upper', 'upper', 'upper', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'Dataset', 'Dataset', 'train', 'predict', 'predict', 'DataFrame', 'feature_importance', 'concat', 'print', 'collect', 'print', 'copy', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'print', 'drop', 'collect', 'print', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'mean', 'std', 'kurtosis', 'sum', 'map', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'agg', 'Index', 'join', 'drop', 'columns', 'upper', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'Dataset', 'train', 'predict', 'feature_importance', 'concat', 'copy', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",58,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",485,0.79599,Gold,232,
tidy_xgb_all_tables_0_796.R,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",164,0.796,Gold,171,
kernelf68f763785.py,"warnings.simplefilter,print,data.memory_usage,None.sum,print,datacol.min,datacol.max,str,np.iinfo,np.iinfo,np.iinfo,datacol.astype,np.iinfo,np.iinfo,np.iinfo,datacol.astype,np.iinfo,np.iinfo,np.iinfo,datacol.astype,np.iinfo,np.iinfo,np.iinfo,datacol.astype,np.finfo,np.finfo,np.finfo,datacol.astype,np.finfo,np.finfo,np.finfo,datacol.astype,datacol.astype,data.memory_usage,None.sum,print,print,time.time,print,list,pd.get_dummies,pd.factorize,rint,dfgroup_colscounted.groupby,None.mean,None.reset_index,None.rename,df.merge,gc.collect,dfgroup_colscounted.groupby,None.median,None.reset_index,None.rename,df.merge,gc.collect,dfgroup_colscounted.groupby,None.std,None.reset_index,None.rename,df.merge,gc.collect,dfgroup_colscounted.groupby,None.sum,None.reset_index,None.rename,df.merge,gc.collect,pd.read_csv,pd.read_csv,df_train.append,None.reset_index,gc.collect,df.drop,df.drop,df.drop,dfdocs.mean,dfdocs.std,dfdocs.kurtosis,dfdocs.sum,drop_list.append,df.drop,df.replace,df.apply,df.replace,df.mean,df.std,df.isin,None.map,df.isin,None.map,do_median,do_std,do_mean,do_std,do_mean,do_std,do_mean,do_mean,do_std,label_encoder,reduce_mem_usage,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,.format,group_and_merge,gc.collect,bureau.sort_values,sort_bureau.groupby,None.last,None.reset_index,gr.rename,agg_bureau.merge,reduce_mem_usage,pd.read_csv,df_prev.replace,df_prev.isnull,None.sum,df_prev.isnull,None.sum,df_prev.astype,one_hot_encoder,label_encoder,df_prev.groupby,None.agg,pd.Index,df_prevdf_prev.groupby,None.agg,pd.Index,df_prev_agg.join,gc.collect,df_prevdf_prev.groupby,None.agg,pd.Index,df_prev_agg.join,gc.collect,reduce_mem_usage,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,reduce_mem_usage,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,reduce_mem_usage,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,reduce_mem_usage,lgb.Dataset,int,max,max,int,max,max,lgb.cv,max,BayesianOptimization,lgbBO.maximize,lgbBO.points_to_csv,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_application,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,df.drop,bayes_parameter_opt_lgb,timer,main",230,"['simplefilter', 'print', 'memory_usage', 'sum', 'print', 'min', 'max', 'str', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'iinfo', 'iinfo', 'iinfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'finfo', 'finfo', 'finfo', 'astype', 'astype', 'memory_usage', 'sum', 'print', 'print', 'time', 'print', 'list', 'get_dummies', 'factorize', 'rint', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'collect', 'groupby', 'median', 'reset_index', 'rename', 'merge', 'collect', 'groupby', 'std', 'reset_index', 'rename', 'merge', 'collect', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'collect', 'read_csv', 'read_csv', 'append', 'reset_index', 'collect', 'drop', 'drop', 'drop', 'mean', 'std', 'kurtosis', 'sum', 'append', 'drop', 'replace', 'apply', 'replace', 'mean', 'std', 'isin', 'map', 'isin', 'map', 'do_median', 'do_std', 'do_mean', 'do_std', 'do_mean', 'do_std', 'do_mean', 'do_mean', 'do_std', 'label_encoder', 'reduce_mem_usage', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'format', 'group_and_merge', 'collect', 'sort_values', 'groupby', 'last', 'reset_index', 'rename', 'merge', 'reduce_mem_usage', 'read_csv', 'replace', 'isnull', 'sum', 'isnull', 'sum', 'astype', 'one_hot_encoder', 'label_encoder', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'reduce_mem_usage', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'reduce_mem_usage', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'reduce_mem_usage', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'reduce_mem_usage', 'Dataset', 'int', 'max', 'max', 'int', 'max', 'max', 'cv', 'max', 'BayesianOptimization', 'maximize', 'points_to_csv', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_application', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'drop', 'bayes_parameter_opt_lgb', 'timer', 'main']","['simplefilter', 'print', 'memory_usage', 'sum', 'min', 'max', 'str', 'iinfo', 'astype', 'finfo', 'time', 'list', 'get_dummies', 'factorize', 'rint', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'collect', 'median', 'std', 'read_csv', 'append', 'drop', 'kurtosis', 'replace', 'apply', 'isin', 'map', 'do_median', 'do_std', 'do_mean', 'label_encoder', 'reduce_mem_usage', 'one_hot_encoder', 'agg', 'Index', 'join', 'format', 'group_and_merge', 'sort_values', 'last', 'isnull', 'size', 'Dataset', 'int', 'cv', 'BayesianOptimization', 'maximize', 'points_to_csv', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_application', 'pos_cash', 'installments_payments', 'credit_card_balance', 'bayes_parameter_opt_lgb', 'main']",61,"['os\n', 'gc\n', 'time\n', 'numpy', 'pandas', 'contextlib', 'multiprocessing', 'functools', 'scipy', 'lightgbm', 'sklearn', 'warnings\n', 'matplotlib', 'seaborn']",14,"[1 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",634,0.796,None,1,
lightgbm-predictions-explained-with-shap-0-796.py,"warnings.simplefilter,time.time,print,np.exp,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.median,df.mean,df.prod,df.max,df.min,df.std,df.mad,df.apply,pd.factorize,one_hot_encoder,df.drop,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,print,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,abs,None.mean,pd.concat,scores.append,print,models.append,gc.collect,roc_auc_score,print,print,pd.DataFrame,None.to_csv,pd.read_csv,sub_df.to_csv,display_shapley_values,feat_importance.groupby,None.agg,None.sort_values,None.head,None.reset_index,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.show,feat_importance.groupby,None.agg,None.sort_values,None.head,None.reset_index,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.show,get_ipython,None.run_cell_magic,get_ipython,None.run_cell_magic,shap.TreeExplainer,explainer.shap_values,shap.initjs,print,shap.force_plot,np.exp,np.exp,np.sum,print,shap.force_plot,shap.summary_plot,feat_importance.groupby,None.agg,None.sort_values,None.reset_index,int,int,print,timer,kfold_lightgbm",169,"['simplefilter', 'time', 'print', 'exp', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'median', 'mean', 'prod', 'max', 'min', 'std', 'mad', 'apply', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'print', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'abs', 'mean', 'concat', 'append', 'print', 'append', 'collect', 'roc_auc_score', 'print', 'print', 'DataFrame', 'to_csv', 'read_csv', 'to_csv', 'display_shapley_values', 'groupby', 'agg', 'sort_values', 'head', 'reset_index', 'figure', 'barplot', 'title', 'tight_layout', 'show', 'groupby', 'agg', 'sort_values', 'head', 'reset_index', 'figure', 'barplot', 'title', 'tight_layout', 'show', 'get_ipython', 'run_cell_magic', 'get_ipython', 'run_cell_magic', 'TreeExplainer', 'shap_values', 'initjs', 'print', 'force_plot', 'exp', 'exp', 'sum', 'print', 'force_plot', 'summary_plot', 'groupby', 'agg', 'sort_values', 'reset_index', 'int', 'int', 'print', 'timer', 'kfold_lightgbm']","['simplefilter', 'time', 'print', 'exp', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'prod', 'max', 'min', 'std', 'mad', 'apply', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'agg', 'Index', 'join', 'size', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'abs', 'concat', 'roc_auc_score', 'to_csv', 'display_shapley_values', 'sort_values', 'head', 'figure', 'barplot', 'title', 'tight_layout', 'show', 'get_ipython', 'run_cell_magic', 'TreeExplainer', 'shap_values', 'initjs', 'force_plot', 'summary_plot', 'int', 'timer', 'kfold_lightgbm']",60,"['numpy', 'pandas', 'shap\n', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",11,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",452,0.796,Silver,55,
lighgbm_with_selected_features_impr.py,"warnings.simplefilter,time.time,print,source.keys,df1.join,pd.crosstab,df1cat.apply,list,dfcol.astype,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.mean,dfdocs.std,dfdocs.kurtosis,dflive.sum,dflive.std,dflive.kurtosis,df.map,df.mean,df.std,df.fillna,mean_encoding,pd.factorize,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,mean_encoding,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,print,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,active_agg.columns.tolist,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,e.upper,e.upper,e.upper,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,approved_agg.columns.tolist,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,e.upper,e.upper,e.upper,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,dfcol.astype,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,lgb.Dataset,lgb.Dataset,lgb.train,clf.predict,clf.predict,pd.DataFrame,clf.feature_importance,pd.concat,print,gc.collect,print,test_df.copy,sub_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,print,df.drop,gc.collect,print,kfold_lightgbm,timer,main",180,"['simplefilter', 'time', 'print', 'keys', 'join', 'crosstab', 'apply', 'list', 'astype', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'mean', 'std', 'kurtosis', 'sum', 'std', 'kurtosis', 'map', 'mean', 'std', 'fillna', 'mean_encoding', 'factorize', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'mean_encoding', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'print', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'columns', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'upper', 'upper', 'upper', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'columns', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'upper', 'upper', 'upper', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'astype', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'Dataset', 'Dataset', 'train', 'predict', 'predict', 'DataFrame', 'feature_importance', 'concat', 'print', 'collect', 'print', 'copy', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'print', 'drop', 'collect', 'print', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'keys', 'join', 'crosstab', 'apply', 'list', 'astype', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'mean', 'std', 'kurtosis', 'sum', 'map', 'fillna', 'mean_encoding', 'factorize', 'one_hot_encoder', 'collect', 'agg', 'Index', 'drop', 'columns', 'upper', 'size', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'Dataset', 'train', 'predict', 'feature_importance', 'concat', 'copy', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",61,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",539,0.796,,,couldnt find
home-credit-default-risk-production-level.py,"warnings.filterwarnings,warnings.filterwarnings,warnings.filterwarnings,time.time,print,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,pd.read_csv,pd.read_csv,df.append,None.reset_index,LabelEncoder,lbe.fit_transform,pd.get_dummies,df.replace,dfdf.apply,df.drop,pd.Index,df.rename,df.rename,pd.read_csv,pd.get_dummies,bb.groupby,None.agg,pd.Index,bb_agg.drop,pd.read_csv,bureau.join,bureau_and_bb.replace,bureau_and_bb.replace,pd.get_dummies,bureau_and_bb.drop,round,bureau_and_bb.groupby,None.agg,None.reset_index,pd.Index,round,active.groupby,None.agg,pd.Index,bureau_and_bb_agg.rename,bureau_and_bb_agg.join,closed.groupby,None.agg,pd.Index,bureau_and_bb_agg.join,pd.read_csv,ins.map,ins.groupby,None.agg,pd.Index,ins_agg.drop,ins_agg.reset_index,pd.read_csv,pd.get_dummies,pos.groupby,None.agg,pd.Index,pos_agg.astype,pos_agg.drop,pos_agg.reset_index,pd.read_csv,pd.get_dummies,CCB.drop,CCB.groupby,None.nunique,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.max,None.reset_index,None.rename,grp.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCBCCB.astype,DPD.tolist,enumerate,CCB.groupby,None.apply,None.reset_index,None.rename,grp.groupby,None.mean,None.reset_index,None.rename,CCB.merge,min_pay.tolist,total_pay.tolist,len,range,CCB.groupby,None.apply,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.mean,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.sum,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.mean,None.reset_index,None.rename,CCB.merge,CCB.groupby,None.size,CCB.groupby,None.agg,pd.Index,CCB_agg.reset_index,pd.read_csv,df_prev.replace,df_prev.replace,df_prev.replace,df_prev.replace,abs,df_prev.replace,df_prev.replace,df_prev.replace,df_prev.replace,df_prev.apply,df_prev.drop,df_prev.drop,category_columns.append,pd.get_dummies,prev_agg_list.update,timer,application_train,print,timer,bureau_bb,print,timer,installments_payments,print,timer,pos_cash_balance,print,timer,credit_card_balance,print,timer,previous_application,print,timer,df_prev.merge,df_prev_ins.merge,df_prev_ins_pos.groupby,None.agg,None.reset_index,pd.Index,df_prev_ins_pos_agg.rename,df.merge,df_prev_others.merge,df_prev_ins_pos_ccb.merge,print,.join,all_data.notnull,all_data.isnull,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,print,test_df.to_csv,display_importances,timer,pre_processing_and_combine,timer,modeling,feat_importance.to_csv,timer,main",217,"['filterwarnings', 'filterwarnings', 'filterwarnings', 'time', 'print', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'read_csv', 'read_csv', 'append', 'reset_index', 'LabelEncoder', 'fit_transform', 'get_dummies', 'replace', 'apply', 'drop', 'Index', 'rename', 'rename', 'read_csv', 'get_dummies', 'groupby', 'agg', 'Index', 'drop', 'read_csv', 'join', 'replace', 'replace', 'get_dummies', 'drop', 'round', 'groupby', 'agg', 'reset_index', 'Index', 'round', 'groupby', 'agg', 'Index', 'rename', 'join', 'groupby', 'agg', 'Index', 'join', 'read_csv', 'map', 'groupby', 'agg', 'Index', 'drop', 'reset_index', 'read_csv', 'get_dummies', 'groupby', 'agg', 'Index', 'astype', 'drop', 'reset_index', 'read_csv', 'get_dummies', 'drop', 'groupby', 'nunique', 'reset_index', 'rename', 'merge', 'groupby', 'max', 'reset_index', 'rename', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'astype', 'tolist', 'enumerate', 'groupby', 'apply', 'reset_index', 'rename', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'tolist', 'tolist', 'len', 'range', 'groupby', 'apply', 'reset_index', 'rename', 'merge', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'groupby', 'sum', 'reset_index', 'rename', 'merge', 'groupby', 'mean', 'reset_index', 'rename', 'merge', 'groupby', 'size', 'groupby', 'agg', 'Index', 'reset_index', 'read_csv', 'replace', 'replace', 'replace', 'replace', 'abs', 'replace', 'replace', 'replace', 'replace', 'apply', 'drop', 'drop', 'append', 'get_dummies', 'update', 'timer', 'application_train', 'print', 'timer', 'bureau_bb', 'print', 'timer', 'installments_payments', 'print', 'timer', 'pos_cash_balance', 'print', 'timer', 'credit_card_balance', 'print', 'timer', 'previous_application', 'print', 'timer', 'merge', 'merge', 'groupby', 'agg', 'reset_index', 'Index', 'rename', 'merge', 'merge', 'merge', 'print', 'join', 'notnull', 'isnull', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'print', 'to_csv', 'display_importances', 'timer', 'pre_processing_and_combine', 'timer', 'modeling', 'to_csv', 'timer', 'main']","['filterwarnings', 'time', 'print', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'read_csv', 'append', 'reset_index', 'LabelEncoder', 'fit_transform', 'get_dummies', 'replace', 'apply', 'drop', 'Index', 'rename', 'agg', 'join', 'round', 'map', 'astype', 'nunique', 'merge', 'max', 'sum', 'tolist', 'enumerate', 'len', 'range', 'size', 'abs', 'update', 'timer', 'application_train', 'bureau_bb', 'installments_payments', 'pos_cash_balance', 'credit_card_balance', 'previous_application', 'notnull', 'isnull', 'KFold', 'zeros', 'DataFrame', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'pre_processing_and_combine', 'modeling', 'main']",60,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",870,0.79604,Bronze,15,
fork_lightgbm_with_simple_features.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,range,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.Series,None.rank,pd.Series,None.rank,pd.DataFrame,pd.concat,print,gc.collect,sub_preds.max,test_df.to_csv,feature_importance_df.to_csv,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",147,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'range', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'Series', 'rank', 'Series', 'rank', 'DataFrame', 'concat', 'print', 'collect', 'max', 'to_csv', 'to_csv', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'range', 'LGBMClassifier', 'fit', 'predict_proba', 'Series', 'rank', 'concat', 'max', 'to_csv', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",51,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",369,0.79609,Bronze,20,
fork_of_fork_lightgbm_with_simple_features.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,df.drop,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",155,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'agg', 'Index', 'join', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",55,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",369,0.797,,,couldnt find
fork_of_fork_lightgbm_with_simple_features (1).py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.groupby,None.median,df.map,pd.factorize,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",148,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'groupby', 'median', 'map', 'factorize', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'groupby', 'median', 'map', 'factorize', 'one_hot_encoder', 'collect', 'agg', 'Index', 'join', 'drop', 'replace', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",51,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",379,0.797,,,couldnt find
kernel24647bb75c.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,df.drop,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,.join,.join,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",157,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'join', 'join', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'agg', 'Index', 'join', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",55,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",371,0.79715,None,0,
fork_of_fork_lightgbm_with_simple_features_cee847.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,df.drop,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",155,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'drop', 'collect', 'agg', 'Index', 'join', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",55,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",369,0.798,Gold,118,
homecreditdefaultrisk_simpleblend_0_798.py,"print,pd.read_csv,None.rename,pd.read_csv,None.rename,pd.read_csv,None.rename,pd.merge,pd.merge,b1.to_csv",10,"['print', 'read_csv', 'rename', 'read_csv', 'rename', 'read_csv', 'rename', 'merge', 'merge', 'to_csv']","['print', 'read_csv', 'rename', 'merge', 'to_csv']",5,"['numpy', 'pandas', 'os\n']",3,"[1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",24,0.798,Silver,34,
home-credit-default-risk-prediction.py,"get_ipython,None.run_line_magic,pd.read_csv,pd.read_csv,pd.read_csv,get_balance_data,apps.mean,apps.std,apps.fillna,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,prev_group.agg,.join,None.upper,prev_amt_agg.columns.ravel,prev.isin,None.groupby,prev_refused_appr_group.count,None.unstack,prev_refused_appr_agg.fillna,prevcond_days365.groupby,prev_days365_group.agg,.join,None.upper,prev_days365_agg.columns.ravel,get_prev_processed,get_prev_amt_agg,get_prev_refused_appr_agg,get_prev_days365_agg,prev_amt_agg.merge,prev_agg.merge,prev_agg.drop,bureau.apply,bureau.apply,bureau.groupby,bureau_grp.agg,.join,None.upper,bureau_day_amt_agg.columns.ravel,bureau_day_amt_agg.reset_index,bureaucond_active.groupby,bureau_active_grp.agg,.join,None.upper,bureau_active_agg.columns.ravel,bureau_active_agg.reset_index,bureaucond_days750.groupby,bureau_days750_group.agg,.join,None.upper,bureau_days750_agg.columns.ravel,bureau_days750_agg.reset_index,bureau_bal.merge,bureau_bal.apply,bureau_bal.apply,bureau_bal.groupby,bureau_bal_grp.agg,.join,None.upper,bureau_bal_agg.columns.ravel,bureau_bal_agg.reset_index,get_bureau_processed,get_bureau_day_amt_agg,get_bureau_active_agg,get_bureau_days750_agg,get_bureau_bal_agg,bureau_day_amt_agg.merge,bureau_agg.merge,bureau_agg.merge,get_apps_processed,get_prev_agg,print,print,apps_all.merge,print,apps_all.dtypesapps_all.dtypes.index.tolist,pd.factorize,apps_all.isnull,apps_all.isnull,apps_all_test.drop,apps_all_train.drop,train_test_split,print,LGBMClassifier,clf.fit,pos_bal.apply,pos_bal.apply,pos_bal.apply,pos_bal.groupby,pos_bal_grp.agg,.join,None.upper,pos_bal_agg.columns.ravel,pos_balcond_months.groupby,pos_bal_m20_grp.agg,.join,None.upper,pos_bal_m20_agg.columns.ravel,pos_bal_agg.merge,pos_bal_agg.reset_index,install.apply,install.apply,install.apply,install.groupby,install_grp.agg,.join,None.upper,install_agg.columns.ravel,installcond_day.groupby,install_d365_grp.agg,.join,None.upper,install_d365_agg.columns.ravel,install_agg.merge,install_agg.reset_index,card_bal.apply,card_bal.apply,card_bal.apply,card_bal.groupby,card_bal_grp.agg,.join,None.upper,card_bal_agg.columns.ravel,card_bal_agg.reset_index,card_balcond_month.groupby,card_bal_m3_grp.agg,.join,None.upper,card_bal_m3_agg.columns.ravel,card_bal_agg.merge,card_bal_agg.reset_index,get_apps_processed,get_prev_agg,get_bureau_agg,get_pos_bal_agg,get_install_agg,get_card_bal_agg,print,print,print,apps_all.merge,apps_all.merge,apps_all.merge,apps_all.merge,apps_all.merge,print,pd.read_csv,pd.read_csv,pd.concat,pd.read_csv,pd.read_csv,pd.read_csv,get_balance_data,get_dataset,get_apps_all_with_all_agg,get_apps_all_encoded,get_apps_all_train_test,train_apps_all,clf.predict_proba,apps_all_test.to_csv,plot_importance",165,"['get_ipython', 'run_line_magic', 'read_csv', 'read_csv', 'read_csv', 'get_balance_data', 'mean', 'std', 'fillna', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'join', 'upper', 'columns', 'isin', 'groupby', 'count', 'unstack', 'fillna', 'groupby', 'agg', 'join', 'upper', 'columns', 'get_prev_processed', 'get_prev_amt_agg', 'get_prev_refused_appr_agg', 'get_prev_days365_agg', 'merge', 'merge', 'drop', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'merge', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'get_bureau_processed', 'get_bureau_day_amt_agg', 'get_bureau_active_agg', 'get_bureau_days750_agg', 'get_bureau_bal_agg', 'merge', 'merge', 'merge', 'get_apps_processed', 'get_prev_agg', 'print', 'print', 'merge', 'print', 'dtypesapps_all', 'factorize', 'isnull', 'isnull', 'drop', 'drop', 'train_test_split', 'print', 'LGBMClassifier', 'fit', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'get_apps_processed', 'get_prev_agg', 'get_bureau_agg', 'get_pos_bal_agg', 'get_install_agg', 'get_card_bal_agg', 'print', 'print', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'print', 'read_csv', 'read_csv', 'concat', 'read_csv', 'read_csv', 'read_csv', 'get_balance_data', 'get_dataset', 'get_apps_all_with_all_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'train_apps_all', 'predict_proba', 'to_csv', 'plot_importance']","['get_ipython', 'run_line_magic', 'read_csv', 'get_balance_data', 'mean', 'std', 'fillna', 'replace', 'groupby', 'agg', 'join', 'upper', 'columns', 'isin', 'count', 'unstack', 'get_prev_processed', 'get_prev_amt_agg', 'get_prev_refused_appr_agg', 'get_prev_days365_agg', 'merge', 'drop', 'apply', 'reset_index', 'get_bureau_processed', 'get_bureau_day_amt_agg', 'get_bureau_active_agg', 'get_bureau_days750_agg', 'get_bureau_bal_agg', 'get_apps_processed', 'get_prev_agg', 'print', 'dtypesapps_all', 'factorize', 'isnull', 'train_test_split', 'LGBMClassifier', 'fit', 'get_bureau_agg', 'get_pos_bal_agg', 'get_install_agg', 'get_card_bal_agg', 'concat', 'get_dataset', 'get_apps_all_with_all_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'train_apps_all', 'predict_proba', 'to_csv', 'plot_importance']",51,"['pandas', 'numpy', 'matplotlib', 'seaborn', 'os,', 'sklearn', 'lightgbm']",7,"[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",761,0.79977,None,2,
fork_of_magic_of_weighted_average_rank_0_80 (1).py,"glob.glob,pd.read_csv,pd.DataFrame,data.keys,datakey.TARGET.rank,ranks.mean,ranks.min,ranks.max,ranks.min,ranks.corr,ranks.mul,None.sum,pd.read_csv,submission_lb.to_csv,submission_lb.head",15,"['glob', 'read_csv', 'DataFrame', 'keys', 'TARGET', 'mean', 'min', 'max', 'min', 'corr', 'mul', 'sum', 'read_csv', 'to_csv', 'head']","['glob', 'read_csv', 'DataFrame', 'keys', 'TARGET', 'mean', 'min', 'max', 'corr', 'mul', 'sum', 'to_csv', 'head']",13,"['glob\n', 'pandas', 'numpy']",3,"[1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",28,0.8,Bronze,9,
thank-you (1).py,"print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,reduce,merge_dataframes,df.head,pred_prob.head,pd.DataFrame,sub.to_csv,B_prob.head,pd.DataFrame,SUB.to_csv,df.copy,df.drop,df_c.corr,print,sns.heatmap,corr_pred.head,pd.DataFrame,SuB.to_csv",23,"['print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'reduce', 'merge_dataframes', 'head', 'head', 'DataFrame', 'to_csv', 'head', 'DataFrame', 'to_csv', 'copy', 'drop', 'corr', 'print', 'heatmap', 'head', 'DataFrame', 'to_csv']","['print', 'read_csv', 'reduce', 'merge_dataframes', 'head', 'DataFrame', 'to_csv', 'copy', 'drop', 'corr', 'heatmap']",11,"['numpy', 'pandas', 'functools', 'seaborn', 'os\n']",5,"[1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",143,0.8,Gold,92,
magic_of_weighted_average_rank_0_80.py,"glob.glob,pd.read_csv,pd.DataFrame,data.keys,datakey.TARGET.rank,ranks.mean,ranks.min,ranks.max,ranks.min,ranks.corr,ranks.mul,None.sum,pd.read_csv,submission_lb.to_csv,submission_lb.head",15,"['glob', 'read_csv', 'DataFrame', 'keys', 'TARGET', 'mean', 'min', 'max', 'min', 'corr', 'mul', 'sum', 'read_csv', 'to_csv', 'head']","['glob', 'read_csv', 'DataFrame', 'keys', 'TARGET', 'mean', 'min', 'max', 'corr', 'mul', 'sum', 'to_csv', 'head']",13,"['glob\n', 'pandas', 'numpy']",3,"[1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",28,0.80005,Silver,49,
lightgbm_7th_place_solution (1).py,NA,0,['NA'],['NA'],1,"['os\n', 'gc\n', 'time\n', 'numpy', 'pandas', 'contextlib', 'multiprocessing', 'functools', 'scipy', 'lightgbm', 'sklearn', 'warnings\n']",12,"[1 1 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1087,0.80028,Gold,118,
micro-model-174-features-0-8-auc-on-home-credit (1).py,NA,0,['NA'],['NA'],1,"['lightgbm\n', 'gc\n', 're\n', 'time\n', 'numpy', 'pandas', 'matplotlib', 'seaborn', 'lightgbm', 'sklearn']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",716,0.80048,None,2,
home-credit-default-risk-lgbm-w-domain-fts (1).py,"pd.read_csv,pd.read_csv,print,print,app_test.head,pd.read_csv,pd.read_csv,pd.read_csv,get_balance_data,app_train.astype,None.plot.hist,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.describe,app_train.plot.hist,app_test.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_test.replace,app_train.plot.hist,app_test.plot.hist,plt.xlabel,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,SimpleImputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.copy,app_test.copy,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.legend,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,apps.mean,apps.std,apps.fillna,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,prev_group.agg,.join,None.upper,prev_amt_agg.columns.ravel,prev.isin,None.groupby,prev_refused_appr_group.count,None.unstack,prev_refused_appr_agg.fillna,prevcond_days365.groupby,prev_days365_group.agg,.join,None.upper,prev_days365_agg.columns.ravel,get_prev_processed,get_prev_amt_agg,get_prev_refused_appr_agg,get_prev_days365_agg,prev_amt_agg.merge,prev_agg.merge,prev_agg.drop,bureau.apply,bureau.apply,bureau.groupby,bureau_grp.agg,.join,None.upper,bureau_day_amt_agg.columns.ravel,bureau_day_amt_agg.reset_index,bureaucond_active.groupby,bureau_active_grp.agg,.join,None.upper,bureau_active_agg.columns.ravel,bureau_active_agg.reset_index,bureaucond_days750.groupby,bureau_days750_group.agg,.join,None.upper,bureau_days750_agg.columns.ravel,bureau_days750_agg.reset_index,bureau_bal.merge,bureau_bal.apply,bureau_bal.apply,bureau_bal.groupby,bureau_bal_grp.agg,.join,None.upper,bureau_bal_agg.columns.ravel,bureau_bal_agg.reset_index,get_bureau_processed,get_bureau_day_amt_agg,get_bureau_active_agg,get_bureau_days750_agg,get_bureau_bal_agg,bureau_day_amt_agg.merge,bureau_agg.merge,bureau_agg.merge,pos_bal.apply,pos_bal.apply,pos_bal.apply,pos_bal.groupby,pos_bal_grp.agg,.join,None.upper,pos_bal_agg.columns.ravel,pos_balcond_months.groupby,pos_bal_m20_grp.agg,.join,None.upper,pos_bal_m20_agg.columns.ravel,pos_bal_agg.merge,pos_bal_agg.reset_index,install.apply,install.apply,install.apply,install.groupby,install_grp.agg,.join,None.upper,install_agg.columns.ravel,installcond_day.groupby,install_d365_grp.agg,.join,None.upper,install_d365_agg.columns.ravel,install_agg.merge,install_agg.reset_index,card_bal.apply,card_bal.apply,card_bal.apply,card_bal.groupby,card_bal_grp.agg,.join,None.upper,card_bal_agg.columns.ravel,card_bal_agg.reset_index,card_balcond_month.groupby,card_bal_m3_grp.agg,.join,None.upper,card_bal_m3_agg.columns.ravel,card_bal_agg.merge,card_bal_agg.reset_index,MinMaxScaler,app_train.drop,app_train.copy,app_test.copy,list,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.to_csv,RandomForestClassifier,random_forest.fit,pd.DataFrame,random_forest.predict_proba,submit.to_csv,list,imputer.fit_transform,imputer.transform,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_poly.fit,random_forest_poly.predict_proba,submit.head,submit.to_csv,app_train_domain.drop,list,imputer.fit_transform,imputer.transform,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_domain.fit,pd.DataFrame,random_forest_domain.predict_proba,submit.to_csv,df.sort_values,None.reset_index,df.sum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plot_feature_importances,plot_feature_importances,pd.read_csv,pd.read_csv,pd.concat,pd.read_csv,pd.read_csv,pd.read_csv,get_balance_data,get_dataset,get_apps_processed,get_prev_agg,get_bureau_agg,get_pos_bal_agg,get_install_agg,get_card_bal_agg,print,print,print,apps_all.merge,apps_all.merge,apps_all.merge,apps_all.merge,apps_all.merge,print,get_apps_processed,get_prev_agg,print,print,apps_all.merge,print,apps_all.dtypesapps_all.dtypes.index.tolist,pd.factorize,apps_all.isnull,apps_all.isnull,apps_all_test.drop,apps_all_train.drop,train_test_split,print,LGBMClassifier,clf.fit,get_apps_all_with_all_agg,get_apps_all_encoded,get_apps_all_train_test,train_apps_all,clf.predict_proba,apps_all_test.to_csv,plot_importance,apps_all_train.corr,plt.figure,sns.heatmap,plt.title",344,"['read_csv', 'read_csv', 'print', 'print', 'head', 'read_csv', 'read_csv', 'read_csv', 'get_balance_data', 'astype', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'plot', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'replace', 'plot', 'plot', 'xlabel', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'SimpleImputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'legend', 'title', 'xlabel', 'ylabel', 'tight_layout', 'mean', 'std', 'fillna', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'join', 'upper', 'columns', 'isin', 'groupby', 'count', 'unstack', 'fillna', 'groupby', 'agg', 'join', 'upper', 'columns', 'get_prev_processed', 'get_prev_amt_agg', 'get_prev_refused_appr_agg', 'get_prev_days365_agg', 'merge', 'merge', 'drop', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'merge', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'get_bureau_processed', 'get_bureau_day_amt_agg', 'get_bureau_active_agg', 'get_bureau_days750_agg', 'get_bureau_bal_agg', 'merge', 'merge', 'merge', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'MinMaxScaler', 'drop', 'copy', 'copy', 'list', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'to_csv', 'list', 'fit_transform', 'transform', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'predict_proba', 'head', 'to_csv', 'drop', 'list', 'fit_transform', 'transform', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'to_csv', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'plot_feature_importances', 'read_csv', 'read_csv', 'concat', 'read_csv', 'read_csv', 'read_csv', 'get_balance_data', 'get_dataset', 'get_apps_processed', 'get_prev_agg', 'get_bureau_agg', 'get_pos_bal_agg', 'get_install_agg', 'get_card_bal_agg', 'print', 'print', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'print', 'get_apps_processed', 'get_prev_agg', 'print', 'print', 'merge', 'print', 'dtypesapps_all', 'factorize', 'isnull', 'isnull', 'drop', 'drop', 'train_test_split', 'print', 'LGBMClassifier', 'fit', 'get_apps_all_with_all_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'train_apps_all', 'predict_proba', 'to_csv', 'plot_importance', 'corr', 'figure', 'heatmap', 'title']","['read_csv', 'print', 'head', 'get_balance_data', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'SimpleImputer', 'drop', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'merge', 'copy', 'legend', 'std', 'fillna', 'agg', 'join', 'upper', 'columns', 'isin', 'count', 'unstack', 'get_prev_processed', 'get_prev_amt_agg', 'get_prev_refused_appr_agg', 'get_prev_days365_agg', 'reset_index', 'get_bureau_processed', 'get_bureau_day_amt_agg', 'get_bureau_active_agg', 'get_bureau_days750_agg', 'get_bureau_bal_agg', 'MinMaxScaler', 'list', 'LogisticRegression', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'barh', 'set_yticks', 'set_yticklabels', 'show', 'plot_feature_importances', 'get_dataset', 'get_apps_processed', 'get_prev_agg', 'get_bureau_agg', 'get_pos_bal_agg', 'get_install_agg', 'get_card_bal_agg', 'dtypesapps_all', 'factorize', 'train_test_split', 'LGBMClassifier', 'get_apps_all_with_all_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'train_apps_all', 'plot_importance']",98,"['pandas', 'os,', 'numpy', 'sklearn', 'matplotlib', 'seaborn', ""'sklearn"", 'lightgbm']",8,"[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]",1479,0.80063,None,3,
oof-all-home-credit-default-risk (1).py,"get_ipython,None.run_line_magic,pd.set_option,pd.set_option,drive.mount,pd.read_csv,pd.read_csv,pd.concat,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,apps.mean,apps.std,apps.fillna,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,prev_group.agg,.join,None.upper,prev_amt_agg.columns.ravel,prev.isin,None.groupby,prev_refused_appr_group.count,None.unstack,prev_refused_appr_agg.fillna,get_prev_processed,get_prev_processed,get_prev_amt_agg,get_prev_refused_appr_agg,prev_amt_agg.merge,prev_agg.drop,bureau.apply,bureau.apply,bureau.groupby,bureau_grp.agg,.join,None.upper,bureau_day_amt_agg.columns.ravel,bureau_day_amt_agg.reset_index,bureaucond_active.groupby,bureau_active_grp.agg,.join,None.upper,bureau_active_agg.columns.ravel,bureau_active_agg.reset_index,bureau_bal.merge,bureau_bal.apply,bureau_bal.apply,bureau_bal.groupby,bureau_bal_grp.agg,.join,None.upper,bureau_bal_agg.columns.ravel,bureau_bal_agg.reset_index,get_bureau_processed,get_bureau_day_amt_agg,get_bureau_active_agg,get_bureau_bal_agg,bureau_day_amt_agg.merge,bureau_agg.merge,pos_bal.apply,pos_bal.apply,pos_bal.apply,pos_bal.groupby,pos_bal_grp.agg,.join,None.upper,pos_bal_agg.columns.ravel,pos_balcond_months.groupby,pos_bal_m20_grp.agg,.join,None.upper,pos_bal_m20_agg.columns.ravel,pos_bal_agg.merge,pos_bal_agg.reset_index,install.apply,install.apply,install.apply,install.groupby,install_grp.agg,.join,None.upper,install_agg.columns.ravel,installcond_day.groupby,install_d365_grp.agg,.join,None.upper,install_d365_agg.columns.ravel,install_agg.merge,install_agg.reset_index,card_bal.apply,card_bal.apply,card_bal.apply,card_bal.groupby,card_bal_grp.agg,.join,None.upper,card_bal_agg.columns.ravel,card_bal_agg.reset_index,card_balcond_month.groupby,card_bal_m3_grp.agg,.join,None.upper,card_bal_m3_agg.columns.ravel,card_bal_agg.merge,card_bal_agg.reset_index,apps_all.dtypesapps_all.dtypes.index.to_list,pd.factorize,apps_all.isnull,apps_all.isnull,apps_all_test.drop,get_apps_processed,get_prev_agg,get_bureau_agg,get_pos_bal_agg,get_install_agg,get_card_bal_agg,print,print,print,apps_all.merge,apps_all.merge,apps_all.merge,apps_all.merge,apps_all.merge,print,get_dataset,get_apps_all_with_all_agg,get_apps_all_encoded,get_apps_all_train_test,np.zeros,apps_all_train.drop,KFold,np.zeros,np.zeros,LGBMClassifier,enumerate,print,clf.fit,clf.predict_proba,clf.predict_proba,print,train_apps_all_with_oof,print,display,apps_all_test.to_csv,apps_all_test.drop",154,"['get_ipython', 'run_line_magic', 'set_option', 'set_option', 'mount', 'read_csv', 'read_csv', 'concat', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'mean', 'std', 'fillna', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'join', 'upper', 'columns', 'isin', 'groupby', 'count', 'unstack', 'fillna', 'get_prev_processed', 'get_prev_processed', 'get_prev_amt_agg', 'get_prev_refused_appr_agg', 'merge', 'drop', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'merge', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'get_bureau_processed', 'get_bureau_day_amt_agg', 'get_bureau_active_agg', 'get_bureau_bal_agg', 'merge', 'merge', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'apply', 'apply', 'apply', 'groupby', 'agg', 'join', 'upper', 'columns', 'reset_index', 'groupby', 'agg', 'join', 'upper', 'columns', 'merge', 'reset_index', 'dtypesapps_all', 'factorize', 'isnull', 'isnull', 'drop', 'get_apps_processed', 'get_prev_agg', 'get_bureau_agg', 'get_pos_bal_agg', 'get_install_agg', 'get_card_bal_agg', 'print', 'print', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'print', 'get_dataset', 'get_apps_all_with_all_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'zeros', 'drop', 'KFold', 'zeros', 'zeros', 'LGBMClassifier', 'enumerate', 'print', 'fit', 'predict_proba', 'predict_proba', 'print', 'train_apps_all_with_oof', 'print', 'display', 'to_csv', 'drop']","['get_ipython', 'run_line_magic', 'set_option', 'mount', 'read_csv', 'concat', 'mean', 'std', 'fillna', 'replace', 'groupby', 'agg', 'join', 'upper', 'columns', 'isin', 'count', 'unstack', 'get_prev_processed', 'get_prev_amt_agg', 'get_prev_refused_appr_agg', 'merge', 'drop', 'apply', 'reset_index', 'get_bureau_processed', 'get_bureau_day_amt_agg', 'get_bureau_active_agg', 'get_bureau_bal_agg', 'dtypesapps_all', 'factorize', 'isnull', 'get_apps_processed', 'get_prev_agg', 'get_bureau_agg', 'get_pos_bal_agg', 'get_install_agg', 'get_card_bal_agg', 'print', 'get_dataset', 'get_apps_all_with_all_agg', 'get_apps_all_encoded', 'get_apps_all_train_test', 'zeros', 'KFold', 'LGBMClassifier', 'enumerate', 'fit', 'predict_proba', 'train_apps_all_with_oof', 'display', 'to_csv']",52,"['pandas', 'numpy', 'matplotlib', 'seaborn', 'os,', 'google', 'sklearn', 'lightgbm', 'datetime\n']",9,"[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",770,0.8017,None,3,
different-basic-blends-possible (1).py,"print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,reduce,merge_dataframes,df.head,pred_prob.head,pd.DataFrame,sub.to_csv,B_prob.head,pd.DataFrame,SUB.to_csv,df.copy,df.drop,df_c.corr,print,sns.heatmap,corr_pred.head,pd.DataFrame,SuB.to_csv",27,"['print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'reduce', 'merge_dataframes', 'head', 'head', 'DataFrame', 'to_csv', 'head', 'DataFrame', 'to_csv', 'copy', 'drop', 'corr', 'print', 'heatmap', 'head', 'DataFrame', 'to_csv']","['print', 'read_csv', 'reduce', 'merge_dataframes', 'head', 'DataFrame', 'to_csv', 'copy', 'drop', 'corr', 'heatmap']",11,"['numpy', 'pandas', 'functools', 'seaborn', 'os\n']",5,"[1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",147,0.803,Bronze,,
different-basic-blends-possible (2).py,"print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,reduce,merge_dataframes,df.head,pred_prob.head,pd.DataFrame,sub.to_csv,B_prob.head,pd.DataFrame,SUB.to_csv,df.copy,df.drop,df_c.corr,print,sns.heatmap,corr_pred.head,pd.DataFrame,SuB.to_csv",24,"['print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'reduce', 'merge_dataframes', 'head', 'head', 'DataFrame', 'to_csv', 'head', 'DataFrame', 'to_csv', 'copy', 'drop', 'corr', 'print', 'heatmap', 'head', 'DataFrame', 'to_csv']","['print', 'read_csv', 'reduce', 'merge_dataframes', 'head', 'DataFrame', 'to_csv', 'copy', 'drop', 'corr', 'heatmap']",11,"['numpy', 'pandas', 'functools', 'seaborn', 'os\n']",5,"[1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",144,0.803,Bronze,,
base-model-with-0-804-auc-on-home-credit (1).py,NA,0,['NA'],['NA'],1,"['lightgbm\n', 'gc\n', 're\n', 'time\n', 'numpy', 'pandas', 'matplotlib', 'seaborn', 'lightgbm', 'sklearn', 'warnings\n']",11,"[1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",822,0.80448,None,3,
giba_post_processing_user_id_boost (1).R,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",130,0.81052,Bronze,32,
blend-boosting-for-home-credit-default-risk (1).py,"pd.read_csv,df_subs.iloc.head,plt.figure,sns.heatmap,plt.show,pd.DataFrame,avg_bleand_1.head,avg_bleand_1.to_csv,avg_bleand_1.copy,avg_bleand_2.to_csv",10,"['read_csv', 'iloc', 'figure', 'heatmap', 'show', 'DataFrame', 'head', 'to_csv', 'copy', 'to_csv']","['read_csv', 'iloc', 'figure', 'heatmap', 'show', 'DataFrame', 'head', 'to_csv', 'copy']",9,"['libraries\n', 'pandas', 'matplotlib', 'seaborn']",4,"[0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",93,0.81128,Bronze,13,
lightgbm_try.py,NA,0,['NA'],['NA'],1,"['numpy', 'pandas', 'matplotlib\n', 'matplotlib', 'seaborn', 'os\n', 'RandomUnderSampler\n', 'sklearn', 'lightgbm', 'scipy']",10,"[1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",229,,,,couldnt find
home_credit_default_with_lgbm (1).py,"print,print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.concat,print,buro_balance.groupby,None.size,buro_balance.groupby,None.max,buro_balance.groupby,None.min,buro_balance.groupby,None.value_counts,buro_counts.unstack,buro.join,gc.collect,print,pd.get_dummies,prev.groupby,None.mean,prev.groupby,None.count,gc.collect,print,pd.get_dummies,buro.groupby,None.mean,buro.groupby,None.count,gc.collect,print,LabelEncoder,le.fit_transform,POS_CASH.groupby,None.nunique,POS_CASH.groupby,None.max,POS_CASH.drop,print,le.fit_transform,credit_card.groupby,None.nunique,credit_card.groupby,None.max,credit_card.drop,print,payments.groupby,None.mean,payments.groupby,None.max,payments.groupby,None.min,print,df.merge,df.merge,df.merge,df.merge,df.merge,df.merge,df.merge,df.fillna,df.fillna,df.fillna,df.fillna,df.fillna,df.fillna,LabelEncoder,le.fit,le.transform,gc.collect,OneHotEncoder,ohe.fit_transform,None.toarray,pd.DataFrame,pd.concat,df.drop,gc.collect,train_test_split,lgb.Dataset,lgb.Dataset,lgb.train,print,lgbm.predict,pd.read_csv,submission.to_csv",92,"['print', 'print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'concat', 'print', 'groupby', 'size', 'groupby', 'max', 'groupby', 'min', 'groupby', 'value_counts', 'unstack', 'join', 'collect', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'collect', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'collect', 'print', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'fillna', 'fillna', 'fillna', 'fillna', 'fillna', 'fillna', 'LabelEncoder', 'fit', 'transform', 'collect', 'OneHotEncoder', 'fit_transform', 'toarray', 'DataFrame', 'concat', 'drop', 'collect', 'train_test_split', 'Dataset', 'Dataset', 'train', 'print', 'predict', 'read_csv', 'to_csv']","['print', 'read_csv', 'concat', 'groupby', 'size', 'max', 'min', 'value_counts', 'unstack', 'join', 'collect', 'get_dummies', 'mean', 'count', 'LabelEncoder', 'fit_transform', 'nunique', 'drop', 'merge', 'fillna', 'fit', 'transform', 'OneHotEncoder', 'toarray', 'DataFrame', 'train_test_split', 'Dataset', 'train', 'predict', 'to_csv']",30,"['numpy', 'pandas', 'os,', 'sklearn', 'lightgbm']",5,"[1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",210,,,,couldnt find
app-train-feat.py,NA,0,['NA'],['NA'],1,"['numpy', 'pandas', 'time\n', 'os\n', 'IPython', 'sklearn', 'preprocessing\n', 'xgboost', 'plotnine', 'tensorflow']",10,"[1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0
 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",538,,,,couldnt find
home_credit_submission.py,"warnings.filterwarnings,gc.enable,pd.read_csv,pd.read_csv,train.drop,test.drop,train.corr,corr.sort_values,pd.DataFrame,list,cols_use.remove,train.mean,train.std,test.mean,test.std,train.replace,test.replace,cols_use.append,cols_use.append,train.fillna,test.fillna,StandardScaler,train.select_dtypes,numeric.mean,numeric.fillna,testnumeric.columns.fillna,pd.concat,pd.concat,train.drop,test.drop,f_.upper,f_.upper,gc.collect,df.copy,df.drop,set,df.select_dtypes,numeric.fillna,StandardScaler,pd.concat,dfcol.fillna,dfcol.apply,LabelEncoder,OneHotEncoder,list,le.fit,le.transform,cat_cols.append,pd.get_dummies,pd.concat,gc.collect,df.drop,f_.upper,gc.collect,pd.read_csv,buro_bal.replace,pd.concat,None.drop,buro_bal.reset_index,None.groupby,None.count,None.max,buro_bal.groupby,None.agg,pd.Index,pd.concat,buro_bal.groupby,None.mean,f_.upper,gc.collect,print,transform_bb,pd.read_csv,buro.drop,buro.join,buro.drop,buro.groupby,None.mean,gc.collect,print,pd.read_csv,prevs.replace,prevs.replace,prevs.replace,prevs.replace,prevs.replace,prevs.groupby,None.count,prevs.map,transform_cats_and_nums,prevs.groupby,None.mean,gc.collect,print,pd.read_csv,pos.groupby,None.count,pos.map,transform_cats_and_nums,pos.groupby,None.mean,gc.collect,print,pd.read_csv,cc_bal.groupby,None.count,cc_bal.map,transform_cats_and_nums,cc_bal.groupby,None.mean,gc.collect,print,pd.read_csv,install.groupby,None.count,install.map,install.groupby,None.mean,gc.collect,print,transform_train_test,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,train.merge,test.merge,gc.collect,train.columns.duplicated,test.columns.duplicated,print,np.zeros,np.zeros,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,print,gc.collect,print,gc.enable,transform_dataset,KFold,train_model,test_preds.to_csv",150,"['filterwarnings', 'enable', 'read_csv', 'read_csv', 'drop', 'drop', 'corr', 'sort_values', 'DataFrame', 'list', 'remove', 'mean', 'std', 'mean', 'std', 'replace', 'replace', 'append', 'append', 'fillna', 'fillna', 'StandardScaler', 'select_dtypes', 'mean', 'fillna', 'columns', 'concat', 'concat', 'drop', 'drop', 'upper', 'upper', 'collect', 'copy', 'drop', 'set', 'select_dtypes', 'fillna', 'StandardScaler', 'concat', 'fillna', 'apply', 'LabelEncoder', 'OneHotEncoder', 'list', 'fit', 'transform', 'append', 'get_dummies', 'concat', 'collect', 'drop', 'upper', 'collect', 'read_csv', 'replace', 'concat', 'drop', 'reset_index', 'groupby', 'count', 'max', 'groupby', 'agg', 'Index', 'concat', 'groupby', 'mean', 'upper', 'collect', 'print', 'transform_bb', 'read_csv', 'drop', 'join', 'drop', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'count', 'map', 'transform_cats_and_nums', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'transform_cats_and_nums', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'transform_cats_and_nums', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'groupby', 'mean', 'collect', 'print', 'transform_train_test', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'columns', 'columns', 'print', 'zeros', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'print', 'collect', 'print', 'enable', 'transform_dataset', 'KFold', 'train_model', 'to_csv']","['filterwarnings', 'enable', 'read_csv', 'drop', 'corr', 'sort_values', 'DataFrame', 'list', 'remove', 'mean', 'std', 'replace', 'append', 'fillna', 'StandardScaler', 'select_dtypes', 'columns', 'concat', 'upper', 'collect', 'copy', 'set', 'apply', 'LabelEncoder', 'OneHotEncoder', 'fit', 'transform', 'get_dummies', 'reset_index', 'groupby', 'count', 'max', 'agg', 'Index', 'print', 'transform_bb', 'join', 'map', 'transform_cats_and_nums', 'transform_train_test', 'merge', 'zeros', 'enumerate', 'LGBMClassifier', 'predict_proba', 'transform_dataset', 'KFold', 'train_model', 'to_csv']",49,"['numpy', 'pandas', 'warnings\n', 'time\n', 'gc\n', 'os\n', 'lightgbm', 'sklearn', 'tqdm']",9,"[1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",325,,,,couldnt find
home-credit-lightgbm.py,"warnings.simplefilter,py.init_notebook_mode,get_ipython,None.run_line_magic,cf.go_offline,time.time,print,list,pd.get_dummies,print,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,gc.collect,pd.factorize,one_hot_encoder,df.replace,df.tolist,str,df.tolist,str,df.tolist,str,df.tolist,str,print,print,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,print,print,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,print,print,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,print,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,print,print,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,print,timer,print,df.join,gc.collect,timer,print,df.join,gc.collect,timer,print,df.join,gc.collect,timer,print,df.join,gc.collect,timer,print,df.join,gc.collect,gc.collect,print,df.notnull,df.isnull,print,gc.collect,train_df.drop,test_df.drop,train_df.fillna,test_df.fillna,list,a.remove,list,train_test_split,LGBMClassifier,clf_lgbm.fit,clf_lgbm.predict_proba,test_df.to_csv",144,"['simplefilter', 'init_notebook_mode', 'get_ipython', 'run_line_magic', 'go_offline', 'time', 'print', 'list', 'get_dummies', 'print', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'collect', 'factorize', 'one_hot_encoder', 'replace', 'tolist', 'str', 'tolist', 'str', 'tolist', 'str', 'tolist', 'str', 'print', 'print', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'print', 'print', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'print', 'print', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'print', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'print', 'print', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'print', 'timer', 'print', 'join', 'collect', 'timer', 'print', 'join', 'collect', 'timer', 'print', 'join', 'collect', 'timer', 'print', 'join', 'collect', 'timer', 'print', 'join', 'collect', 'collect', 'print', 'notnull', 'isnull', 'print', 'collect', 'drop', 'drop', 'fillna', 'fillna', 'list', 'remove', 'list', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']","['simplefilter', 'init_notebook_mode', 'get_ipython', 'run_line_magic', 'go_offline', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'collect', 'factorize', 'one_hot_encoder', 'replace', 'tolist', 'str', 'groupby', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'timer', 'notnull', 'isnull', 'fillna', 'remove', 'train_test_split', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv']",35,"['numpy', 'numpy\n', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'xgboost', 'catboost', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n', 'plotly', 'cufflinks']",15,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1
 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",919,,,,couldnt find
home-credit-default-risk.py,"os.walk,print,warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.tail,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,app_train.corr,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,plt.ylabel,plt.title,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,ext_data.drop,None.copy,plot_data.dropna,plot_data.dropna,np.corrcoef,plt.gca,ax.annotate,sns.PairGrid,grid.map_upper,grid.map_diag,grid.map_lower,plt.suptitle,SimpleImputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.copy,app_test.copy,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,app_train.drop,app_train.copy,list,app_test.copy,SimpleImputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.head,submit.to_csv,RandomForestClassifier,random_forest.fit,pd.DataFrame,random_forest.predict_proba,submit.to_csv,list,SimpleImputer,imputer.fit_transform,imputer.transform,MinMaxScaler,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_poly.fit,random_forest_poly.predict_proba,submit.to_csv,app_train_domain.drop,list,SimpleImputer,imputer.fit_transform,imputer.transform,MinMaxScaler,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_domain.fit,pd.DataFrame,random_forest_domain.predict_proba,submit.to_csv,df.sort_values,None.reset_index,df.sum,plt.figure,plt.subplot,ax.barh,ax.set_yticks,ax.set_yticklabels,plt.xlabel,plt.title,plt.show,plot_feature_importances,plot_feature_importances",198,"['walk', 'print', 'filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'tail', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'ylabel', 'title', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'dropna', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'SimpleImputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'drop', 'copy', 'list', 'copy', 'SimpleImputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'head', 'to_csv', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'to_csv', 'list', 'SimpleImputer', 'fit_transform', 'transform', 'MinMaxScaler', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'predict_proba', 'to_csv', 'drop', 'list', 'SimpleImputer', 'fit_transform', 'transform', 'MinMaxScaler', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'to_csv', 'sort_values', 'reset_index', 'sum', 'figure', 'subplot', 'barh', 'set_yticks', 'set_yticklabels', 'xlabel', 'title', 'show', 'plot_feature_importances', 'plot_feature_importances']","['walk', 'print', 'filterwarnings', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'tail', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'drop', 'copy', 'dropna', 'corrcoef', 'gca', 'annotate', 'PairGrid', 'map_upper', 'map_diag', 'map_lower', 'suptitle', 'SimpleImputer', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'merge', 'list', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv', 'RandomForestClassifier', 'reset_index', 'barh', 'set_yticks', 'set_yticklabels', 'show', 'plot_feature_importances']",75,"['numpy', 'pandas', 'os\n', 'sklearn', 'warnings\n', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",772,,,,couldnt find
hcdrparseforlibraries.py,"pd.DataFrame,os.listdir,findlibraries2,print,open,f.read,ast.parse,CallCollector,cc.visit,print,open,f.readlines,line.split,list_of_words.index,libraries.append,list_of_words.index,libraries.append,library.split,main_libraries.append,len,main",21,"['DataFrame', 'listdir', 'findlibraries2', 'print', 'open', 'read', 'parse', 'CallCollector', 'visit', 'print', 'open', 'readlines', 'split', 'index', 'append', 'index', 'append', 'split', 'append', 'len', 'main']","['DataFrame', 'listdir', 'findlibraries2', 'print', 'open', 'read', 'parse', 'CallCollector', 'visit', 'readlines', 'split', 'index', 'append', 'len', 'main']",15,"['pandas', 'bs4', 'os\n', 'ast_code', 'ast\n', 'y""\n']",,"[0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",,,,,couldnt find
home-credit.py,"warnings.filterwarnings,get_ipython,None.run_line_magic,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,app_train.append,None.reset_index,gc.collect,len,len,data.isnull,None.sum,pd.DataFrame,missing_dfmissing_df.sort_values,find_missing,dfapp_num_basic_col.describe,None.transpose,dfapp_cat_basic_col.describe,None.transpose,print,describe_df,df.mean,df.unique,dfdf.groupby,None.count,df.fillna,df.fillna,df.fillna,df.fillna,df.fillna,df.fillna,find_missing,find_missing,plt.subplots,sns.heatmap,plt.title,plt.show,app_cat_basic_col.remove,df.drop,df.fillna,datacolumn.value_counts,go.Figure,fig.update_layout,fig.show,datacolumn.value_counts,plt.figure,sns.barplot,plt.title,plt.xticks,plt.show,plot_categorical_pie,df.unique,plot_categorical_pie,plot_categorical,plot_categorical_pie,df.corr,plt.subplots,sns.heatmap,plt.title,df.unique,df.plot.hist,plt.xlabel,df.plot.hist,plt.xlabel,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,sns.boxplot,df.plot.hist,plt.xlabel,round,round,df.replace,df.fillna,df.plot.hist,plt.xlabel,len,find_missing,len,basic_features.append,len,dfdf.count,df.describe,df.head,pd.factorize,df.head,pd.get_dummies,len,len,df.drop,basic_features.remove,len,len,len,pd.concat,gc.collect,LogisticRegression,df.TARGET.isnull,df.TARGET.isnull,df.TARGET.notnull,df.TARGET.notnull,None.drop,find_missing,df.TARGET.notnull,df.TARGET.isnull,None.drop,log_reg.fit,log_reg.predict_proba,len,submit.to_csv,y_train.value_counts,SMOTE,smt.fit_sample,log_reg.fit,submit.to_csv",124,"['filterwarnings', 'get_ipython', 'run_line_magic', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'append', 'reset_index', 'collect', 'len', 'len', 'isnull', 'sum', 'DataFrame', 'sort_values', 'find_missing', 'describe', 'transpose', 'describe', 'transpose', 'print', 'describe_df', 'mean', 'unique', 'groupby', 'count', 'fillna', 'fillna', 'fillna', 'fillna', 'fillna', 'fillna', 'find_missing', 'find_missing', 'subplots', 'heatmap', 'title', 'show', 'remove', 'drop', 'fillna', 'value_counts', 'Figure', 'update_layout', 'show', 'value_counts', 'figure', 'barplot', 'title', 'xticks', 'show', 'plot_categorical_pie', 'unique', 'plot_categorical_pie', 'plot_categorical', 'plot_categorical_pie', 'corr', 'subplots', 'heatmap', 'title', 'unique', 'plot', 'xlabel', 'plot', 'xlabel', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'boxplot', 'plot', 'xlabel', 'round', 'round', 'replace', 'fillna', 'plot', 'xlabel', 'len', 'find_missing', 'len', 'append', 'len', 'count', 'describe', 'head', 'factorize', 'head', 'get_dummies', 'len', 'len', 'drop', 'remove', 'len', 'len', 'len', 'concat', 'collect', 'LogisticRegression', 'TARGET', 'TARGET', 'TARGET', 'TARGET', 'drop', 'find_missing', 'TARGET', 'TARGET', 'drop', 'fit', 'predict_proba', 'len', 'to_csv', 'value_counts', 'SMOTE', 'fit_sample', 'fit', 'to_csv']","['filterwarnings', 'get_ipython', 'run_line_magic', 'read_csv', 'append', 'reset_index', 'collect', 'len', 'isnull', 'sum', 'DataFrame', 'sort_values', 'find_missing', 'describe', 'transpose', 'print', 'describe_df', 'mean', 'unique', 'groupby', 'count', 'fillna', 'subplots', 'heatmap', 'title', 'show', 'remove', 'drop', 'value_counts', 'Figure', 'update_layout', 'figure', 'barplot', 'xticks', 'plot_categorical_pie', 'plot_categorical', 'corr', 'plot', 'xlabel', 'cut', 'head', 'bar', 'ylabel', 'boxplot', 'round', 'replace', 'factorize', 'get_dummies', 'concat', 'LogisticRegression', 'TARGET', 'fit', 'predict_proba', 'to_csv', 'SMOTE', 'fit_sample']",56,"['numpy', 'pandas', 'matplotlib', 'seaborn', 'plotly', 'gc\n', 'warnings\n', 'time\n', 'sklearn', 'imblearn']",10,"[1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",800,,,,couldnt find
home-credit (1).py,"warnings.filterwarnings,get_ipython,None.run_line_magic,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,app_train.append,None.reset_index,gc.collect,len,len,data.isnull,None.sum,pd.DataFrame,missing_dfmissing_df.sort_values,find_missing,dfapp_num_basic_col.describe,None.transpose,dfapp_cat_basic_col.describe,None.transpose,print,describe_df,df.mean,df.unique,dfdf.groupby,None.count,df.fillna,df.fillna,df.fillna,df.fillna,df.fillna,df.fillna,find_missing,find_missing,plt.subplots,sns.heatmap,plt.title,plt.show,app_cat_basic_col.remove,df.drop,df.fillna,datacolumn.value_counts,go.Figure,fig.update_layout,fig.show,datacolumn.value_counts,plt.figure,sns.barplot,plt.title,plt.xticks,plt.show,plot_categorical_pie,df.unique,plot_categorical_pie,plot_categorical,plot_categorical_pie,df.corr,plt.subplots,sns.heatmap,plt.title,df.unique,df.plot.hist,plt.xlabel,df.plot.hist,plt.xlabel,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,sns.boxplot,df.plot.hist,plt.xlabel,round,round,df.replace,df.fillna,df.plot.hist,plt.xlabel,len,find_missing,len,basic_features.append,len,dfdf.count,df.describe,df.head,pd.factorize,df.head,pd.get_dummies,len,len,df.drop,basic_features.remove,len,len,len,pd.concat,gc.collect,LogisticRegression,df.TARGET.isnull,df.TARGET.isnull,df.TARGET.notnull,df.TARGET.notnull,None.drop,find_missing,df.TARGET.notnull,df.TARGET.isnull,None.drop,log_reg.fit,log_reg.predict_proba,len,submit.to_csv,y_train.value_counts,SMOTE,smt.fit_sample,log_reg.fit,submit.to_csv",124,"['filterwarnings', 'get_ipython', 'run_line_magic', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'append', 'reset_index', 'collect', 'len', 'len', 'isnull', 'sum', 'DataFrame', 'sort_values', 'find_missing', 'describe', 'transpose', 'describe', 'transpose', 'print', 'describe_df', 'mean', 'unique', 'groupby', 'count', 'fillna', 'fillna', 'fillna', 'fillna', 'fillna', 'fillna', 'find_missing', 'find_missing', 'subplots', 'heatmap', 'title', 'show', 'remove', 'drop', 'fillna', 'value_counts', 'Figure', 'update_layout', 'show', 'value_counts', 'figure', 'barplot', 'title', 'xticks', 'show', 'plot_categorical_pie', 'unique', 'plot_categorical_pie', 'plot_categorical', 'plot_categorical_pie', 'corr', 'subplots', 'heatmap', 'title', 'unique', 'plot', 'xlabel', 'plot', 'xlabel', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'boxplot', 'plot', 'xlabel', 'round', 'round', 'replace', 'fillna', 'plot', 'xlabel', 'len', 'find_missing', 'len', 'append', 'len', 'count', 'describe', 'head', 'factorize', 'head', 'get_dummies', 'len', 'len', 'drop', 'remove', 'len', 'len', 'len', 'concat', 'collect', 'LogisticRegression', 'TARGET', 'TARGET', 'TARGET', 'TARGET', 'drop', 'find_missing', 'TARGET', 'TARGET', 'drop', 'fit', 'predict_proba', 'len', 'to_csv', 'value_counts', 'SMOTE', 'fit_sample', 'fit', 'to_csv']","['filterwarnings', 'get_ipython', 'run_line_magic', 'read_csv', 'append', 'reset_index', 'collect', 'len', 'isnull', 'sum', 'DataFrame', 'sort_values', 'find_missing', 'describe', 'transpose', 'print', 'describe_df', 'mean', 'unique', 'groupby', 'count', 'fillna', 'subplots', 'heatmap', 'title', 'show', 'remove', 'drop', 'value_counts', 'Figure', 'update_layout', 'figure', 'barplot', 'xticks', 'plot_categorical_pie', 'plot_categorical', 'corr', 'plot', 'xlabel', 'cut', 'head', 'bar', 'ylabel', 'boxplot', 'round', 'replace', 'factorize', 'get_dummies', 'concat', 'LogisticRegression', 'TARGET', 'fit', 'predict_proba', 'to_csv', 'SMOTE', 'fit_sample']",56,"['numpy', 'pandas', 'matplotlib', 'seaborn', 'plotly', 'gc\n', 'warnings\n', 'time\n', 'sklearn', 'imblearn']",10,"[1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",800,,,,couldnt find
home-credit-risk-soln-78-3.py,"get_ipython,None.run_line_magic,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.DataFrame,pd.Series,print,all_models.to_csv,data.head,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,print,missing_values_table,missing_values.head,data.dtypes.value_counts,data.select_dtypes,None.nunique,pd.concat,pd.get_dummies,one_hot_df.head,test.head,data.head,buro.head,buro_balance.groupby,None.size,buro_balance.groupby,None.max,buro_balance.groupby,None.min,buro_grouped_size.head,buro_grouped_max.head,buro_grouped_min.head,buro_balance.head,buro_balance.groupby,None.value_counts,buro_counts.head,buro_counts.unstack,buro_counts_unstacked.head,buro_grouped_size.head,buro_grouped_max.head,buro_grouped_min.head,buro.join,buro.head,prev.head,pd.get_dummies,prev.head,prev.groupby,None.mean,avg_prev.head,prev.groupby,None.count,cnt_prev.head,pd.get_dummies,buro.head,buro.groupby,None.mean,avg_buro.head,buro.groupby,None.count,POS_CASH.head,LabelEncoder,le.fit_transform,POS_CASH.groupby,None.nunique,POS_CASH.groupby,None.max,POS_CASH.drop,credit_card.head,le.fit_transform,credit_card.groupby,None.nunique,credit_card.groupby,None.max,credit_card.drop,payments.head,payments.groupby,None.mean,payments.groupby,None.max,payments.groupby,None.min,data.merge,data.head,test.merge,test.head,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.head,test.head,data.isnull,None.mean,data.isnull,None.mean,data.head,gc.enable,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test.to_csv",133,"['get_ipython', 'run_line_magic', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'DataFrame', 'Series', 'print', 'to_csv', 'head', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'nunique', 'concat', 'get_dummies', 'head', 'head', 'head', 'head', 'groupby', 'size', 'groupby', 'max', 'groupby', 'min', 'head', 'head', 'head', 'head', 'groupby', 'value_counts', 'head', 'unstack', 'head', 'head', 'head', 'head', 'join', 'head', 'head', 'get_dummies', 'head', 'groupby', 'mean', 'head', 'groupby', 'count', 'head', 'get_dummies', 'head', 'groupby', 'mean', 'head', 'groupby', 'count', 'head', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'head', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'head', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'merge', 'head', 'merge', 'head', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'head', 'head', 'isnull', 'mean', 'isnull', 'mean', 'head', 'enable', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv']","['get_ipython', 'run_line_magic', 'read_csv', 'DataFrame', 'Series', 'print', 'to_csv', 'head', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'nunique', 'get_dummies', 'groupby', 'size', 'max', 'min', 'value_counts', 'unstack', 'join', 'mean', 'count', 'LabelEncoder', 'fit_transform', 'drop', 'merge', 'enable', 'KFold', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'collect']",41,"['pandas', 'numpy', 'matplotlib', 'seaborn', 'os\n', 'glob\n', 'sklearn', 'xgboost', 'gc\n', 'skopt', 'lightgbm']",11,"[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",688,,,,couldnt find
features.py,"pd.set_option,get_ipython,None.run_line_magic,pd.read_csv,bureau_balance.STATUS.map,None.map,None.interpolate,bureau_balance.STATUS.map,bureau_balance.MONTHS_BALANCE.min,bureau_balance.groupby,None.count,bureau_balance.groupby,None.sum,bureau_balance.groupby,None.sum,bureau_balance.locbureau_balance.MONTHS_BALANCE.groupby,None.sum,bureau_balance.locbureau_balance.MONTHS_BALANCE.groupby,None.sum,bureau_balance.groupby,None.sum,pd.DataFrame,None.reset_index,None.fillna,gc.collect,pd.read_csv,bureau.sort_values,bureau.DAYS_CREDIT.min,bureau.DAYS_CREDIT.max,bureau.DAYS_CREDIT.min,bureau.groupby,None.count,bureau.locbureau.CREDIT_ACTIVE.groupby,None.count,bureau.locbureau.CREDIT_ACTIVE.groupby,None.count,bureau.locbureau.CREDIT_ACTIVE.groupby,None.count,bureau.groupby,None.max,bureau.groupby,None.min,bureau.groupby,None.max,bureau.groupby,None.diff,iter,bureau.application_interval.map,bureau.groupby,None.mean,bureau.groupby,None.agg,None.fillna,bureau.groupby,None.max,bureau.locbureau.CREDIT_ACTIVE.groupby,None.sum,bureau.locbureau.CREDIT_ACTIVE.groupby,None.max,bureau.DAYS_CREDIT_ENDDATE.map,bureau.locbureau.DAYS_CREDIT_ENDDATE.groupby,None.mean,bureau.groupby,None.sum,bureau.groupby,None.mean,bureau.groupby,None.max,bureau.groupby,None.mean,None.fillna,bureau.groupby,None.max,None.fillna,bureau.groupby,None.sum,None.fillna,bureau.groupby,None.sum,bureau.groupby,None.mean,bureau.locbureau.CREDIT_ACTIVE.groupby,None.sum,bureau.locbureau.CREDIT_ACTIVE.groupby,None.mean,bureau.locbureau.CREDIT_ACTIVE.groupby,None.sum,bureau.locbureau.CREDIT_ACTIVE.groupby,None.mean,bureau.locbureau.CREDIT_ACTIVE.groupby,None.sum,bureau.locbureau.CREDIT_ACTIVE.groupby,None.mean,bureau.locbureau.CREDIT_ACTIVE.groupby,None.sum,bureau.locbureau.CREDIT_ACTIVE.groupby,None.mean,bur_active_total_amount.map,bur_active_total_debt.map,bureau.groupby,None.mean,bureau.groupby,None.max,bureau.groupby,None.mean,bureau.groupby,None.sum,bureau.locbureau.CREDIT_ACTIVE.groupby,None.sum,float,None.groupby,None.mean,pd.DataFrame,None.reset_index,bureau_num_featurefill0_list.fillna,pd.get_dummies,bureau_cat.groupby,None.mean,None.reset_index,gc.collect,bureau.merge,bureau_bb.groupby,None.mean,bureau_bb.groupby,None.sum,bureau_bb.groupby,None.sum,bureau_bb.groupby,None.max,bureau_bb.groupby,None.max,bureau_bb.groupby,None.sum,bureau_bb.groupby,None.max,bureau_bb.groupby,None.sum,bureau_bb.groupby,None.max,bureau_bb.groupby,None.max,bureau_bb.groupby,None.sum,bureau_bb.groupby,None.mean,pd.DataFrame,None.reset_index,bureau_num_feature.merge,None.merge,print,bureau_feature.to_csv,pd.set_option,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.read_csv,pd.read_csv,credit_card_balance.sort_values,credit_card_balance.groupby,None.nunique,credit_card_balance.CNT_INSTALMENT_MATURE_CUM.map,credit_card_balance.groupby,None.sum,None.reset_index,ccb_temp.groupby,None.mean,ccb_temp.groupby,None.sum,credit_card_balance.groupby,None.mean,None.reset_index,ccb_temp.groupby,None.mean,credit_card_balance.groupby,None.max,ccb_temp.groupby,None.sum,credit_card_balance.loccredit_card_balance.CNT_DRAWINGS_CURRENT.groupby,None.sum,None.reset_index,ccb_temp.AMT_DRAWINGS_CURRENTccb_temp.CNT_DRAWINGS_CURRENT.fillna,ccb_temp.groupby,None.mean,None.fillna,credit_card_balance.groupby,None.agg,credit_card_balance.groupby,None.max,None.reset_index,last_month_credit.merge,last_month_credit.groupby,None.sum,last_month_credit.loclast_month_credit.NAME_CONTRACT_STATUS.groupby,None.sum,last_month_credit.groupby,None.sum,last_month_credit.groupby,None.sum,ccb_temp.groupby,None.sum,ccb_temp.groupby,None.sum,ccb_temp.groupby,None.sum,ccb_temp.groupby,None.sum,credit_card_balance.groupby,None.max,None.reset_index,ccb_temp.groupby,None.max,ccb_temp.groupby,None.sum,ccb_temp.groupby,None.max,ccb_temp.groupby,None.sum,pd.DataFrame,None.reset_index,ccb_feature.to_csv,pd.set_option,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.read_csv,installments_payments.sort_values,pd.read_csv,previous_application.sort_values,installments_payments.merge,recent_record.groupby,None.max,recent_record.groupby,None.sum,recent_record.groupby,None.sum,recent_record.DAYS_INSTALMENTrecent_record.DAYS_ENTRY_PAYMENT.map,None.fillna,recent_record.AMT_INSTALMENTrecent_record.AMT_PAYMENT.map,None.fillna,recent_record.groupby,None.sum,recent_record.groupby,None.sum,ip_temp1.groupby,None.sum,ip_temp2.groupby,None.sum,gc.collect,installments_payments.groupby,None.nunique,installments_payments.groupby,None.count,installments_payments.NUM_INSTALMENT_VERSION.map,installments_payments.groupby,None.sum,None.map,installments_payments.groupby,None.sum,None.map,None.reset_index,None.groupby,None.sum,installments_payments.groupby,None.nunique,None.reset_index,ip_temp.groupby,None.sum,ip_temp.groupby,None.mean,installments_payments.groupby,None.max,None.reset_index,ip_temp.groupby,None.mean,ip_temp.groupby,None.max,installments_payments.DAYS_INSTALMENTinstallments_payments.DAYS_ENTRY_PAYMENT.map,None.fillna,installments_payments.AMT_INSTALMENTinstallments_payments.AMT_PAYMENT.map,None.fillna,installments_payments.groupby,None.sum,installments_payments.groupby,None.sum,ip_temp1.groupby,None.sum,ip_temp2.groupby,None.sum,gc.collect,installments_payments.groupby,None.sum,installments_payments.groupby,None.sum,ip_1y.groupby,None.count,ip_1y.groupby,None.sum,None.map,None.reset_index,None.groupby,None.sum,ip_1y.groupby,None.sum,ip_1y.groupby,None.sum,ip_1y.groupby,None.max,None.reset_index,ip_temp.groupby,None.mean,ip_temp1.groupby,None.sum,ip_temp2.groupby,None.sum,gc.collect,ip_1y.groupby,None.sum,ip_1y.groupby,None.sum,ip_6m.groupby,None.count,ip_6m.groupby,None.sum,None.map,None.reset_index,None.groupby,None.sum,ip_6m.groupby,None.sum,ip_6m.groupby,None.sum,ip_6m.groupby,None.max,None.reset_index,ip_temp.groupby,None.mean,ip_temp1.groupby,None.sum,ip_temp2.groupby,None.sum,gc.collect,ip_6m.groupby,None.sum,ip_6m.groupby,None.sum,pd.DataFrame,None.fillna,pd.DataFrame,None.reset_index,None.fillna,pd.DataFrame,None.reset_index,None.fillna,ip_feature.merge,None.merge,ip_feature.ip_total_late_times_1y.notnull,None.map,ip_feature.ip_total_late_times_6m.notnull,None.map,installments_payments.groupby,None.max,None.map,installments_payments.groupby,None.max,None.map,pd.DataFrame,None.reset_index,previous_application.merge,pd.get_dummies,None.groupby,None.sum,None.reset_index,pd.get_dummies,None.groupby,None.sum,None.reset_index,ip_feature.merge,None.merge,range,ip_feature.iloci.fillna,ip_feature.to_csv,pd.set_option,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.read_csv,pd.read_csv,POS_CASH_balance.sort_values,POS_CASH_balance.groupby,None.nunique,POS_CASH_balance.groupby,None.count,POS_CASH_balance.groupby,None.max,POS_CASH_balance.groupby,None.nunique,None.map,None.reset_index,None.rename,POS_CASH_balance.groupby,None.count,None.reset_index,pcb_temp.merge,pcb_temp.groupby,None.sum,POS_CASH_balance.groupby,None.mean,None.reset_index,pcb_temp.groupby,None.mean,POS_CASH_balance.groupby,None.max,None.reset_index,pcb_temp.merge,pcb_temp.MONTHS_BALANCE.map,pcb_temp.NAME_CONTRACT_STATUS.map,pcb_temp.groupby,None.count,POS_CASH_balance.groupby,None.max,None.reset_index,pcb_temp.groupby,None.max,pcb_temp.groupby,None.sum,pcb_temp.groupby,None.max,pcb_temp.groupby,None.sum,POS_CASH_balance.locPOS_CASH_balance.MONTHS_BALANCE.groupby,None.max,None.reset_index,pcb_temp.groupby,None.max,pcb_temp.groupby,None.sum,pcb_temp.groupby,None.max,pcb_temp.groupby,None.sum,POS_CASH_balance.locPOS_CASH_balance.MONTHS_BALANCE.groupby,None.max,None.reset_index,pcb_temp.groupby,None.max,pcb_temp.groupby,None.sum,pcb_temp.groupby,None.max,pcb_temp.groupby,None.sum,pd.DataFrame,None.reset_index,POS_CASH_balance.groupby,None.max,None.reset_index,pcb_temp.merge,pd.get_dummies,pcb_temp_dummy.locpcb_temp_dummy.pcb_end_as_Active.drop,None.groupby,None.sum,None.reset_index,gc.collect,pcb_num.merge,pcb_feature.pcb_total_dpd_days.map,pcb_feature.pcb_total_largedpd_days.map,pcb_feature.pcb_total_dpd_days_1y.map,pcb_feature.pcb_total_largedpd_days_1y.map,pcb_feature.pcb_total_dpd_days_2y.map,pcb_feature.pcb_total_largedpd_days_2y.map,pcb_feature.to_csv,pd.set_option,get_ipython,None.run_line_magic,warnings.filterwarnings,pd.read_csv,previous_application.sort_values,range,cat_col.append,pd.concat,None.fillna,cat_pa.HOUR_APPR_PROCESS_START.astype,cat_pa.NFLAG_LAST_APPL_IN_DAY.astype,cat_pa.NFLAG_INSURED_ON_APPROVAL.astype,pd.get_dummies,None.drop,pd.get_dummies,None.drop,pd.get_dummies,pd.get_dummies,None.drop,pd.get_dummies,None.drop,pd.get_dummies,None.drop,pd.get_dummies,None.drop,pd.get_dummies,None.drop,pd.get_dummies,None.drop,pd.get_dummies,None.drop,pd.get_dummies,None.drop,pd.concat,gc.collect,cat_pa_dummy.drop,None.groupby,None.mean,None.reset_index,range,num_col.append,previous_application.ilocnum_col.drop,range,num_pa.iloci.map,num_pa.AMT_APPLICATIONnum_pa.AMT_CREDIT.map,num_pa.AMT_APPLICATIONnum_pa.AMT_CREDIT.map,num_pa.DAYS_DECISION.min,a.min,a.max,a.min,num_pa.groupby,None.count,num_pa.groupby,None.mean,num_pa.groupby,None.mean,num_pa.groupby,None.mean,num_pa.groupby,None.max,num_pa.groupby,None.max,num_pa.groupby,None.sum,num_pa.groupby,None.sum,num_pa.groupby,None.sum,num_pa.groupby,None.sum,num_pa.groupby,None.mean,num_pa.groupby,None.sum,num_pa.groupby,None.mean,num_pa.groupby,None.sum,num_pa.groupby,None.sum,num_pa.groupby,None.sum,num_pa.groupby,None.mean,num_pa.groupby,None.max,num_pa.groupby,None.sum,num_pa.groupby,None.mean,num_pa.groupby,None.max,num_pa.groupby,None.sum,num_pa.groupby,None.mean,num_pa.groupby,None.max,num_pa.groupby,None.sum,num_pa.groupby,None.mean,num_pa.groupby,None.max,num_pa.groupby,None.sum,num_pa.groupby,None.mean,num_pa.groupby,None.max,num_pa.groupby,None.sum,num_pa.groupby,None.agg,None.map,num_pa.groupby,None.max,num_pa.groupby,None.min,num_pa.groupby,None.diff,iter,num_pa.application_interval.map,num_pa.groupby,None.mean,num_pa.groupby,None.agg,None.fillna,num_pa.groupby,None.min,num_pa.groupby,None.max,num_pa.groupby,None.max,num_pa.groupby,None.mean,num_pa.groupby,None.min,pd.DataFrame,None.reset_index,pa_num.merge,gc.collect,pa_feature.to_csv,pd.read_csv,pd.read_csv,bureau.AMT_CREDIT_SUM.median,bureau.AMT_CREDIT_SUM.fillna,bureau.AMT_CREDIT_SUM_DEBT.median,bureau.AMT_CREDIT_SUM_DEBT.fillna,bureau_balance.STATUS.replace,None.replace,None.astype,bureau_balance.groupby,None.max,None.reset_index,bureau.merge,None.fillna,cluter_bur.drop,Normalizer,None.fit_transform,GaussianMixture,gmm.fit,gmm.predict_proba,np.round,pd.concat,bur_cluster.groupby,None.mean,None.reset_index,bur_cluster.to_csv,time.time,pd.read_csv,None.sort_values,pd.read_csv,None.sort_values,pd.read_csv,None.sort_values,pd.read_csv,None.sort_values,pd.read_csv,None.sort_values,pd.read_csv,None.sort_values,pd.read_csv,None.sort_values,pd.read_csv,None.sort_values,bureau_balance.STATUS.map,previous.NAME_CONTRACT_STATUS.map,previous.NAME_YIELD_GROUP.map,dfcol.replace,replace_day_outliers,replace_day_outliers,replace_day_outliers,replace_day_outliers,replace_day_outliers,replace_day_outliers,replace_day_outliers,replace_day_outliers,pd.Timestamp,pd.to_timedelta,pd.to_timedelta,bureau_balance.drop,bureau_balance.drop,pd.to_timedelta,previous.drop,pd.to_timedelta,cash.drop,pd.to_timedelta,credit.drop,pd.to_timedelta,installments.drop,ft.EntitySet,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,es.entity_from_dataframe,ft.Relationship,ft.Relationship,ft.Relationship,ft.Relationship,ft.Relationship,ft.Relationship,ft.Relationship,ft.Relationship,es.add_relationships,gc.collect,print,time.time,ft.dfs,print,time_features.reset_index,None.to_csv,ft.dfs,time_features_test.reset_index,None.to_csv,pd.read_csv,pd.read_csv,pd.get_dummies,pd.get_dummies,full_df.align,test_df.head,test_df.count,full_df.head,test_df.head,features.drop,test_features.drop,pd.get_dummies,pd.get_dummies,features.align,LabelEncoder,enumerate,label_encoder.fit_transform,label_encoder.transform,cat_indices.append,ValueError,print,print,list,np.array,np.array,KFold,np.zeros,np.zeros,np.zeros,k_fold.split,lgb.LGBMClassifier,model.fit,model.predict_proba,model.predict_proba,valid_scores.append,train_scores.append,gc.enable,gc.collect,pd.DataFrame,pd.DataFrame,roc_auc_score,valid_scores.append,train_scores.append,list,fold_names.append,pd.DataFrame,model,print,print,submission.to_csv",761,"['set_option', 'get_ipython', 'run_line_magic', 'read_csv', 'STATUS', 'map', 'interpolate', 'STATUS', 'MONTHS_BALANCE', 'groupby', 'count', 'groupby', 'sum', 'groupby', 'sum', 'locbureau_balance', 'sum', 'locbureau_balance', 'sum', 'groupby', 'sum', 'DataFrame', 'reset_index', 'fillna', 'collect', 'read_csv', 'sort_values', 'DAYS_CREDIT', 'DAYS_CREDIT', 'DAYS_CREDIT', 'groupby', 'count', 'locbureau', 'count', 'locbureau', 'count', 'locbureau', 'count', 'groupby', 'max', 'groupby', 'min', 'groupby', 'max', 'groupby', 'diff', 'iter', 'application_interval', 'groupby', 'mean', 'groupby', 'agg', 'fillna', 'groupby', 'max', 'locbureau', 'sum', 'locbureau', 'max', 'DAYS_CREDIT_ENDDATE', 'locbureau', 'mean', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'mean', 'fillna', 'groupby', 'max', 'fillna', 'groupby', 'sum', 'fillna', 'groupby', 'sum', 'groupby', 'mean', 'locbureau', 'sum', 'locbureau', 'mean', 'locbureau', 'sum', 'locbureau', 'mean', 'locbureau', 'sum', 'locbureau', 'mean', 'locbureau', 'sum', 'locbureau', 'mean', 'map', 'map', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'mean', 'groupby', 'sum', 'locbureau', 'sum', 'float', 'groupby', 'mean', 'DataFrame', 'reset_index', 'fillna', 'get_dummies', 'groupby', 'mean', 'reset_index', 'collect', 'merge', 'groupby', 'mean', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'max', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'max', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'mean', 'DataFrame', 'reset_index', 'merge', 'merge', 'print', 'to_csv', 'set_option', 'get_ipython', 'run_line_magic', 'filterwarnings', 'read_csv', 'read_csv', 'sort_values', 'groupby', 'nunique', 'CNT_INSTALMENT_MATURE_CUM', 'groupby', 'sum', 'reset_index', 'groupby', 'mean', 'groupby', 'sum', 'groupby', 'mean', 'reset_index', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'sum', 'loccredit_card_balance', 'sum', 'reset_index', 'AMT_DRAWINGS_CURRENTccb_temp', 'groupby', 'mean', 'fillna', 'groupby', 'agg', 'groupby', 'max', 'reset_index', 'merge', 'groupby', 'sum', 'loclast_month_credit', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'max', 'reset_index', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'max', 'groupby', 'sum', 'DataFrame', 'reset_index', 'to_csv', 'set_option', 'get_ipython', 'run_line_magic', 'filterwarnings', 'read_csv', 'sort_values', 'read_csv', 'sort_values', 'merge', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'sum', 'DAYS_INSTALMENTrecent_record', 'fillna', 'AMT_INSTALMENTrecent_record', 'fillna', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'collect', 'groupby', 'nunique', 'groupby', 'count', 'NUM_INSTALMENT_VERSION', 'groupby', 'sum', 'map', 'groupby', 'sum', 'map', 'reset_index', 'groupby', 'sum', 'groupby', 'nunique', 'reset_index', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'max', 'reset_index', 'groupby', 'mean', 'groupby', 'max', 'DAYS_INSTALMENTinstallments_payments', 'fillna', 'AMT_INSTALMENTinstallments_payments', 'fillna', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'collect', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'count', 'groupby', 'sum', 'map', 'reset_index', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'max', 'reset_index', 'groupby', 'mean', 'groupby', 'sum', 'groupby', 'sum', 'collect', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'count', 'groupby', 'sum', 'map', 'reset_index', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'max', 'reset_index', 'groupby', 'mean', 'groupby', 'sum', 'groupby', 'sum', 'collect', 'groupby', 'sum', 'groupby', 'sum', 'DataFrame', 'fillna', 'DataFrame', 'reset_index', 'fillna', 'DataFrame', 'reset_index', 'fillna', 'merge', 'merge', 'ip_total_late_times_1y', 'map', 'ip_total_late_times_6m', 'map', 'groupby', 'max', 'map', 'groupby', 'max', 'map', 'DataFrame', 'reset_index', 'merge', 'get_dummies', 'groupby', 'sum', 'reset_index', 'get_dummies', 'groupby', 'sum', 'reset_index', 'merge', 'merge', 'range', 'iloci', 'to_csv', 'set_option', 'get_ipython', 'run_line_magic', 'filterwarnings', 'read_csv', 'read_csv', 'sort_values', 'groupby', 'nunique', 'groupby', 'count', 'groupby', 'max', 'groupby', 'nunique', 'map', 'reset_index', 'rename', 'groupby', 'count', 'reset_index', 'merge', 'groupby', 'sum', 'groupby', 'mean', 'reset_index', 'groupby', 'mean', 'groupby', 'max', 'reset_index', 'merge', 'MONTHS_BALANCE', 'NAME_CONTRACT_STATUS', 'groupby', 'count', 'groupby', 'max', 'reset_index', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'max', 'groupby', 'sum', 'locPOS_CASH_balance', 'max', 'reset_index', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'max', 'groupby', 'sum', 'locPOS_CASH_balance', 'max', 'reset_index', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'max', 'groupby', 'sum', 'DataFrame', 'reset_index', 'groupby', 'max', 'reset_index', 'merge', 'get_dummies', 'locpcb_temp_dummy', 'groupby', 'sum', 'reset_index', 'collect', 'merge', 'pcb_total_dpd_days', 'pcb_total_largedpd_days', 'pcb_total_dpd_days_1y', 'pcb_total_largedpd_days_1y', 'pcb_total_dpd_days_2y', 'pcb_total_largedpd_days_2y', 'to_csv', 'set_option', 'get_ipython', 'run_line_magic', 'filterwarnings', 'read_csv', 'sort_values', 'range', 'append', 'concat', 'fillna', 'HOUR_APPR_PROCESS_START', 'NFLAG_LAST_APPL_IN_DAY', 'NFLAG_INSURED_ON_APPROVAL', 'get_dummies', 'drop', 'get_dummies', 'drop', 'get_dummies', 'get_dummies', 'drop', 'get_dummies', 'drop', 'get_dummies', 'drop', 'get_dummies', 'drop', 'get_dummies', 'drop', 'get_dummies', 'drop', 'get_dummies', 'drop', 'get_dummies', 'drop', 'concat', 'collect', 'drop', 'groupby', 'mean', 'reset_index', 'range', 'append', 'ilocnum_col', 'range', 'iloci', 'AMT_APPLICATIONnum_pa', 'AMT_APPLICATIONnum_pa', 'DAYS_DECISION', 'min', 'max', 'min', 'groupby', 'count', 'groupby', 'mean', 'groupby', 'mean', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'sum', 'groupby', 'agg', 'map', 'groupby', 'max', 'groupby', 'min', 'groupby', 'diff', 'iter', 'application_interval', 'groupby', 'mean', 'groupby', 'agg', 'fillna', 'groupby', 'min', 'groupby', 'max', 'groupby', 'max', 'groupby', 'mean', 'groupby', 'min', 'DataFrame', 'reset_index', 'merge', 'collect', 'to_csv', 'read_csv', 'read_csv', 'AMT_CREDIT_SUM', 'AMT_CREDIT_SUM', 'AMT_CREDIT_SUM_DEBT', 'AMT_CREDIT_SUM_DEBT', 'STATUS', 'replace', 'astype', 'groupby', 'max', 'reset_index', 'merge', 'fillna', 'drop', 'Normalizer', 'fit_transform', 'GaussianMixture', 'fit', 'predict_proba', 'round', 'concat', 'groupby', 'mean', 'reset_index', 'to_csv', 'time', 'read_csv', 'sort_values', 'read_csv', 'sort_values', 'read_csv', 'sort_values', 'read_csv', 'sort_values', 'read_csv', 'sort_values', 'read_csv', 'sort_values', 'read_csv', 'sort_values', 'read_csv', 'sort_values', 'STATUS', 'NAME_CONTRACT_STATUS', 'NAME_YIELD_GROUP', 'replace', 'replace_day_outliers', 'replace_day_outliers', 'replace_day_outliers', 'replace_day_outliers', 'replace_day_outliers', 'replace_day_outliers', 'replace_day_outliers', 'replace_day_outliers', 'Timestamp', 'to_timedelta', 'to_timedelta', 'drop', 'drop', 'to_timedelta', 'drop', 'to_timedelta', 'drop', 'to_timedelta', 'drop', 'to_timedelta', 'drop', 'EntitySet', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'entity_from_dataframe', 'Relationship', 'Relationship', 'Relationship', 'Relationship', 'Relationship', 'Relationship', 'Relationship', 'Relationship', 'add_relationships', 'collect', 'print', 'time', 'dfs', 'print', 'reset_index', 'to_csv', 'dfs', 'reset_index', 'to_csv', 'read_csv', 'read_csv', 'get_dummies', 'get_dummies', 'align', 'head', 'count', 'head', 'head', 'drop', 'drop', 'get_dummies', 'get_dummies', 'align', 'LabelEncoder', 'enumerate', 'fit_transform', 'transform', 'append', 'ValueError', 'print', 'print', 'list', 'array', 'array', 'KFold', 'zeros', 'zeros', 'zeros', 'split', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'append', 'append', 'enable', 'collect', 'DataFrame', 'DataFrame', 'roc_auc_score', 'append', 'append', 'list', 'append', 'DataFrame', 'model', 'print', 'print', 'to_csv']","['set_option', 'get_ipython', 'run_line_magic', 'read_csv', 'STATUS', 'map', 'interpolate', 'MONTHS_BALANCE', 'groupby', 'count', 'sum', 'locbureau_balance', 'DataFrame', 'reset_index', 'fillna', 'collect', 'sort_values', 'DAYS_CREDIT', 'locbureau', 'max', 'min', 'diff', 'iter', 'application_interval', 'mean', 'agg', 'DAYS_CREDIT_ENDDATE', 'float', 'get_dummies', 'merge', 'print', 'to_csv', 'filterwarnings', 'nunique', 'CNT_INSTALMENT_MATURE_CUM', 'loccredit_card_balance', 'AMT_DRAWINGS_CURRENTccb_temp', 'loclast_month_credit', 'DAYS_INSTALMENTrecent_record', 'AMT_INSTALMENTrecent_record', 'NUM_INSTALMENT_VERSION', 'DAYS_INSTALMENTinstallments_payments', 'AMT_INSTALMENTinstallments_payments', 'ip_total_late_times_1y', 'ip_total_late_times_6m', 'range', 'iloci', 'rename', 'NAME_CONTRACT_STATUS', 'locPOS_CASH_balance', 'locpcb_temp_dummy', 'pcb_total_dpd_days', 'pcb_total_largedpd_days', 'pcb_total_dpd_days_1y', 'pcb_total_largedpd_days_1y', 'pcb_total_dpd_days_2y', 'pcb_total_largedpd_days_2y', 'append', 'concat', 'HOUR_APPR_PROCESS_START', 'NFLAG_LAST_APPL_IN_DAY', 'NFLAG_INSURED_ON_APPROVAL', 'drop', 'ilocnum_col', 'AMT_APPLICATIONnum_pa', 'DAYS_DECISION', 'AMT_CREDIT_SUM', 'AMT_CREDIT_SUM_DEBT', 'replace', 'astype', 'Normalizer', 'fit_transform', 'GaussianMixture', 'fit', 'predict_proba', 'round', 'time', 'NAME_YIELD_GROUP', 'replace_day_outliers', 'Timestamp', 'to_timedelta', 'EntitySet', 'entity_from_dataframe', 'Relationship', 'add_relationships', 'dfs', 'align', 'head', 'LabelEncoder', 'enumerate', 'transform', 'ValueError', 'list', 'array', 'KFold', 'zeros', 'split', 'LGBMClassifier', 'enable', 'roc_auc_score', 'model']",101,"['pandas', 'numpy', 'matplotlib', 'seaborn', 'gc\n', 'warnings\n', 'sklearn', 'featuretools', 'time\n', 're\n', 'lightgbm']",11,"[1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",1103,,,,couldnt find
home-credit-fastai-trial.py,"print,pd.read_csv,pd.read_csv,app_train.fillna,app_test.fillna,len,df.set_index,app_trainv.astype,None.cat.as_ordered,apply_cats,app_trainv.astype,app_testv.astype,proc_df,proc_df,int,list,ColumnarModelData.from_data_frame,len,min,md.get_learner,F.nll_loss,roc_auc_score,m.lr_find,m.sched.plot,m.fit,m.fit,np.exp,app_test.to_csv",28,"['print', 'read_csv', 'read_csv', 'fillna', 'fillna', 'len', 'set_index', 'astype', 'cat', 'apply_cats', 'astype', 'astype', 'proc_df', 'proc_df', 'int', 'list', 'from_data_frame', 'len', 'min', 'get_learner', 'nll_loss', 'roc_auc_score', 'lr_find', 'sched', 'fit', 'fit', 'exp', 'to_csv']","['print', 'read_csv', 'fillna', 'len', 'set_index', 'astype', 'cat', 'apply_cats', 'proc_df', 'int', 'list', 'from_data_frame', 'min', 'get_learner', 'nll_loss', 'roc_auc_score', 'lr_find', 'sched', 'fit', 'exp', 'to_csv']",21,"['numpy', 'pandas', 'os\n', 'fastai', 'sklearn']",5,"[1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",225,,,,couldnt find
hyperparameter_tuning_with_caret.R,NA,0,['NA'],['NA'],1,[],0,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",40,,,,couldnt find
home-credit.ipynb,NA,0,['NA'],['NA'],1,"['make_subplots\\n"",\n', 'LogisticRegression\\n"",\n', 'SMOTE""\n']",3,"[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",3407,,,,couldnt find
addnewfeature_lightgbm_with_simple_features.py,"warnings.simplefilter,time.time,print,list,pd.get_dummies,pd.read_csv,pd.read_csv,print,df.append,None.reset_index,df.replace,df.groupby,None.median,dfdocs.kurtosis,dflive.sum,df.map,df.mean,df.std,df.fillna,pd.factorize,one_hot_encoder,gc.collect,pd.read_csv,pd.read_csv,one_hot_encoder,one_hot_encoder,bb.groupby,None.agg,pd.Index,bureau.join,bureau.drop,gc.collect,bureau.groupby,None.agg,pd.Index,active.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,closed.groupby,None.agg,pd.Index,bureau_agg.join,gc.collect,pd.read_csv,one_hot_encoder,prev.replace,prev.replace,prev.replace,prev.replace,prev.replace,prev.groupby,None.agg,pd.Index,approved.groupby,None.agg,pd.Index,prev_agg.join,refused.groupby,None.agg,pd.Index,prev_agg.join,gc.collect,pd.read_csv,one_hot_encoder,pos.groupby,None.agg,pd.Index,pos.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,ins.apply,ins.apply,ins.groupby,None.agg,pd.Index,ins.groupby,None.size,gc.collect,pd.read_csv,one_hot_encoder,cc.drop,cc.groupby,None.agg,pd.Index,cc.groupby,None.size,gc.collect,df.notnull,df.isnull,print,gc.collect,StratifiedKFold,KFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test_df.to_csv,display_importances,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,application_train_test,timer,bureau_and_balance,print,df.join,gc.collect,timer,previous_applications,print,df.join,gc.collect,timer,pos_cash,print,df.join,gc.collect,timer,installments_payments,print,df.join,gc.collect,timer,credit_card_balance,print,df.join,gc.collect,timer,kfold_lightgbm,timer,main",154,"['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'read_csv', 'print', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'read_csv', 'read_csv', 'one_hot_encoder', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'join', 'drop', 'collect', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'collect', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'replace', 'replace', 'replace', 'replace', 'replace', 'groupby', 'agg', 'Index', 'groupby', 'agg', 'Index', 'join', 'groupby', 'agg', 'Index', 'join', 'collect', 'read_csv', 'one_hot_encoder', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'apply', 'apply', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'read_csv', 'one_hot_encoder', 'drop', 'groupby', 'agg', 'Index', 'groupby', 'size', 'collect', 'notnull', 'isnull', 'print', 'collect', 'StratifiedKFold', 'KFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'display_importances', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'print', 'join', 'collect', 'timer', 'previous_applications', 'print', 'join', 'collect', 'timer', 'pos_cash', 'print', 'join', 'collect', 'timer', 'installments_payments', 'print', 'join', 'collect', 'timer', 'credit_card_balance', 'print', 'join', 'collect', 'timer', 'kfold_lightgbm', 'timer', 'main']","['simplefilter', 'time', 'print', 'list', 'get_dummies', 'read_csv', 'append', 'reset_index', 'replace', 'groupby', 'median', 'kurtosis', 'sum', 'map', 'mean', 'std', 'fillna', 'factorize', 'one_hot_encoder', 'collect', 'agg', 'Index', 'join', 'drop', 'size', 'apply', 'notnull', 'isnull', 'StratifiedKFold', 'KFold', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'to_csv', 'display_importances', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'application_train_test', 'timer', 'bureau_and_balance', 'previous_applications', 'pos_cash', 'installments_payments', 'credit_card_balance', 'kfold_lightgbm', 'main']",55,"['numpy', 'pandas', 'gc\n', 'time\n', 'contextlib', 'lightgbm', 'sklearn', 'matplotlib', 'seaborn', 'warnings\n']",10,"[1 1 1 1 1 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",387,,,,couldnt find
home-credit-default-risk (2).py,"warnings.filterwarnings,print,pd.read_csv,print,app_train.head,pd.read_csv,print,app_test.head,app_train.value_counts,app_train.astype,None.plot.hist,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,miss_val_table.rename,miss_val_table_renamed_colsmiss_val_table_renamed_cols.iloc.sort_values,None.round,print,print,missing_values_table,missing_values.head,app_train.dtypes.value_counts,app_train.select_dtypes,None.apply,LabelEncoder,len,le.fit,le.transform,le.transform,print,print,pd.get_dummies,pd.get_dummies,print,print,app_train.align,print,print,app_train.describe,app_train.describe,app_train.describe,app_train.describe,app_train.plot.hist,plt.xlabel,print,print,print,app_train.replace,app_train.plot.hist,plt.xlabel,app_test.replace,print,app_train.corr,None.sort_values,print,print,abs,plt.style.use,plt.hist,plt.title,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,plt.xlabel,pd.cut,age_data.head,age_data.groupby,None.mean,plt.figure,plt.bar,plt.xticks,plt.xlabel,plt.ylabel,plt.title,ext_data.corr,plt.figure,sns.heatmap,plt.title,Imputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,app_train.merge,app_test.merge,app_train_poly.align,print,print,app_train.copy,app_test.copy,app_train.drop,list,app_test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,submit.head,submit.to_csv",124,"['filterwarnings', 'print', 'read_csv', 'print', 'head', 'read_csv', 'print', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'print', 'print', 'missing_values_table', 'head', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit', 'transform', 'transform', 'print', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'describe', 'describe', 'describe', 'plot', 'xlabel', 'print', 'print', 'print', 'replace', 'plot', 'xlabel', 'replace', 'print', 'corr', 'sort_values', 'print', 'print', 'abs', 'style', 'hist', 'title', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'xlabel', 'cut', 'head', 'groupby', 'mean', 'figure', 'bar', 'xticks', 'xlabel', 'ylabel', 'title', 'corr', 'figure', 'heatmap', 'title', 'Imputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'drop', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'head', 'to_csv']","['filterwarnings', 'print', 'read_csv', 'head', 'value_counts', 'astype', 'plot', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_values_table', 'dtypes', 'select_dtypes', 'apply', 'LabelEncoder', 'fit', 'transform', 'get_dummies', 'align', 'describe', 'xlabel', 'replace', 'corr', 'sort_values', 'abs', 'style', 'hist', 'title', 'ylabel', 'figure', 'kdeplot', 'cut', 'groupby', 'mean', 'bar', 'xticks', 'heatmap', 'Imputer', 'drop', 'fit_transform', 'PolynomialFeatures', 'get_feature_names', 'DataFrame', 'merge', 'copy', 'list', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'to_csv']",54,"['numpy', 'pandas', 'sklearn', 'os\n', 'warnings\n', 'matplotlib', 'seaborn']",7,"[1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",589,,,,couldnt find
home-credit-default-risk (1).py,"get_ipython,None.run_line_magic,warnings.filterwarnings,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,df.isnull,None.sum,df.isnull,None.sum,len,pd.concat,mis_val_table.rename,mis_val_table_ren_columnsmis_val_table_ren_columns.iloc.sort_values,None.round,missing_table,application_train.drop,application_test.drop,missing_table,bureau.drop,missing_table,missing_table,credit_card_balance.drop,missing_table,missing_table,missing_table,previous_application.drop,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.get_dummies,bureau_balance.groupby,None.agg,pd.merge,sub_dataset_1.groupby,None.agg,credit_card_balance.groupby,None.agg,installments_payments.groupby,None.agg,POS_CASH_balance.groupby,None.agg,previous_application.groupby,None.agg,pd.merge,pd.merge,pd.merge,pd.merge,pd.merge,pd.merge,pd.merge,pd.merge,pd.merge,pd.merge,get_ipython,None.run_line_magic,whole_dataset_train.dropna,print,whole_dataset_train.drop,train_test_split,pd.DataFrame,pd.DataFrame,print,print,print,print,print,label_train.astype,None.plot.hist,np.where,feature_train.iloccat_feature_indices.fillna,feature_val.iloccat_feature_indices.fillna,label_train.value_counts,len,label_train.value_counts,len,np.array,weights_list.append,weights_list.append,Pool,CatBoostClassifier,model_catboost.fit,model_catboost.predict_proba,model_catboost.predict,roc_auc_score,dict,pd.DataFrame,pd.DataFrame,importance_sort.sort_values,get_ipython,None.run_line_magic,np.where,np.where,whole_dataset_train.iloccat_feature.fillna,whole_dataset_train.ilocnum_feature.fillna,np.where,np.where,whole_dataset_test.iloccat_feature.fillna,whole_dataset_test.ilocnum_feature.fillna,whole_dataset_train.drop,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.get_dummies,useful_train_feature.align,useless_train_feature.align,preprocessing.StandardScaler,None.fit,standarder_useful.transform,pd.DataFrame,preprocessing.StandardScaler,None.fit,standarder_useless.transform,pd.DataFrame,standarder_useful.transform,pd.DataFrame,standarder_useless.transform,pd.DataFrame,PCA,pca.fit,pca.transform,pd.DataFrame,pca.transform,pd.DataFrame,pd.concat,pd.concat,train_test_split,pd.DataFrame,pd.DataFrame,print,print,print,print,models.Sequential,model_nn.add,model_nn.add,model_nn.add,model_nn.add,model_nn.add,model_nn.add,model_nn.add,model_nn.summary,tf.metrics.auc,K.get_session,None.run,callbacks.ModelCheckpoint,callbacks.EarlyStopping,callbacks.ReduceLROnPlateau,model_nn.compile,model_nn.fit,model_nn.evaluate,print,print,print,range,plt.plot,plt.plot,plt.title,plt.xlabel,plt.ylabel,plt.legend,plt.show,range,plt.plot,plt.plot,plt.title,plt.xlabel,plt.ylabel,plt.legend,plt.show,range,plt.plot,plt.plot,plt.title,plt.xlabel,plt.ylabel,plt.legend,plt.show,model_nn.predict,pd.read_csv,pd.concat,result.to_csv",190,"['get_ipython', 'run_line_magic', 'filterwarnings', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'isnull', 'sum', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_table', 'drop', 'drop', 'missing_table', 'drop', 'missing_table', 'missing_table', 'drop', 'missing_table', 'missing_table', 'missing_table', 'drop', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'get_dummies', 'get_dummies', 'get_dummies', 'groupby', 'agg', 'merge', 'groupby', 'agg', 'groupby', 'agg', 'groupby', 'agg', 'groupby', 'agg', 'groupby', 'agg', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'get_ipython', 'run_line_magic', 'dropna', 'print', 'drop', 'train_test_split', 'DataFrame', 'DataFrame', 'print', 'print', 'print', 'print', 'print', 'astype', 'plot', 'where', 'iloccat_feature_indices', 'iloccat_feature_indices', 'value_counts', 'len', 'value_counts', 'len', 'array', 'append', 'append', 'Pool', 'CatBoostClassifier', 'fit', 'predict_proba', 'predict', 'roc_auc_score', 'dict', 'DataFrame', 'DataFrame', 'sort_values', 'get_ipython', 'run_line_magic', 'where', 'where', 'iloccat_feature', 'ilocnum_feature', 'where', 'where', 'iloccat_feature', 'ilocnum_feature', 'drop', 'get_dummies', 'get_dummies', 'get_dummies', 'get_dummies', 'align', 'align', 'StandardScaler', 'fit', 'transform', 'DataFrame', 'StandardScaler', 'fit', 'transform', 'DataFrame', 'transform', 'DataFrame', 'transform', 'DataFrame', 'PCA', 'fit', 'transform', 'DataFrame', 'transform', 'DataFrame', 'concat', 'concat', 'train_test_split', 'DataFrame', 'DataFrame', 'print', 'print', 'print', 'print', 'Sequential', 'add', 'add', 'add', 'add', 'add', 'add', 'add', 'summary', 'metrics', 'get_session', 'run', 'ModelCheckpoint', 'EarlyStopping', 'ReduceLROnPlateau', 'compile', 'fit', 'evaluate', 'print', 'print', 'print', 'range', 'plot', 'plot', 'title', 'xlabel', 'ylabel', 'legend', 'show', 'range', 'plot', 'plot', 'title', 'xlabel', 'ylabel', 'legend', 'show', 'range', 'plot', 'plot', 'title', 'xlabel', 'ylabel', 'legend', 'show', 'predict', 'read_csv', 'concat', 'to_csv']","['get_ipython', 'run_line_magic', 'filterwarnings', 'read_csv', 'isnull', 'sum', 'len', 'concat', 'rename', 'iloc', 'round', 'missing_table', 'drop', 'print', 'get_dummies', 'groupby', 'agg', 'merge', 'dropna', 'train_test_split', 'DataFrame', 'astype', 'plot', 'where', 'iloccat_feature_indices', 'value_counts', 'array', 'append', 'Pool', 'CatBoostClassifier', 'fit', 'predict_proba', 'predict', 'roc_auc_score', 'dict', 'sort_values', 'iloccat_feature', 'ilocnum_feature', 'align', 'StandardScaler', 'transform', 'PCA', 'Sequential', 'add', 'summary', 'metrics', 'get_session', 'run', 'ModelCheckpoint', 'EarlyStopping', 'ReduceLROnPlateau', 'compile', 'evaluate', 'range', 'title', 'xlabel', 'ylabel', 'legend', 'show', 'to_csv']",60,"['numpy', 'pandas', 'matplotlib', 'warnings\n', 'missingno', 'sklearn', 'catboost', 'tensorflow', 'keras', 'plot_model\n', 'SVG\n', 'model_to_dot\n', 'saved', 'load_model\n']",14,"[1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",599,,,,couldnt find
home_credit_default_with_lgbm.py,"print,print,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.read_csv,pd.concat,print,buro_balance.groupby,None.size,buro_balance.groupby,None.max,buro_balance.groupby,None.min,buro_balance.groupby,None.value_counts,buro_counts.unstack,buro.join,gc.collect,print,pd.get_dummies,prev.groupby,None.mean,prev.groupby,None.count,gc.collect,print,pd.get_dummies,buro.groupby,None.mean,buro.groupby,None.count,gc.collect,print,LabelEncoder,le.fit_transform,POS_CASH.groupby,None.nunique,POS_CASH.groupby,None.max,POS_CASH.drop,print,le.fit_transform,credit_card.groupby,None.nunique,credit_card.groupby,None.max,credit_card.drop,print,payments.groupby,None.mean,payments.groupby,None.max,payments.groupby,None.min,print,df.merge,df.merge,df.merge,df.merge,df.merge,df.merge,df.merge,df.fillna,df.fillna,df.fillna,df.fillna,df.fillna,df.fillna,LabelEncoder,le.fit,le.transform,gc.collect,OneHotEncoder,ohe.fit_transform,None.toarray,pd.DataFrame,pd.concat,df.drop,gc.collect,train_test_split,lgb.Dataset,lgb.Dataset,lgb.train,print,lgbm.predict,pd.read_csv,submission.to_csv",92,"['print', 'print', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'read_csv', 'concat', 'print', 'groupby', 'size', 'groupby', 'max', 'groupby', 'min', 'groupby', 'value_counts', 'unstack', 'join', 'collect', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'collect', 'print', 'get_dummies', 'groupby', 'mean', 'groupby', 'count', 'collect', 'print', 'LabelEncoder', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'fit_transform', 'groupby', 'nunique', 'groupby', 'max', 'drop', 'print', 'groupby', 'mean', 'groupby', 'max', 'groupby', 'min', 'print', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'fillna', 'fillna', 'fillna', 'fillna', 'fillna', 'fillna', 'LabelEncoder', 'fit', 'transform', 'collect', 'OneHotEncoder', 'fit_transform', 'toarray', 'DataFrame', 'concat', 'drop', 'collect', 'train_test_split', 'Dataset', 'Dataset', 'train', 'print', 'predict', 'read_csv', 'to_csv']","['print', 'read_csv', 'concat', 'groupby', 'size', 'max', 'min', 'value_counts', 'unstack', 'join', 'collect', 'get_dummies', 'mean', 'count', 'LabelEncoder', 'fit_transform', 'nunique', 'drop', 'merge', 'fillna', 'fit', 'transform', 'OneHotEncoder', 'toarray', 'DataFrame', 'train_test_split', 'Dataset', 'train', 'predict', 'to_csv']",30,"['numpy', 'pandas', 'os,', 'sklearn', 'lightgbm']",5,"[1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",210,,,,couldnt find
home-credit-risk.py,"get_ipython,None.run_line_magic,glob.glob,open,csv.reader,list,len,int,print,path.split,file.split,dfnames.append,exec,exec,print,df_bureau.drop,df_previous_application.replace,df_application_train.head,df_application_train.info,pd.merge,print,dfra.drop,join_df,df_application_train.drop,df_application_train.drop,df_application_train.drop,join_df_serise,df_train.info,join_df_serise,df_train.head,df_train.fillna,df_train.info,list,list,isinstance,len,df_traincol.replace,df_train.info,sns.pairplot,sns.lmplot,plt.xscale,plt.xlim,plt.show,sns.lmplot,plt.xscale,plt.xlim,plt.yscale,plt.ylim,plt.show,sns.lmplot,plt.xscale,plt.xlim,plt.show,df_train.drop,df_test.fillna,list,list,isinstance,len,df_testcol.replace,print,print,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,print,pd.DataFrame,roc_auc_score,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.groupby,None.mean,None.sort_values,feature_importance_df_.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.figure,enumerate,roc_curve,roc_auc_score,scores.append,plt.plot,plt.plot,roc_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.figure,enumerate,roc_curve,average_precision_score,scores.append,plt.plot,precision_recall_curve,average_precision_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,StratifiedKFold,train_model,display_importances,folds.split,display_roc_curve,display_precision_recall,test_preds.set_index,None.to_csv,sns.distplot",129,"['get_ipython', 'run_line_magic', 'glob', 'open', 'reader', 'list', 'len', 'int', 'print', 'split', 'split', 'append', 'exec', 'exec', 'print', 'drop', 'replace', 'head', 'info', 'merge', 'print', 'drop', 'join_df', 'drop', 'drop', 'drop', 'join_df_serise', 'info', 'join_df_serise', 'head', 'fillna', 'info', 'list', 'list', 'isinstance', 'len', 'replace', 'info', 'pairplot', 'lmplot', 'xscale', 'xlim', 'show', 'lmplot', 'xscale', 'xlim', 'yscale', 'ylim', 'show', 'lmplot', 'xscale', 'xlim', 'show', 'drop', 'fillna', 'list', 'list', 'isinstance', 'len', 'replace', 'print', 'print', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'print', 'DataFrame', 'roc_auc_score', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'figure', 'enumerate', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'plot', 'roc_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'figure', 'enumerate', 'roc_curve', 'average_precision_score', 'append', 'plot', 'precision_recall_curve', 'average_precision_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'StratifiedKFold', 'train_model', 'display_importances', 'split', 'display_roc_curve', 'display_precision_recall', 'set_index', 'to_csv', 'distplot']","['get_ipython', 'run_line_magic', 'glob', 'open', 'reader', 'list', 'len', 'int', 'print', 'split', 'append', 'exec', 'drop', 'replace', 'head', 'info', 'merge', 'join_df', 'join_df_serise', 'fillna', 'isinstance', 'pairplot', 'lmplot', 'xscale', 'xlim', 'show', 'yscale', 'ylim', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'concat', 'roc_auc_score', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'roc_curve', 'plot', 'xlabel', 'ylabel', 'legend', 'average_precision_score', 'precision_recall_curve', 'StratifiedKFold', 'train_model', 'display_importances', 'display_roc_curve', 'display_precision_recall', 'set_index', 'to_csv', 'distplot']",59,"['numpy', 'pandas', 'matplotlib', 'seaborn', 'glob\n', 'pathlib\n', 'csv\n', 'sklearn', 'lightgbm']",9,"[1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",724,,,,couldnt find
good_fun_lightgbm_in_depth.py,"gc.enable,pd.set_option,pd.read_csv,print,print,pd.concat,None.drop,print,buro_bal.groupby,None.count,buro_bal.map,print,buro_bal.groupby,None.mean,gc.collect,print,pd.read_csv,print,pd.get_dummies,pd.get_dummies,pd.get_dummies,pd.concat,gc.collect,print,buro_full.merge,print,buro_full.groupby,None.count,buro_full.map,print,buro_full.groupby,None.mean,print,buro_full.groupby,None.sum,avg_buro.merge,print,buro_full.groupby,None.std,avg_buro.merge,gc.collect,print,pd.read_csv,print,pd.DataFrame,pd.concat,pd.concat,gc.collect,print,prev.groupby,None.count,prev.map,print,prev.groupby,None.mean,print,prev.groupby,None.sum,avg_prev.merge,print,prev.groupby,None.std,avg_prev.merge,gc.collect,print,pd.read_csv,print,pd.concat,print,pos.groupby,None.count,pos.map,print,pos.groupby,None.mean,print,pos.groupby,None.sum,avg_pos.merge,print,pos.groupby,None.std,avg_pos.merge,gc.collect,print,pd.read_csv,print,pd.concat,cc_bal.groupby,None.count,cc_bal.map,print,cc_bal.groupby,None.mean,print,cc_bal.groupby,None.sum,avg_cc_bal.merge,print,cc_bal.groupby,None.std,avg_cc_bal.merge,gc.collect,print,pd.read_csv,inst.groupby,None.count,inst.map,print,inst.groupby,None.mean,print,inst.groupby,None.sum,avg_inst.merge,print,inst.groupby,None.std,avg_inst.merge,print,pd.read_csv,pd.read_csv,print,pd.factorize,indexer.get_indexer,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,data.merge,test.merge,gc.collect,gc.enable,StratifiedKFold,np.zeros,np.zeros,pd.DataFrame,enumerate,LGBMClassifier,clf.fit,clf.predict_proba,clf.predict_proba,pd.DataFrame,pd.concat,print,gc.collect,print,test.to_csv,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.groupby,None.mean,None.sort_values,feature_importance_df.feature.isin,plt.figure,sns.barplot,plt.title,plt.tight_layout,plt.savefig,plt.figure,enumerate,roc_curve,roc_auc_score,scores.append,plt.plot,plt.plot,roc_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig,plt.figure,precision_recall_curve,roc_auc_score,plt.plot,plt.xlim,plt.ylim,plt.xlabel,plt.ylabel,plt.title,plt.legend,plt.tight_layout,plt.savefig",194,"['enable', 'set_option', 'read_csv', 'print', 'print', 'concat', 'drop', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'collect', 'print', 'read_csv', 'print', 'get_dummies', 'get_dummies', 'get_dummies', 'concat', 'collect', 'print', 'merge', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'DataFrame', 'concat', 'concat', 'collect', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'concat', 'print', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'print', 'concat', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'collect', 'print', 'read_csv', 'groupby', 'count', 'map', 'print', 'groupby', 'mean', 'print', 'groupby', 'sum', 'merge', 'print', 'groupby', 'std', 'merge', 'print', 'read_csv', 'read_csv', 'print', 'factorize', 'get_indexer', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'merge', 'collect', 'enable', 'StratifiedKFold', 'zeros', 'zeros', 'DataFrame', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'predict_proba', 'DataFrame', 'concat', 'print', 'collect', 'print', 'to_csv', 'groupby', 'mean', 'sort_values', 'groupby', 'mean', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'figure', 'enumerate', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'plot', 'roc_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig', 'figure', 'precision_recall_curve', 'roc_auc_score', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'title', 'legend', 'tight_layout', 'savefig']","['enable', 'set_option', 'read_csv', 'print', 'concat', 'drop', 'groupby', 'count', 'map', 'mean', 'collect', 'get_dummies', 'merge', 'sum', 'std', 'DataFrame', 'factorize', 'get_indexer', 'StratifiedKFold', 'zeros', 'enumerate', 'LGBMClassifier', 'fit', 'predict_proba', 'to_csv', 'sort_values', 'feature', 'figure', 'barplot', 'title', 'tight_layout', 'savefig', 'roc_curve', 'roc_auc_score', 'append', 'plot', 'xlim', 'ylim', 'xlabel', 'ylabel', 'legend', 'precision_recall_curve']",42,"['pandas', 'numpy', 'sklearn', 'matplotlib', 'seaborn', 'gc\n', 'lightgbm']",7,"[1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",343,,,,couldnt find
home-cred-default-risk.py,"print,pd.read_csv,print,ATRcolumns_of_data.describe,pd.read_csv,print,ATcolumns_of_data.describe,sns.jointplot,ATRdata.NAME_EDUCATION_TYPE.isin,sns.boxplot,ATRdata.head,DecisionTreeRegressor,model1.fit,model1.predict,pd.DataFrame,submission1.to_csv,pd.read_csv,Bdata.head,init_notebook_mode,Bdata.head,None.assign,None.groupby,None.count,None.reset_index,dtt.pivot,None.fillna,None.values.tolist,iplot,ggplot,aes,geom_bin2d,ggtitle,Pipeline,np.logspace,RandomizedSearchCV,text_clf.fit,text_clf.predict,submission2.to_csv,ATRdata.head,ggplot,aes,aes,geom_point,stat_smooth,facet_wrap,ATRdata.head,ggplot,aes,geom_point,aes,stat_smooth,init_notebook_mode,iplot,init_notebook_mode,iplot,sns.lmplot,model1.predict,pd.DataFrame,submission3.to_csv",59,"['print', 'read_csv', 'print', 'describe', 'read_csv', 'print', 'describe', 'jointplot', 'NAME_EDUCATION_TYPE', 'boxplot', 'head', 'DecisionTreeRegressor', 'fit', 'predict', 'DataFrame', 'to_csv', 'read_csv', 'head', 'init_notebook_mode', 'head', 'assign', 'groupby', 'count', 'reset_index', 'pivot', 'fillna', 'values', 'iplot', 'ggplot', 'aes', 'geom_bin2d', 'ggtitle', 'Pipeline', 'logspace', 'RandomizedSearchCV', 'fit', 'predict', 'to_csv', 'head', 'ggplot', 'aes', 'aes', 'geom_point', 'stat_smooth', 'facet_wrap', 'head', 'ggplot', 'aes', 'geom_point', 'aes', 'stat_smooth', 'init_notebook_mode', 'iplot', 'init_notebook_mode', 'iplot', 'lmplot', 'predict', 'DataFrame', 'to_csv']","['print', 'read_csv', 'describe', 'jointplot', 'NAME_EDUCATION_TYPE', 'boxplot', 'head', 'DecisionTreeRegressor', 'fit', 'predict', 'DataFrame', 'to_csv', 'init_notebook_mode', 'assign', 'groupby', 'count', 'reset_index', 'pivot', 'fillna', 'values', 'iplot', 'ggplot', 'aes', 'geom_bin2d', 'ggtitle', 'Pipeline', 'logspace', 'RandomizedSearchCV', 'geom_point', 'stat_smooth', 'facet_wrap', 'lmplot']",32,"['numpy', 'pandas', 'os\n', 'seaborn', 'sklearn', 'plotly', 'plotnine', 'nltk']",8,"[1 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",288,,,,couldnt find
homecredit.py,"get_ipython,None.run_line_magic,get_ipython,None.system,pd.read_csv,pd.read_csv,train_df.copy,test_df.copy,print,print,train.head,train.value_counts,None.plot.bar,train.describe,train.describe,train.dtypes.value_counts,data.isnull,None.sum,None.sort_values,data.isnull,None.sum,len,None.sort_values,pd.DataFrame,missing_values_table,missing_values.head,train.select_dtypes,None.apply,LabelEncoder,len,le.fit_transform,le.transform,print,print,pd.get_dummies,pd.get_dummies,print,print,train.align,print,print,train.describe,train.describe,train.plot.hist,print,print,print,train.replace,train.plot.hist,test.replace,train.corr,None.sort_values,print,print,abs,train.corr,plt.style.use,plt.hist,plt.xlabel,plt.ylabel,plt.figure,sns.kdeplot,sns.kdeplot,pd.cut,age_data.head,age_data.groupby,None.mean,age_groups.TARGET.plot.bar,plt.title,plt.xlabel,plt.ylabel,ext_data.corr,plt.figure,sns.heatmap,plt.figure,enumerate,plt.subplot,sns.kdeplot,sns.kdeplot,plt.title,plt.xlabel,plt.ylabel,plt.tight_layout,Imputer,poly_features.drop,imputer.fit_transform,imputer.transform,PolynomialFeatures,poly_transformer.fit,poly_transformer.transform,poly_transformer.transform,print,poly_transformer.get_feature_names,pd.DataFrame,poly_features.corr,None.sort_values,print,print,pd.DataFrame,train.merge,test.merge,train_poly.align,print,print,train.copy,test.copy,plt.figure,sns.kdeplot,sns.kdeplot,plt.figure,sns.kdeplot,sns.kdeplot,plt.figure,sns.kdeplot,sns.kdeplot,plt.figure,sns.kdeplot,sns.kdeplot,train.drop,train.copy,list,test.copy,Imputer,MinMaxScaler,imputer.fit,imputer.transform,imputer.transform,scaler.fit,scaler.transform,scaler.transform,print,print,LogisticRegression,log_reg.fit,log_reg.predict_proba,RandomForestClassifier,random_forest.fit,pd.DataFrame,random_forest.predict_proba,list,Imputer,imputer.fit_transform,imputer.transform,MinMaxScaler,scaler.fit_transform,scaler.transform,RandomForestClassifier,random_forest_poly.fit,random_forest_poly.predict_proba,submit.to_csv",150,"['get_ipython', 'run_line_magic', 'get_ipython', 'system', 'read_csv', 'read_csv', 'copy', 'copy', 'print', 'print', 'head', 'value_counts', 'plot', 'describe', 'describe', 'dtypes', 'isnull', 'sum', 'sort_values', 'isnull', 'sum', 'len', 'sort_values', 'DataFrame', 'missing_values_table', 'head', 'select_dtypes', 'apply', 'LabelEncoder', 'len', 'fit_transform', 'transform', 'print', 'print', 'get_dummies', 'get_dummies', 'print', 'print', 'align', 'print', 'print', 'describe', 'describe', 'plot', 'print', 'print', 'print', 'replace', 'plot', 'replace', 'corr', 'sort_values', 'print', 'print', 'abs', 'corr', 'style', 'hist', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'kdeplot', 'cut', 'head', 'groupby', 'mean', 'TARGET', 'title', 'xlabel', 'ylabel', 'corr', 'figure', 'heatmap', 'figure', 'enumerate', 'subplot', 'kdeplot', 'kdeplot', 'title', 'xlabel', 'ylabel', 'tight_layout', 'Imputer', 'drop', 'fit_transform', 'transform', 'PolynomialFeatures', 'fit', 'transform', 'transform', 'print', 'get_feature_names', 'DataFrame', 'corr', 'sort_values', 'print', 'print', 'DataFrame', 'merge', 'merge', 'align', 'print', 'print', 'copy', 'copy', 'figure', 'kdeplot', 'kdeplot', 'figure', 'kdeplot', 'kdeplot', 'figure', 'kdeplot', 'kdeplot', 'figure', 'kdeplot', 'kdeplot', 'drop', 'copy', 'list', 'copy', 'Imputer', 'MinMaxScaler', 'fit', 'transform', 'transform', 'fit', 'transform', 'transform', 'print', 'print', 'LogisticRegression', 'fit', 'predict_proba', 'RandomForestClassifier', 'fit', 'DataFrame', 'predict_proba', 'list', 'Imputer', 'fit_transform', 'transform', 'MinMaxScaler', 'fit_transform', 'transform', 'RandomForestClassifier', 'fit', 'predict_proba', 'to_csv']","['get_ipython', 'run_line_magic', 'system', 'read_csv', 'copy', 'print', 'head', 'value_counts', 'plot', 'describe', 'dtypes', 'isnull', 'sum', 'sort_values', 'len', 'DataFrame', 'missing_values_table', 'select_dtypes', 'apply', 'LabelEncoder', 'fit_transform', 'transform', 'get_dummies', 'align', 'replace', 'corr', 'abs', 'style', 'hist', 'xlabel', 'ylabel', 'figure', 'kdeplot', 'cut', 'groupby', 'mean', 'TARGET', 'title', 'heatmap', 'enumerate', 'subplot', 'tight_layout', 'Imputer', 'drop', 'PolynomialFeatures', 'fit', 'get_feature_names', 'merge', 'list', 'MinMaxScaler', 'LogisticRegression', 'predict_proba', 'RandomForestClassifier', 'to_csv']",54,"['pandas', 'numpy', 'matplotlib', 'seaborn', 'sklearn']",5,"[1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]",591,,,,couldnt find